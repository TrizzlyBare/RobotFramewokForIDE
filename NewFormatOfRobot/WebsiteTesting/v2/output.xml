<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.2.2 (Python 3.13.2 on darwin)" generated="2025-04-29T15:58:58.546497" rpa="false" schemaversion="5">
<suite id="s1" name="Test Web Code" source="/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_web_code.robot">
<kw name="Setup Test Environment" type="SETUP">
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.613269" level="INFO" html="true">Created directory '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results&lt;/a&gt;'.</msg>
<arg>${OUTPUT_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-04-29T15:58:58.613041" elapsed="0.000263"/>
</kw>
<kw name="Remove Files" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.613496" level="INFO" html="true">File '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results/*.json"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results/*.json&lt;/a&gt;' does not exist.</msg>
<arg>${OUTPUT_DIR}/*.json</arg>
<doc>Uses `Remove File` to remove multiple files one-by-one.</doc>
<status status="PASS" start="2025-04-29T15:58:58.613360" elapsed="0.000159"/>
</kw>
<kw name="Join Path" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.613616" level="INFO">${temp_dir} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp</msg>
<var>${temp_dir}</var>
<arg>/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2</arg>
<arg>temp</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<status status="PASS" start="2025-04-29T15:58:58.613563" elapsed="0.000062"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.613753" level="INFO" html="true">Created directory '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp&lt;/a&gt;'.</msg>
<arg>${temp_dir}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-04-29T15:58:58.613661" elapsed="0.000110"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.612766" elapsed="0.001028"/>
</kw>
<test id="s1-t1" name="Test Default Code Consistency With Specific Feedback" line="24">
<kw name="Extract JSON Files">
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.614308" level="INFO">Extracting JSON from /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/students.json...</msg>
<arg>Extracting JSON from ${file_path}...</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.614256" elapsed="0.000070"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-04-29T15:58:58.614471" level="INFO">Starting process:
python /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/json_helper.py extract /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/students.json</msg>
<msg time="2025-04-29T15:58:58.616796" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-04-29T15:58:58.636895" level="INFO">Process completed.</msg>
<msg time="2025-04-29T15:58:58.637109" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>python</arg>
<arg>${HELPER_SCRIPT}</arg>
<arg>extract</arg>
<arg>${file_path}</arg>
<arg>stderr=STDOUT</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-04-29T15:58:58.614362" elapsed="0.022770"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.638146" level="INFO">Process output: HTML_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_html.html
CSS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_css.css
JS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_js.js</msg>
<arg>Process output: ${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.637597" elapsed="0.000585"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.638525" level="INFO">${rc} = 0</msg>
<var>${rc}</var>
<arg>${result.rc}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.638270" elapsed="0.000267"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.638636" level="INFO">Process return code: 0</msg>
<arg>Process return code: ${rc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.638586" elapsed="0.000069"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${rc} != 0</arg>
<arg>Log</arg>
<arg>Error extracting data: ${result.stdout}</arg>
<arg>WARN</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-04-29T15:58:58.638710" elapsed="0.000075"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.639066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>0</arg>
<arg>Failed to extract data from ${file_path}: ${result.stdout}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-04-29T15:58:58.638844" elapsed="0.000252"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2025-04-29T15:58:58.639293" level="INFO">3 lines returned</msg>
<msg time="2025-04-29T15:58:58.639319" level="INFO">${lines} = ['HTML_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_html.html', 'CSS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOf...</msg>
<var>${lines}</var>
<arg>${result.stdout}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2025-04-29T15:58:58.639141" elapsed="0.000186"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.639520" level="INFO">${html_path} = </msg>
<var>${html_path}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.639363" elapsed="0.000165"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.639703" level="INFO">${css_path} = </msg>
<var>${css_path}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.639564" elapsed="0.000147"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.639880" level="INFO">${js_path} = </msg>
<var>${js_path}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.639743" elapsed="0.000145"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Strip String" owner="String">
<msg time="2025-04-29T15:58:58.640152" level="INFO">${stripped} = HTML_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_html.html</msg>
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-04-29T15:58:58.640098" elapsed="0.000062"/>
</kw>
<if>
<branch type="IF" condition="&quot;${stripped}&quot; != &quot;${EMPTY}&quot;">
<if>
<branch type="IF" condition="$stripped.startswith(&quot;HTML_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.640610" level="INFO">${html_path} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_html.html</msg>
<var>${html_path}</var>
<arg>${stripped.replace("HTML_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.640465" elapsed="0.000197"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.640364" elapsed="0.000312"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;CSS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${css_path}</var>
<arg>${stripped.replace("CSS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.640730" elapsed="0.000007"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.640690" elapsed="0.000059"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;JS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${js_path}</var>
<arg>${stripped.replace("JS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.640789" elapsed="0.000005"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.640758" elapsed="0.000047"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.640357" elapsed="0.000455"/>
</if>
<status status="PASS" start="2025-04-29T15:58:58.640192" elapsed="0.000630"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.640182" elapsed="0.000647"/>
</if>
<var name="${line}">HTML_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_html.html</var>
<status status="PASS" start="2025-04-29T15:58:58.640060" elapsed="0.000776"/>
</iter>
<iter>
<kw name="Strip String" owner="String">
<msg time="2025-04-29T15:58:58.640988" level="INFO">${stripped} = CSS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_css.css</msg>
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-04-29T15:58:58.640931" elapsed="0.000071"/>
</kw>
<if>
<branch type="IF" condition="&quot;${stripped}&quot; != &quot;${EMPTY}&quot;">
<if>
<branch type="IF" condition="$stripped.startswith(&quot;HTML_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${html_path}</var>
<arg>${stripped.replace("HTML_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.641250" elapsed="0.000007"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.641182" elapsed="0.000087"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;CSS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.641480" level="INFO">${css_path} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_css.css</msg>
<var>${css_path}</var>
<arg>${stripped.replace("CSS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.641333" elapsed="0.000156"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.641278" elapsed="0.000222"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;JS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${js_path}</var>
<arg>${stripped.replace("JS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.641541" elapsed="0.000006"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.641509" elapsed="0.000048"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.641177" elapsed="0.000388"/>
</if>
<status status="PASS" start="2025-04-29T15:58:58.641024" elapsed="0.000548"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.641019" elapsed="0.000559"/>
</if>
<var name="${line}">CSS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_css.css</var>
<status status="PASS" start="2025-04-29T15:58:58.640899" elapsed="0.000687"/>
</iter>
<iter>
<kw name="Strip String" owner="String">
<msg time="2025-04-29T15:58:58.641718" level="INFO">${stripped} = JS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_js.js</msg>
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-04-29T15:58:58.641668" elapsed="0.000058"/>
</kw>
<if>
<branch type="IF" condition="&quot;${stripped}&quot; != &quot;${EMPTY}&quot;">
<if>
<branch type="IF" condition="$stripped.startswith(&quot;HTML_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${html_path}</var>
<arg>${stripped.replace("HTML_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.641948" elapsed="0.000007"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.641894" elapsed="0.000073"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;CSS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${css_path}</var>
<arg>${stripped.replace("CSS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.642026" elapsed="0.000006"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.641975" elapsed="0.000067"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;JS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.642236" level="INFO">${js_path} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_js.js</msg>
<var>${js_path}</var>
<arg>${stripped.replace("JS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.642097" elapsed="0.000148"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.642050" elapsed="0.000207"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.641889" elapsed="0.000376"/>
</if>
<status status="PASS" start="2025-04-29T15:58:58.641747" elapsed="0.000525"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.641742" elapsed="0.000536"/>
</if>
<var name="${line}">JS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_js.js</var>
<status status="PASS" start="2025-04-29T15:58:58.641641" elapsed="0.000644"/>
</iter>
<var>${line}</var>
<value>@{lines}</value>
<status status="PASS" start="2025-04-29T15:58:58.639931" elapsed="0.002363"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.642531" level="INFO">${paths} = {'html_path': '/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_html.html', 'css_path': '/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFo...</msg>
<var>${paths}</var>
<arg>html_path=${html_path}</arg>
<arg>css_path=${css_path}</arg>
<arg>js_path=${js_path}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.642340" elapsed="0.000201"/>
</kw>
<return>
<value>${paths}</value>
<status status="PASS" start="2025-04-29T15:58:58.642568" elapsed="0.000029"/>
</return>
<msg time="2025-04-29T15:58:58.642656" level="INFO">${student_paths} = {'html_path': '/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_html.html', 'css_path': '/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFo...</msg>
<var>${student_paths}</var>
<arg>${STUDENTS_JSON}</arg>
<status status="PASS" start="2025-04-29T15:58:58.614153" elapsed="0.028511"/>
</kw>
<kw name="Extract JSON Files">
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.643046" level="INFO">Extracting JSON from /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/teacher.json...</msg>
<arg>Extracting JSON from ${file_path}...</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.643004" elapsed="0.000062"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-04-29T15:58:58.643228" level="INFO">Starting process:
python /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/json_helper.py extract /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/teacher.json</msg>
<msg time="2025-04-29T15:58:58.645140" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-04-29T15:58:58.664112" level="INFO">Process completed.</msg>
<msg time="2025-04-29T15:58:58.664278" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>python</arg>
<arg>${HELPER_SCRIPT}</arg>
<arg>extract</arg>
<arg>${file_path}</arg>
<arg>stderr=STDOUT</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-04-29T15:58:58.643102" elapsed="0.021194"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.664893" level="INFO">Process output: HTML_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_html.html
CSS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_css.css
JS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_js.js</msg>
<arg>Process output: ${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.664529" elapsed="0.000385"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.665164" level="INFO">${rc} = 0</msg>
<var>${rc}</var>
<arg>${result.rc}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.664970" elapsed="0.000203"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.665258" level="INFO">Process return code: 0</msg>
<arg>Process return code: ${rc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.665214" elapsed="0.000062"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${rc} != 0</arg>
<arg>Log</arg>
<arg>Error extracting data: ${result.stdout}</arg>
<arg>WARN</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-04-29T15:58:58.665325" elapsed="0.000062"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.665624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>0</arg>
<arg>Failed to extract data from ${file_path}: ${result.stdout}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-04-29T15:58:58.665425" elapsed="0.000224"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2025-04-29T15:58:58.665835" level="INFO">3 lines returned</msg>
<msg time="2025-04-29T15:58:58.665859" level="INFO">${lines} = ['HTML_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_html.html', 'CSS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfR...</msg>
<var>${lines}</var>
<arg>${result.stdout}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2025-04-29T15:58:58.665692" elapsed="0.000176"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.666050" level="INFO">${html_path} = </msg>
<var>${html_path}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.665902" elapsed="0.000156"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.666225" level="INFO">${css_path} = </msg>
<var>${css_path}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.666091" elapsed="0.000142"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.666403" level="INFO">${js_path} = </msg>
<var>${js_path}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.666266" elapsed="0.000145"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Strip String" owner="String">
<msg time="2025-04-29T15:58:58.666640" level="INFO">${stripped} = HTML_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_html.html</msg>
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-04-29T15:58:58.666587" elapsed="0.000062"/>
</kw>
<if>
<branch type="IF" condition="&quot;${stripped}&quot; != &quot;${EMPTY}&quot;">
<if>
<branch type="IF" condition="$stripped.startswith(&quot;HTML_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.667064" level="INFO">${html_path} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_html.html</msg>
<var>${html_path}</var>
<arg>${stripped.replace("HTML_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.666917" elapsed="0.000160"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.666836" elapsed="0.000254"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;CSS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${css_path}</var>
<arg>${stripped.replace("CSS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.667137" elapsed="0.000006"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.667100" elapsed="0.000054"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;JS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${js_path}</var>
<arg>${stripped.replace("JS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.667192" elapsed="0.000005"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.667162" elapsed="0.000045"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.666831" elapsed="0.000382"/>
</if>
<status status="PASS" start="2025-04-29T15:58:58.666675" elapsed="0.000547"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.666667" elapsed="0.000562"/>
</if>
<var name="${line}">HTML_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_html.html</var>
<status status="PASS" start="2025-04-29T15:58:58.666558" elapsed="0.000678"/>
</iter>
<iter>
<kw name="Strip String" owner="String">
<msg time="2025-04-29T15:58:58.667374" level="INFO">${stripped} = CSS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_css.css</msg>
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-04-29T15:58:58.667326" elapsed="0.000060"/>
</kw>
<if>
<branch type="IF" condition="&quot;${stripped}&quot; != &quot;${EMPTY}&quot;">
<if>
<branch type="IF" condition="$stripped.startswith(&quot;HTML_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${html_path}</var>
<arg>${stripped.replace("HTML_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.667613" elapsed="0.000006"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.667557" elapsed="0.000104"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;CSS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.667870" level="INFO">${css_path} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_css.css</msg>
<var>${css_path}</var>
<arg>${stripped.replace("CSS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.667724" elapsed="0.000155"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.667671" elapsed="0.000220"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;JS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${js_path}</var>
<arg>${stripped.replace("JS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.667930" elapsed="0.000006"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.667899" elapsed="0.000048"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.667552" elapsed="0.000403"/>
</if>
<status status="PASS" start="2025-04-29T15:58:58.667409" elapsed="0.000553"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.667403" elapsed="0.000566"/>
</if>
<var name="${line}">CSS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_css.css</var>
<status status="PASS" start="2025-04-29T15:58:58.667297" elapsed="0.000678"/>
</iter>
<iter>
<kw name="Strip String" owner="String">
<msg time="2025-04-29T15:58:58.668101" level="INFO">${stripped} = JS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_js.js</msg>
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-04-29T15:58:58.668055" elapsed="0.000060"/>
</kw>
<if>
<branch type="IF" condition="&quot;${stripped}&quot; != &quot;${EMPTY}&quot;">
<if>
<branch type="IF" condition="$stripped.startswith(&quot;HTML_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${html_path}</var>
<arg>${stripped.replace("HTML_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.668334" elapsed="0.000006"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.668280" elapsed="0.000072"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;CSS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${css_path}</var>
<arg>${stripped.replace("CSS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.668411" elapsed="0.000006"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.668360" elapsed="0.000067"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;JS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.668623" level="INFO">${js_path} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_js.js</msg>
<var>${js_path}</var>
<arg>${stripped.replace("JS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.668481" elapsed="0.000151"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.668434" elapsed="0.000210"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.668275" elapsed="0.000376"/>
</if>
<status status="PASS" start="2025-04-29T15:58:58.668136" elapsed="0.000522"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.668130" elapsed="0.000535"/>
</if>
<var name="${line}">JS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_js.js</var>
<status status="PASS" start="2025-04-29T15:58:58.668029" elapsed="0.000642"/>
</iter>
<var>${line}</var>
<value>@{lines}</value>
<status status="PASS" start="2025-04-29T15:58:58.666444" elapsed="0.002236"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.668840" level="INFO">${paths} = {'html_path': '/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_html.html', 'css_path': '/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFor...</msg>
<var>${paths}</var>
<arg>html_path=${html_path}</arg>
<arg>css_path=${css_path}</arg>
<arg>js_path=${js_path}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.668726" elapsed="0.000123"/>
</kw>
<return>
<value>${paths}</value>
<status status="PASS" start="2025-04-29T15:58:58.668872" elapsed="0.000026"/>
</return>
<msg time="2025-04-29T15:58:58.668957" level="INFO">${teacher_paths} = {'html_path': '/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_html.html', 'css_path': '/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFor...</msg>
<var>${teacher_paths}</var>
<arg>${TEACHERS_JSON}</arg>
<status status="PASS" start="2025-04-29T15:58:58.642872" elapsed="0.026094"/>
</kw>
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.669239" level="INFO" html="true">Getting file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_html.html"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_html.html&lt;/a&gt;'.</msg>
<msg time="2025-04-29T15:58:58.669376" level="INFO">${student_html} = &lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Test HTML&lt;/title&gt;
    &lt;style&gt;
        body {
            margin: 20px;
            /* Missing background-color */
        }
        .container {
            ba...</msg>
<var>${student_html}</var>
<arg>${student_paths["html_path"]}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-04-29T15:58:58.669058" elapsed="0.000340"/>
</kw>
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.669767" level="INFO" html="true">Getting file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_css.css"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_css.css&lt;/a&gt;'.</msg>
<msg time="2025-04-29T15:58:58.669859" level="INFO">${student_css} = /* Reset and base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Different order of main selectors */
.container {
    max-width: 1000px;
    margin: 0 auto;
    paddin...</msg>
<var>${student_css}</var>
<arg>${student_paths["css_path"]}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-04-29T15:58:58.669520" elapsed="0.000351"/>
</kw>
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.670112" level="INFO" html="true">Getting file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_js.js"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_js.js&lt;/a&gt;'.</msg>
<msg time="2025-04-29T15:58:58.670177" level="INFO">${student_js} = // Wait for DOM to be fully loaded
document.addEventListener('DOMContentLoaded', function() {
    // Different order of variable declarations
    const contactForm = document.getElementById('contact-f...</msg>
<var>${student_js}</var>
<arg>${student_paths["js_path"]}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-04-29T15:58:58.669944" elapsed="0.000243"/>
</kw>
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.670383" level="INFO" html="true">Getting file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_html.html"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_html.html&lt;/a&gt;'.</msg>
<msg time="2025-04-29T15:58:58.670468" level="INFO">${teacher_html} = &lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Test HTML&lt;/title&gt;
    &lt;style&gt;
        body {
            margin: 20px;
            background-color: #f5f5f5;
        }
        .container {
            backgr...</msg>
<var>${teacher_html}</var>
<arg>${teacher_paths["html_path"]}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-04-29T15:58:58.670240" elapsed="0.000239"/>
</kw>
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.670671" level="INFO" html="true">Getting file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_css.css"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_css.css&lt;/a&gt;'.</msg>
<msg time="2025-04-29T15:58:58.670727" level="INFO">${teacher_css} = /* Reset and base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Teacher's order of main selectors */
body {
    font-family: Helvetica, sans-serif;
    line-height: 1....</msg>
<var>${teacher_css}</var>
<arg>${teacher_paths["css_path"]}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-04-29T15:58:58.670529" elapsed="0.000208"/>
</kw>
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.670924" level="INFO" html="true">Getting file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_js.js"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_js.js&lt;/a&gt;'.</msg>
<msg time="2025-04-29T15:58:58.670974" level="INFO">${teacher_js} = // Wait for DOM to be fully loaded
document.addEventListener('DOMContentLoaded', function() {
    // Teacher's order of variable declarations
    const result = document.getElementById('result');
    ...</msg>
<var>${teacher_js}</var>
<arg>${teacher_paths["js_path"]}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-04-29T15:58:58.670783" elapsed="0.000200"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.671180" level="INFO">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Test HTML&lt;/title&gt;
    &lt;style&gt;
        body {
            margin: 20px;
            /* Missing background-color */
        }
        .container {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        h1 {
            color: #4a5568;
        }
        .color-box {
            display: inline-block;
            width: 50px;
            height: 50px;
            margin: 5px;
            border-radius: 5px;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class="container"&gt;
        &lt;h1&gt;Order Testing Example&lt;/h1&gt;
        &lt;p&gt;This example is used to test element order detection.&lt;/p&gt;
        
        &lt;!-- Different order of headings compared to teacher version --&gt;
        &lt;h3&gt;Third Heading&lt;/h3&gt;
        &lt;h2&gt;Interactive Elements:&lt;/h2&gt;
        
        &lt;!-- Different order of buttons --&gt;
        &lt;div class="button-container"&gt;
            &lt;button class="secondary" onclick="cancelAction()"&gt;Cancel&lt;/button&gt;
            &lt;button class="primary" onclick="saveData()"&gt;Save&lt;/button&gt;
            &lt;button class="danger" onclick="deleteItem()"&gt;Delete&lt;/button&gt;
        &lt;/div&gt;
        
        &lt;h2&gt;Color Boxes:&lt;/h2&gt;
        &lt;!-- Different order of color boxes --&gt;
        &lt;div class="color-box" style="background-color: #3357FF;"&gt;&lt;/div&gt;
        &lt;div class="color-box" style="background-color: #FF5733;"&gt;&lt;/div&gt;
        &lt;div class="color-box" style="background-color: #33FF57;"&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;

!=

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Test HTML&lt;/title&gt;
    &lt;style&gt;
        body {
            margin: 20px;
            background-color: #f5f5f5;
        }
        .container {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        h1 {
            color: #4a5568;
        }
        .color-box {
            display: inline-block;
            width: 50px;
            height: 50px;
            margin: 5px;
            border-radius: 5px;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class="container"&gt;
        &lt;h1&gt;Order Testing Example&lt;/h1&gt;
        &lt;p&gt;This example is used to test element order detection.&lt;/p&gt;
        
        &lt;!-- Teacher's order of headings --&gt;
        &lt;h2&gt;Interactive Elements:&lt;/h2&gt;
        &lt;h3&gt;Third Heading&lt;/h3&gt;
        
        &lt;!-- Teacher's order of buttons --&gt;
        &lt;div class="button-container"&gt;
            &lt;button class="primary" onclick="saveData()"&gt;Save&lt;/button&gt;
            &lt;button class="secondary" onclick="cancelAction()"&gt;Cancel&lt;/button&gt;
            &lt;button class="danger" onclick="deleteItem()"&gt;Delete&lt;/button&gt;
        &lt;/div&gt;
        
        &lt;h2&gt;Color Boxes:&lt;/h2&gt;
        &lt;!-- Teacher's order of color boxes --&gt;
        &lt;div class="color-box" style="background-color: #FF5733;"&gt;&lt;/div&gt;
        &lt;div class="color-box" style="background-color: #33FF57;"&gt;&lt;/div&gt;
        &lt;div class="color-box" style="background-color: #3357FF;"&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</msg>
<msg time="2025-04-29T15:58:58.671373" level="FAIL">Multiline strings are different:
--- first
+++ second
@@ -5,7 +5,7 @@
     &lt;style&gt;
         body {
             margin: 20px;
-            /* Missing background-color */
+            background-color: #f5f5f5;
         }
         .container {
             background-color: white;
@@ -30,22 +30,22 @@
         &lt;h1&gt;Order Testing Example&lt;/h1&gt;
         &lt;p&gt;This example is used to test element order detection.&lt;/p&gt;
 
-        &lt;!-- Different order of headings compared to teacher version --&gt;
+        &lt;!-- Teacher's order of headings --&gt;
+        &lt;h2&gt;Interactive Elements:&lt;/h2&gt;
         &lt;h3&gt;Third Heading&lt;/h3&gt;
-        &lt;h2&gt;Interactive Elements:&lt;/h2&gt;
 
-        &lt;!-- Different order of buttons --&gt;
+        &lt;!-- Teacher's order of buttons --&gt;
         &lt;div class="button-container"&gt;
+            &lt;button class="primary" onclick="saveData()"&gt;Save&lt;/button&gt;
             &lt;button class="secondary" onclick="cancelAction()"&gt;Cancel&lt;/button&gt;
-            &lt;button class="primary" onclick="saveData()"&gt;Save&lt;/button&gt;
             &lt;button class="danger" onclick="deleteItem()"&gt;Delete&lt;/button&gt;
         &lt;/div&gt;
 
         &lt;h2&gt;Color Boxes:&lt;/h2&gt;
-        &lt;!-- Different order of color boxes --&gt;
-        &lt;div class="color-box" style="background-color: #3357FF;"&gt;&lt;/div&gt;
+        &lt;!-- Teacher's order of color boxes --&gt;
         &lt;div class="color-box" style="background-color: #FF5733;"&gt;&lt;/div&gt;
         &lt;div class="color-box" style="background-color: #33FF57;"&gt;&lt;/div&gt;
+        &lt;div class="color-box" style="background-color: #3357FF;"&gt;&lt;/div&gt;
     &lt;/div&gt;
 &lt;/body&gt;
 &lt;/html&gt;</msg>
<arg>${student_html}</arg>
<arg>${teacher_html}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2025-04-29T15:58:58.671113" elapsed="0.000611">Multiline strings are different:
--- first
+++ second
@@ -5,7 +5,7 @@
     &lt;style&gt;
         body {
             margin: 20px;
-            /* Missing background-color */
+            background-color: #f5f5f5;
         }
         .container {
             background-color: white;
@@ -30,22 +30,22 @@
         &lt;h1&gt;Order Testing Example&lt;/h1&gt;
         &lt;p&gt;This example is used to test element order detection.&lt;/p&gt;
 
-        &lt;!-- Different order of headings compared to teacher version --&gt;
+        &lt;!-- Teacher's order of headings --&gt;
+        &lt;h2&gt;Interactive Elements:&lt;/h2&gt;
         &lt;h3&gt;Third Heading&lt;/h3&gt;
    [ Message content over the limit has been removed. ]
-        &lt;!-- Different order of buttons --&gt;
+        &lt;!-- Teacher's order of buttons --&gt;
         &lt;div class="button-container"&gt;
+            &lt;button class="primary" onclick="saveData()"&gt;Save&lt;/button&gt;
             &lt;button class="secondary" onclick="cancelAction()"&gt;Cancel&lt;/button&gt;
-            &lt;button class="primary" onclick="saveData()"&gt;Save&lt;/button&gt;
             &lt;button class="danger" onclick="deleteItem()"&gt;Delete&lt;/button&gt;
         &lt;/div&gt;
 
         &lt;h2&gt;Color Boxes:&lt;/h2&gt;
-        &lt;!-- Different order of color boxes --&gt;
-        &lt;div class="color-box" style="background-color: #3357FF;"&gt;&lt;/div&gt;
+        &lt;!-- Teacher's order of color boxes --&gt;
         &lt;div class="color-box" style="background-color: #FF5733;"&gt;&lt;/div&gt;
         &lt;div class="color-box" style="background-color: #33FF57;"&gt;&lt;/div&gt;
+        &lt;div class="color-box" style="background-color: #3357FF;"&gt;&lt;/div&gt;
     &lt;/div&gt;
 &lt;/body&gt;
 &lt;/html&gt;</status>
</kw>
<msg time="2025-04-29T15:58:58.671785" level="INFO">${html_match} = False</msg>
<var>${html_match}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${student_html}</arg>
<arg>${teacher_html}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-04-29T15:58:58.671042" elapsed="0.000751"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.671930" level="INFO">@{html_differences} = [ ]</msg>
<var>@{html_differences}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-04-29T15:58:58.671875" elapsed="0.000062"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.672037" level="INFO">@{css_differences} = [ ]</msg>
<var>@{css_differences}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-04-29T15:58:58.671987" elapsed="0.000057"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.672139" level="INFO">@{js_differences} = [ ]</msg>
<var>@{js_differences}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-04-29T15:58:58.672092" elapsed="0.000053"/>
</kw>
<if>
<branch type="IF" condition="not ${html_match}">
<kw name="Compare Html Structure" owner="WebCourseLibrary">
<msg time="2025-04-29T15:58:58.673728" level="INFO">${html_diff_result} = ['Missing background-color: #f5f5f5 in body style rule', 'Color boxes are in wrong order. Expected: #FF5733, #33FF57, #3357FF', 'Heading order is incorrect. Expected: Order Testing Example, Interactiv...</msg>
<var>${html_diff_result}</var>
<arg>${student_html}</arg>
<arg>${teacher_html}</arg>
<doc>Compare HTML structure and return specific differences</doc>
<status status="PASS" start="2025-04-29T15:58:58.672264" elapsed="0.001476"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.673850" level="INFO">@{html_differences} = [ Missing background-color: #f5f5f5 in body style rule | Color boxes are in wrong order. Expected: #FF5733, #33FF57, #3357FF | Heading order is incorrect. Expected: Order Testing Example, Interactive ...</msg>
<var>@{html_differences}</var>
<arg>${html_diff_result}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.673784" elapsed="0.000075"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.673934" level="WARN">HTML differences found:</msg>
<arg>HTML differences found:</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.673895" elapsed="0.000093"/>
</kw>
<kw name="Log Many" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.674124" level="INFO">Missing background-color: #f5f5f5 in body style rule</msg>
<msg time="2025-04-29T15:58:58.674134" level="INFO">Color boxes are in wrong order. Expected: #FF5733, #33FF57, #3357FF</msg>
<msg time="2025-04-29T15:58:58.674142" level="INFO">Heading order is incorrect. Expected: Order Testing Example, Interactive Elements:, Third Heading, Color Boxes:</msg>
<msg time="2025-04-29T15:58:58.674152" level="INFO">WARN</msg>
<arg>@{html_differences}</arg>
<arg>WARN</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.674033" elapsed="0.000130"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.672187" elapsed="0.001988"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.672177" elapsed="0.002010"/>
</if>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.674370" level="INFO">/* Reset and base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Different order of main selectors */
.container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 15px;
}

body {
    line-height: 1.5;
    color: #444;
    background-color: #eaeaea;
}

/* Different order of properties within selectors */
.color-box {
    margin: 5px;
    border-radius: 5px;
    display: inline-block;
    width: 50px;
    height: 50px;
}

/* Header styles */
header {
    background-color: #2c3e50;
    color: white;
    padding: 15px;
    margin-bottom: 15px;
}

header h1 {
    margin-bottom: 15px;
    color: #ecf0f1;
}

nav ul {
    display: block;
    list-style: none;
}

nav ul li {
    margin-right: 15px;
    display: inline-block;
}

nav ul li a {
    color: #ecf0f1;
    text-decoration: none;
}

nav ul li a:hover {
    color: #e74c3c;
}

/* Button styles with different order of properties */
button {
    border: none;
    padding: 8px 12px;
    cursor: pointer;
    border-radius: 2px;
    background-color: #e74c3c;
    color: white;
}

.button-container {
    display: flex;
    gap: 10px;
    margin: 20px 0;
}

.primary {
    background-color: #4299e1;
}

.secondary {
    background-color: #a0aec0;
}

.danger {
    background-color: #f56565;
}

/* Main content styles */
main {
    background-color: #ecf0f1;
    padding: 15px;
    border-radius: 3px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
}

!=

/* Reset and base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Teacher's order of main selectors */
body {
    font-family: Helvetica, sans-serif;
    line-height: 1.5;
    color: #444;
    background-color: #eaeaea;
}

.container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 15px;
}

/* Teacher's order of properties */
.color-box {
    display: inline-block;
    width: 50px;
    height: 50px;
    margin: 5px;
    border-radius: 5px;
}

/* Header styles */
header {
    background-color: #2c3e50;
    color: white;
    padding: 15px;
    margin-bottom: 15px;
}

header h1 {
    margin-bottom: 15px;
    color: #ecf0f1;
}

nav ul {
    display: block;
    list-style: none;
}

nav ul li {
    margin-right: 15px;
    display: inline-block;
}

nav ul li a {
    color: #ecf0f1;
    text-decoration: none;
}

nav ul li a:hover {
    color: #e74c3c;
}

/* Button styles with teacher's order of properties */
button {
    background-color: #e74c3c;
    color: white;
    border: none;
    padding: 8px 12px;
    cursor: pointer;
    border-radius: 2px;
}

.button-container {
    display: flex;
    gap: 10px;
    margin: 20px 0;
}

.primary {
    background-color: #4299e1;
}

.secondary {
    background-color: #a0aec0;
}

.danger {
    background-color: #f56565;
}

/* Main content styles */
main {
    background-color: #ecf0f1;
    padding: 15px;
    border-radius: 3px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
}</msg>
<msg time="2025-04-29T15:58:58.674613" level="FAIL">Multiline strings are different:
--- first
+++ second
@@ -5,26 +5,27 @@
     box-sizing: border-box;
 }
 
-/* Different order of main selectors */
+/* Teacher's order of main selectors */
+body {
+    font-family: Helvetica, sans-serif;
+    line-height: 1.5;
+    color: #444;
+    background-color: #eaeaea;
+}
+
 .container {
     max-width: 1000px;
     margin: 0 auto;
     padding: 15px;
 }
 
-body {
-    line-height: 1.5;
-    color: #444;
-    background-color: #eaeaea;
-}
-
-/* Different order of properties within selectors */
+/* Teacher's order of properties */
 .color-box {
-    margin: 5px;
-    border-radius: 5px;
     display: inline-block;
     width: 50px;
     height: 50px;
+    margin: 5px;
+    border-radius: 5px;
 }
 
 /* Header styles */
@@ -59,14 +60,14 @@
     color: #e74c3c;
 }
 
-/* Button styles with different order of properties */
+/* Button styles with teacher's order of properties */
 button {
+    background-color: #e74c3c;
+    color: white;
     border: none;
     padding: 8px 12px;
     cursor: pointer;
     border-radius: 2px;
-    background-color: #e74c3c;
-    color: white;
 }
 
 .button-container {</msg>
<arg>${student_css}</arg>
<arg>${teacher_css}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2025-04-29T15:58:58.674295" elapsed="0.000357">Multiline strings are different:
--- first
+++ second
@@ -5,26 +5,27 @@
     box-sizing: border-box;
 }
 
-/* Different order of main selectors */
+/* Teacher's order of main selectors */
+body {
+    font-family: Helvetica, sans-serif;
+    line-height: 1.5;
+    color: #444;
+    background-color: #eaeaea;
+}
+
 .container {
     max-width: 1000px;
     margin: 0 auto;
     padding: 15px;
    [ Message content over the limit has been removed. ]
 
 /* Header styles */
@@ -59,14 +60,14 @@
     color: #e74c3c;
 }
 
-/* Button styles with different order of properties */
+/* Button styles with teacher's order of properties */
 button {
+    background-color: #e74c3c;
+    color: white;
     border: none;
     padding: 8px 12px;
     cursor: pointer;
     border-radius: 2px;
-    background-color: #e74c3c;
-    color: white;
 }
 
 .button-container {</status>
</kw>
<msg time="2025-04-29T15:58:58.674709" level="INFO">${css_match} = False</msg>
<var>${css_match}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${student_css}</arg>
<arg>${teacher_css}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-04-29T15:58:58.674241" elapsed="0.000477"/>
</kw>
<if>
<branch type="IF" condition="not ${css_match}">
<kw name="Compare Css Rules" owner="WebCourseLibrary">
<msg time="2025-04-29T15:58:58.675794" level="INFO">${css_diff_result} = ['Missing CSS property in body: font-family: Helvetica, sans-serif', 'CSS selector order is incorrect. Expected: body, .container, .color-box, header, button', 'Properties in button are in wrong order...</msg>
<var>${css_diff_result}</var>
<arg>${student_css}</arg>
<arg>${teacher_css}</arg>
<doc>Compare CSS rules and return specific differences</doc>
<status status="PASS" start="2025-04-29T15:58:58.674842" elapsed="0.000962"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.675897" level="INFO">@{css_differences} = [ Missing CSS property in body: font-family: Helvetica, sans-serif | CSS selector order is incorrect. Expected: body, .container, .color-box, header, button | Properties in button are in wrong order. ...</msg>
<var>@{css_differences}</var>
<arg>${css_diff_result}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.675842" elapsed="0.000063"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.675970" level="WARN">CSS differences found:</msg>
<arg>CSS differences found:</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.675938" elapsed="0.000078"/>
</kw>
<kw name="Log Many" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.676104" level="INFO">Missing CSS property in body: font-family: Helvetica, sans-serif</msg>
<msg time="2025-04-29T15:58:58.676115" level="INFO">CSS selector order is incorrect. Expected: body, .container, .color-box, header, button</msg>
<msg time="2025-04-29T15:58:58.676125" level="INFO">Properties in button are in wrong order. Expected: background-color, color, border...</msg>
<msg time="2025-04-29T15:58:58.676131" level="INFO">Properties in .color-box are in wrong order. Expected: display, width, height...</msg>
<msg time="2025-04-29T15:58:58.676139" level="INFO">WARN</msg>
<arg>@{css_differences}</arg>
<arg>WARN</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.676056" elapsed="0.000092"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.674767" elapsed="0.001392"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.674756" elapsed="0.001412"/>
</if>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.676333" level="INFO">// Wait for DOM to be fully loaded
document.addEventListener('DOMContentLoaded', function() {
    // Different order of variable declarations
    const contactForm = document.getElementById('contact-form');
    const result = document.getElementById('result');
    const buttons = document.querySelectorAll('button');
    
    // Different order of function declarations
    function deleteItem() {
        console.log('Item deleted');
        if (result) {
            result.textContent = 'Item deleted!';
            result.style.backgroundColor = '#ffe6e6';
        }
    }
    
    function saveData() {
        console.log('Data saved');
        if (result) {
            result.textContent = 'Data saved successfully!';
            result.style.backgroundColor = '#e6ffe6';
        }
    }
    
    function cancelAction() {
        console.log('Action canceled');
        if (result) {
            result.textContent = 'Action canceled.';
            result.style.backgroundColor = '#e6f7ff';
        }
    }
    
    // Different order of event listeners
    if (buttons.length &gt; 0) {
        // Registering events in different order
        document.querySelector('.danger').addEventListener('click', deleteItem);
        document.querySelector('.primary').addEventListener('click', saveData);
        document.querySelector('.secondary').addEventListener('click', cancelAction);
    }
    
    // Form submission handling
    if (contactForm) {
        contactForm.addEventListener('submit', function(event) {
            event.preventDefault();
            // Different order of operations
            contactForm.reset();
            if (result) {
                result.textContent = 'Form submitted!';
            }
        });
    }
});

!=

// Wait for DOM to be fully loaded
document.addEventListener('DOMContentLoaded', function() {
    // Teacher's order of variable declarations
    const result = document.getElementById('result');
    const buttons = document.querySelectorAll('button');
    const contactForm = document.getElementById('contact-form');
    
    // Teacher's order of function declarations
    function saveData() {
        console.log('Data saved');
        if (result) {
            result.textContent = 'Data saved successfully!';
            result.style.backgroundColor = '#e6ffe6';
        }
    }
    
    function cancelAction() {
        console.log('Action canceled');
        if (result) {
            result.textContent = 'Action canceled.';
            result.style.backgroundColor = '#e6f7ff';
        }
    }
    
    function deleteItem() {
        console.log('Item deleted');
        if (result) {
            result.textContent = 'Item deleted!';
            result.style.backgroundColor = '#ffe6e6';
        }
    }
    
    // Teacher's order of event listeners
    if (buttons.length &gt; 0) {
        // Events in teacher's order
        document.querySelector('.primary').addEventListener('click', saveData);
        document.querySelector('.secondary').addEventListener('click', cancelAction);
        document.querySelector('.danger').addEventListener('click', deleteItem);
    }
    
    // Form submission handling
    if (contactForm) {
        contactForm.addEventListener('submit', function(event) {
            event.preventDefault();
            // Teacher's order of operations
            if (result) {
                result.textContent = 'Form submitted!';
            }
            contactForm.reset();
        });
    }
});</msg>
<msg time="2025-04-29T15:58:58.676499" level="FAIL">Multiline strings are different:
--- first
+++ second
@@ -1,19 +1,11 @@
 // Wait for DOM to be fully loaded
 document.addEventListener('DOMContentLoaded', function() {
-    // Different order of variable declarations
-    const contactForm = document.getElementById('contact-form');
+    // Teacher's order of variable declarations
     const result = document.getElementById('result');
     const buttons = document.querySelectorAll('button');
+    const contactForm = document.getElementById('contact-form');
 
-    // Different order of function declarations
-    function deleteItem() {
-        console.log('Item deleted');
-        if (result) {
-            result.textContent = 'Item deleted!';
-            result.style.backgroundColor = '#ffe6e6';
-        }
-    }
-
+    // Teacher's order of function declarations
     function saveData() {
         console.log('Data saved');
         if (result) {
@@ -30,23 +22,31 @@
         }
     }
 
-    // Different order of event listeners
+    function deleteItem() {
+        console.log('Item deleted');
+        if (result) {
+            result.textContent = 'Item deleted!';
+            result.style.backgroundColor = '#ffe6e6';
+        }
+    }
+
+    // Teacher's order of event listeners
     if (buttons.length &gt; 0) {
-        // Registering events in different order
-        document.querySelector('.danger').addEventListener('click', deleteItem);
+        // Events in teacher's order
         document.querySelector('.primary').addEventListener('click', saveData);
         document.querySelector('.secondary').addEventListener('click', cancelAction);
+        document.querySelector('.danger').addEventListener('click', deleteItem);
     }
 
     // Form submission handling
     if (contactForm) {
         contactForm.addEventListener('submit', function(event) {
             event.preventDefault();
-            // Different order of operations
-            contactForm.reset();
+            // Teacher's order of operations
             if (result) {
                 result.textContent = 'Form submitted!';
             }
+            contactForm.reset();
         });
     }
 });</msg>
<arg>${student_js}</arg>
<arg>${teacher_js}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2025-04-29T15:58:58.676276" elapsed="0.000275">Multiline strings are different:
--- first
+++ second
@@ -1,19 +1,11 @@
 // Wait for DOM to be fully loaded
 document.addEventListener('DOMContentLoaded', function() {
-    // Different order of variable declarations
-    const contactForm = document.getElementById('contact-form');
+    // Teacher's order of variable declarations
     const result = document.getElementById('result');
     const buttons = document.querySelectorAll('button');
+    const contactForm = document.getElementById('contact-form');
 
-    // Different order of function declarations
-    function deleteItem() {
-        console.log('Item deleted');
-        if (result) {
-            result.textContent = 'Item deleted!';
-            result.style.backgroundColor = '#ffe6e6';
-        }
    [ Message content over the limit has been removed. ]
         document.querySelector('.secondary').addEventListener('click', cancelAction);
+        document.querySelector('.danger').addEventListener('click', deleteItem);
     }
 
     // Form submission handling
     if (contactForm) {
         contactForm.addEventListener('submit', function(event) {
             event.preventDefault();
-            // Different order of operations
-            contactForm.reset();
+            // Teacher's order of operations
             if (result) {
                 result.textContent = 'Form submitted!';
             }
+            contactForm.reset();
         });
     }
 });</status>
</kw>
<msg time="2025-04-29T15:58:58.676588" level="INFO">${js_match} = False</msg>
<var>${js_match}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${student_js}</arg>
<arg>${teacher_js}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-04-29T15:58:58.676222" elapsed="0.000373"/>
</kw>
<if>
<branch type="IF" condition="not ${js_match}">
<kw name="Compare Js Functionality" owner="WebCourseLibrary">
<msg time="2025-04-29T15:58:58.676965" level="INFO">${js_diff_result} = ['Variable declaration order is incorrect. Expected: result, contactForm']</msg>
<var>${js_diff_result}</var>
<arg>${student_js}</arg>
<arg>${teacher_js}</arg>
<doc>Compare JavaScript functionality and return specific differences</doc>
<status status="PASS" start="2025-04-29T15:58:58.676718" elapsed="0.000256"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.677063" level="INFO">@{js_differences} = [ Variable declaration order is incorrect. Expected: result, contactForm ]</msg>
<var>@{js_differences}</var>
<arg>${js_diff_result}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.677010" elapsed="0.000061"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.677134" level="WARN">JavaScript differences found:</msg>
<arg>JavaScript differences found:</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.677103" elapsed="0.000074"/>
</kw>
<kw name="Log Many" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.677257" level="INFO">Variable declaration order is incorrect. Expected: result, contactForm</msg>
<msg time="2025-04-29T15:58:58.677266" level="INFO">WARN</msg>
<arg>@{js_differences}</arg>
<arg>WARN</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.677222" elapsed="0.000054"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.676643" elapsed="0.000644"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.676633" elapsed="0.000662"/>
</if>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-04-29T15:58:58.677428" level="INFO">${timestamp} = 1745917138.677399</msg>
<var>${timestamp}</var>
<arg>result_format=epoch</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-04-29T15:58:58.677349" elapsed="0.000087"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.677711" level="INFO">${result_obj} = {'timestamp': 1745917138.677399, 'html_match': False, 'css_match': False, 'js_match': False, 'html_differences': ['Missing background-color: #f5f5f5 in body style rule', 'Color boxes are in wrong orde...</msg>
<var>${result_obj}</var>
<arg>timestamp=${timestamp}</arg>
<arg>html_match=${html_match}</arg>
<arg>css_match=${css_match}</arg>
<arg>js_match=${js_match}</arg>
<arg>html_differences=${html_differences}</arg>
<arg>css_differences=${css_differences}</arg>
<arg>js_differences=${js_differences}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.677505" elapsed="0.000216"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.677965" level="INFO">${result_json} = {
  "timestamp": 1745917138.677399,
  "html_match": false,
  "css_match": false,
  "js_match": false,
  "html_differences": [
    "Missing background-color: #f5f5f5 in body style rule",
    "Color box...</msg>
<var>${result_json}</var>
<arg>json.dumps(${result_obj}, indent=2)</arg>
<arg>modules=json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-04-29T15:58:58.677787" elapsed="0.000188"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.678086" level="INFO">${filename} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results/defaultcode_comparison_result.json</msg>
<var>${filename}</var>
<arg>${OUTPUT_DIR}/defaultcode_comparison_result.json</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.678032" elapsed="0.000061"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.678350" level="INFO" html="true">Created file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results/defaultcode_comparison_result.json"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results/defaultcode_comparison_result.json&lt;/a&gt;'.</msg>
<arg>${filename}</arg>
<arg>${result_json}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-04-29T15:58:58.678144" elapsed="0.000227"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.678521" level="INFO">${overall_match} = False</msg>
<var>${overall_match}</var>
<arg>${html_match} and ${css_match} and ${js_match}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-04-29T15:58:58.678426" elapsed="0.000103"/>
</kw>
<if>
<branch type="IF" condition="${overall_match}">
<kw name="Log" owner="BuiltIn">
<arg>All code parts match teacher reference.</arg>
<arg>INFO</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.678625" elapsed="0.000007"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.678569" elapsed="0.000074"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.678710" level="WARN">Defaultcode does not match teacher reference. See JSON report for details.</msg>
<arg>Defaultcode does not match teacher reference. See JSON report for details.</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.678680" elapsed="0.000069"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.678651" elapsed="0.000115"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.678559" elapsed="0.000214"/>
</if>
<kw name="Pass Execution" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.678860" level="INFO">Execution passed with message:
Test completed with detailed results saved to JSON</msg>
<arg>Test completed with detailed results saved to JSON</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2025-04-29T15:58:58.678824" elapsed="0.000076">Test completed with detailed results saved to JSON</status>
</kw>
<doc>Test defaultcode consistency with enhanced specific feedback</doc>
<status status="PASS" start="2025-04-29T15:58:58.613820" elapsed="0.065145">Test completed with detailed results saved to JSON</status>
</test>
<test id="s1-t2" name="Test Student Submission Against Teacher Reference" line="108">
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.679364" level="INFO" html="true">Directory '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results&lt;/a&gt;' already exists.</msg>
<arg>${OUTPUT_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-04-29T15:58:58.679295" elapsed="0.000098"/>
</kw>
<kw name="Extract JSON Files">
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.679806" level="INFO">Extracting JSON from /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/students.json...</msg>
<arg>Extracting JSON from ${file_path}...</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.679751" elapsed="0.000076"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-04-29T15:58:58.679995" level="INFO">Starting process:
python /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/json_helper.py extract /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/students.json</msg>
<msg time="2025-04-29T15:58:58.681986" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-04-29T15:58:58.701091" level="INFO">Process completed.</msg>
<msg time="2025-04-29T15:58:58.701250" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>python</arg>
<arg>${HELPER_SCRIPT}</arg>
<arg>extract</arg>
<arg>${file_path}</arg>
<arg>stderr=STDOUT</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-04-29T15:58:58.679872" elapsed="0.021396"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.701791" level="INFO">Process output: HTML_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_html.html
CSS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_css.css
JS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_js.js</msg>
<arg>Process output: ${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.701464" elapsed="0.000347"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.702067" level="INFO">${rc} = 0</msg>
<var>${rc}</var>
<arg>${result.rc}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.701868" elapsed="0.000207"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.702153" level="INFO">Process return code: 0</msg>
<arg>Process return code: ${rc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.702114" elapsed="0.000057"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${rc} != 0</arg>
<arg>Log</arg>
<arg>Error extracting data: ${result.stdout}</arg>
<arg>WARN</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-04-29T15:58:58.702226" elapsed="0.000062"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.702527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>0</arg>
<arg>Failed to extract data from ${file_path}: ${result.stdout}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-04-29T15:58:58.702327" elapsed="0.000222"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2025-04-29T15:58:58.702726" level="INFO">3 lines returned</msg>
<msg time="2025-04-29T15:58:58.702750" level="INFO">${lines} = ['HTML_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_html.html', 'CSS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOf...</msg>
<var>${lines}</var>
<arg>${result.stdout}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2025-04-29T15:58:58.702592" elapsed="0.000171"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.702936" level="INFO">${html_path} = </msg>
<var>${html_path}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.702797" elapsed="0.000147"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.703109" level="INFO">${css_path} = </msg>
<var>${css_path}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.702977" elapsed="0.000140"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.703288" level="INFO">${js_path} = </msg>
<var>${js_path}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.703149" elapsed="0.000147"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Strip String" owner="String">
<msg time="2025-04-29T15:58:58.703574" level="INFO">${stripped} = HTML_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_html.html</msg>
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-04-29T15:58:58.703516" elapsed="0.000067"/>
</kw>
<if>
<branch type="IF" condition="&quot;${stripped}&quot; != &quot;${EMPTY}&quot;">
<if>
<branch type="IF" condition="$stripped.startswith(&quot;HTML_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.704192" level="INFO">${html_path} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_html.html</msg>
<var>${html_path}</var>
<arg>${stripped.replace("HTML_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.703972" elapsed="0.000233"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.703844" elapsed="0.000379"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;CSS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${css_path}</var>
<arg>${stripped.replace("CSS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.704287" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.704237" elapsed="0.000072"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;JS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${js_path}</var>
<arg>${stripped.replace("JS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.704351" elapsed="0.000006"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.704318" elapsed="0.000050"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.703837" elapsed="0.000538"/>
</if>
<status status="PASS" start="2025-04-29T15:58:58.703619" elapsed="0.000766"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.703610" elapsed="0.000826"/>
</if>
<var name="${line}">HTML_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_html.html</var>
<status status="PASS" start="2025-04-29T15:58:58.703476" elapsed="0.000972"/>
</iter>
<iter>
<kw name="Strip String" owner="String">
<msg time="2025-04-29T15:58:58.704633" level="INFO">${stripped} = CSS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_css.css</msg>
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-04-29T15:58:58.704562" elapsed="0.000082"/>
</kw>
<if>
<branch type="IF" condition="&quot;${stripped}&quot; != &quot;${EMPTY}&quot;">
<if>
<branch type="IF" condition="$stripped.startswith(&quot;HTML_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${html_path}</var>
<arg>${stripped.replace("HTML_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.704918" elapsed="0.000007"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.704847" elapsed="0.000091"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;CSS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.705148" level="INFO">${css_path} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_css.css</msg>
<var>${css_path}</var>
<arg>${stripped.replace("CSS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.704999" elapsed="0.000159"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.704946" elapsed="0.000225"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;JS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${js_path}</var>
<arg>${stripped.replace("JS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.705214" elapsed="0.000006"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.705178" elapsed="0.000053"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.704842" elapsed="0.000409"/>
</if>
<status status="PASS" start="2025-04-29T15:58:58.704670" elapsed="0.000589"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.704664" elapsed="0.000604"/>
</if>
<var name="${line}">CSS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_css.css</var>
<status status="PASS" start="2025-04-29T15:58:58.704530" elapsed="0.000747"/>
</iter>
<iter>
<kw name="Strip String" owner="String">
<msg time="2025-04-29T15:58:58.705417" level="INFO">${stripped} = JS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_js.js</msg>
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-04-29T15:58:58.705365" elapsed="0.000061"/>
</kw>
<if>
<branch type="IF" condition="&quot;${stripped}&quot; != &quot;${EMPTY}&quot;">
<if>
<branch type="IF" condition="$stripped.startswith(&quot;HTML_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${html_path}</var>
<arg>${stripped.replace("HTML_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.705661" elapsed="0.000006"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.705607" elapsed="0.000072"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;CSS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${css_path}</var>
<arg>${stripped.replace("CSS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.705736" elapsed="0.000006"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.705687" elapsed="0.000067"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;JS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.705948" level="INFO">${js_path} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_js.js</msg>
<var>${js_path}</var>
<arg>${stripped.replace("JS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.705806" elapsed="0.000151"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.705760" elapsed="0.000209"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.705602" elapsed="0.000375"/>
</if>
<status status="PASS" start="2025-04-29T15:58:58.705450" elapsed="0.000534"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.705443" elapsed="0.000547"/>
</if>
<var name="${line}">JS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_js.js</var>
<status status="PASS" start="2025-04-29T15:58:58.705337" elapsed="0.000660"/>
</iter>
<var>${line}</var>
<value>@{lines}</value>
<status status="PASS" start="2025-04-29T15:58:58.703344" elapsed="0.002662"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.706170" level="INFO">${paths} = {'html_path': '/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_html.html', 'css_path': '/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFo...</msg>
<var>${paths}</var>
<arg>html_path=${html_path}</arg>
<arg>css_path=${css_path}</arg>
<arg>js_path=${js_path}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.706050" elapsed="0.000130"/>
</kw>
<return>
<value>${paths}</value>
<status status="PASS" start="2025-04-29T15:58:58.706203" elapsed="0.000023"/>
</return>
<msg time="2025-04-29T15:58:58.706274" level="INFO">${student_paths} = {'html_path': '/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_html.html', 'css_path': '/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFo...</msg>
<var>${student_paths}</var>
<arg>${STUDENTS_JSON}</arg>
<status status="PASS" start="2025-04-29T15:58:58.679592" elapsed="0.026691"/>
</kw>
<kw name="Extract JSON Files">
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.706638" level="INFO">Extracting JSON from /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/teacher.json...</msg>
<arg>Extracting JSON from ${file_path}...</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.706590" elapsed="0.000064"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-04-29T15:58:58.706827" level="INFO">Starting process:
python /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/json_helper.py extract /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/teacher.json</msg>
<msg time="2025-04-29T15:58:58.708749" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-04-29T15:58:58.727596" level="INFO">Process completed.</msg>
<msg time="2025-04-29T15:58:58.727761" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>python</arg>
<arg>${HELPER_SCRIPT}</arg>
<arg>extract</arg>
<arg>${file_path}</arg>
<arg>stderr=STDOUT</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-04-29T15:58:58.706692" elapsed="0.021086"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.728285" level="INFO">Process output: HTML_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_html.html
CSS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_css.css
JS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_js.js</msg>
<arg>Process output: ${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.727974" elapsed="0.000357"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.728569" level="INFO">${rc} = 0</msg>
<var>${rc}</var>
<arg>${result.rc}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.728383" elapsed="0.000195"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.728660" level="INFO">Process return code: 0</msg>
<arg>Process return code: ${rc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.728618" elapsed="0.000444"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${rc} != 0</arg>
<arg>Log</arg>
<arg>Error extracting data: ${result.stdout}</arg>
<arg>WARN</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-04-29T15:58:58.729113" elapsed="0.000065"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.729417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>0</arg>
<arg>Failed to extract data from ${file_path}: ${result.stdout}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-04-29T15:58:58.729219" elapsed="0.000219"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2025-04-29T15:58:58.729612" level="INFO">3 lines returned</msg>
<msg time="2025-04-29T15:58:58.729637" level="INFO">${lines} = ['HTML_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_html.html', 'CSS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfR...</msg>
<var>${lines}</var>
<arg>${result.stdout}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2025-04-29T15:58:58.729479" elapsed="0.000166"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.729818" level="INFO">${html_path} = </msg>
<var>${html_path}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.729681" elapsed="0.000145"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.729991" level="INFO">${css_path} = </msg>
<var>${css_path}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.729859" elapsed="0.000140"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.730194" level="INFO">${js_path} = </msg>
<var>${js_path}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.730034" elapsed="0.000168"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Strip String" owner="String">
<msg time="2025-04-29T15:58:58.730448" level="INFO">${stripped} = HTML_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_html.html</msg>
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-04-29T15:58:58.730395" elapsed="0.000062"/>
</kw>
<if>
<branch type="IF" condition="&quot;${stripped}&quot; != &quot;${EMPTY}&quot;">
<if>
<branch type="IF" condition="$stripped.startswith(&quot;HTML_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.730887" level="INFO">${html_path} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_html.html</msg>
<var>${html_path}</var>
<arg>${stripped.replace("HTML_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.730742" elapsed="0.000154"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.730661" elapsed="0.000248"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;CSS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${css_path}</var>
<arg>${stripped.replace("CSS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.730956" elapsed="0.000006"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.730919" elapsed="0.000054"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;JS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${js_path}</var>
<arg>${stripped.replace("JS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.731020" elapsed="0.000005"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.730980" elapsed="0.000054"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.730656" elapsed="0.000385"/>
</if>
<status status="PASS" start="2025-04-29T15:58:58.730484" elapsed="0.000566"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.730476" elapsed="0.000581"/>
</if>
<var name="${line}">HTML_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_html.html</var>
<status status="PASS" start="2025-04-29T15:58:58.730363" elapsed="0.000701"/>
</iter>
<iter>
<kw name="Strip String" owner="String">
<msg time="2025-04-29T15:58:58.731198" level="INFO">${stripped} = CSS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_css.css</msg>
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-04-29T15:58:58.731150" elapsed="0.000057"/>
</kw>
<if>
<branch type="IF" condition="&quot;${stripped}&quot; != &quot;${EMPTY}&quot;">
<if>
<branch type="IF" condition="$stripped.startswith(&quot;HTML_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${html_path}</var>
<arg>${stripped.replace("HTML_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.731470" elapsed="0.000006"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.731401" elapsed="0.000087"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;CSS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.731689" level="INFO">${css_path} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_css.css</msg>
<var>${css_path}</var>
<arg>${stripped.replace("CSS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.731549" elapsed="0.000149"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.731496" elapsed="0.000214"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;JS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${js_path}</var>
<arg>${stripped.replace("JS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.731748" elapsed="0.000005"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.731718" elapsed="0.000045"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.731396" elapsed="0.000374"/>
</if>
<status status="PASS" start="2025-04-29T15:58:58.731228" elapsed="0.000549"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.731223" elapsed="0.000561"/>
</if>
<var name="${line}">CSS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_css.css</var>
<status status="PASS" start="2025-04-29T15:58:58.731123" elapsed="0.000667"/>
</iter>
<iter>
<kw name="Strip String" owner="String">
<msg time="2025-04-29T15:58:58.731929" level="INFO">${stripped} = JS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_js.js</msg>
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-04-29T15:58:58.731866" elapsed="0.000071"/>
</kw>
<if>
<branch type="IF" condition="&quot;${stripped}&quot; != &quot;${EMPTY}&quot;">
<if>
<branch type="IF" condition="$stripped.startswith(&quot;HTML_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${html_path}</var>
<arg>${stripped.replace("HTML_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.732160" elapsed="0.000006"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.732107" elapsed="0.000071"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;CSS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<var>${css_path}</var>
<arg>${stripped.replace("CSS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.732234" elapsed="0.000006"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.732186" elapsed="0.000065"/>
</branch>
<branch type="ELSE IF" condition="$stripped.startswith(&quot;JS_PATH:&quot;)">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.732443" level="INFO">${js_path} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_js.js</msg>
<var>${js_path}</var>
<arg>${stripped.replace("JS_PATH:", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.732307" elapsed="0.000145"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.732258" elapsed="0.000206"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.732102" elapsed="0.000369"/>
</if>
<status status="PASS" start="2025-04-29T15:58:58.731960" elapsed="0.000518"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.731954" elapsed="0.000531"/>
</if>
<var name="${line}">JS_PATH:/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_js.js</var>
<status status="PASS" start="2025-04-29T15:58:58.731841" elapsed="0.000651"/>
</iter>
<var>${line}</var>
<value>@{lines}</value>
<status status="PASS" start="2025-04-29T15:58:58.730236" elapsed="0.002265"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.732654" level="INFO">${paths} = {'html_path': '/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_html.html', 'css_path': '/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFor...</msg>
<var>${paths}</var>
<arg>html_path=${html_path}</arg>
<arg>css_path=${css_path}</arg>
<arg>js_path=${js_path}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.732543" elapsed="0.000120"/>
</kw>
<return>
<value>${paths}</value>
<status status="PASS" start="2025-04-29T15:58:58.732687" elapsed="0.000019"/>
</return>
<msg time="2025-04-29T15:58:58.732755" level="INFO">${teacher_paths} = {'html_path': '/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_html.html', 'css_path': '/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFor...</msg>
<var>${teacher_paths}</var>
<arg>${TEACHERS_JSON}</arg>
<status status="PASS" start="2025-04-29T15:58:58.706474" elapsed="0.026290"/>
</kw>
<kw name="Compare Code Files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.733441" level="INFO" html="true">Getting file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_html.html"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_html.html&lt;/a&gt;'.</msg>
<msg time="2025-04-29T15:58:58.733530" level="INFO">${student_code} = &lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Test HTML&lt;/title&gt;
    &lt;style&gt;
        body {
            margin: 20px;
            /* Missing background-color */
        }
        .container {
            ba...</msg>
<var>${student_code}</var>
<arg>${student_file}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-04-29T15:58:58.733381" elapsed="0.000159"/>
</kw>
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.733610" level="INFO" html="true">Getting file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_html.html"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_html.html&lt;/a&gt;'.</msg>
<msg time="2025-04-29T15:58:58.733658" level="INFO">${teacher_code} = &lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Test HTML&lt;/title&gt;
    &lt;style&gt;
        body {
            margin: 20px;
            background-color: #f5f5f5;
        }
        .container {
            backgr...</msg>
<var>${teacher_code}</var>
<arg>${teacher_file}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-04-29T15:58:58.733574" elapsed="0.000093"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.733811" level="INFO">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Test HTML&lt;/title&gt;
    &lt;style&gt;
        body {
            margin: 20px;
            /* Missing background-color */
        }
        .container {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        h1 {
            color: #4a5568;
        }
        .color-box {
            display: inline-block;
            width: 50px;
            height: 50px;
            margin: 5px;
            border-radius: 5px;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class="container"&gt;
        &lt;h1&gt;Order Testing Example&lt;/h1&gt;
        &lt;p&gt;This example is used to test element order detection.&lt;/p&gt;
        
        &lt;!-- Different order of headings compared to teacher version --&gt;
        &lt;h3&gt;Third Heading&lt;/h3&gt;
        &lt;h2&gt;Interactive Elements:&lt;/h2&gt;
        
        &lt;!-- Different order of buttons --&gt;
        &lt;div class="button-container"&gt;
            &lt;button class="secondary" onclick="cancelAction()"&gt;Cancel&lt;/button&gt;
            &lt;button class="primary" onclick="saveData()"&gt;Save&lt;/button&gt;
            &lt;button class="danger" onclick="deleteItem()"&gt;Delete&lt;/button&gt;
        &lt;/div&gt;
        
        &lt;h2&gt;Color Boxes:&lt;/h2&gt;
        &lt;!-- Different order of color boxes --&gt;
        &lt;div class="color-box" style="background-color: #3357FF;"&gt;&lt;/div&gt;
        &lt;div class="color-box" style="background-color: #FF5733;"&gt;&lt;/div&gt;
        &lt;div class="color-box" style="background-color: #33FF57;"&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;

!=

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Test HTML&lt;/title&gt;
    &lt;style&gt;
        body {
            margin: 20px;
            background-color: #f5f5f5;
        }
        .container {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        h1 {
            color: #4a5568;
        }
        .color-box {
            display: inline-block;
            width: 50px;
            height: 50px;
            margin: 5px;
            border-radius: 5px;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class="container"&gt;
        &lt;h1&gt;Order Testing Example&lt;/h1&gt;
        &lt;p&gt;This example is used to test element order detection.&lt;/p&gt;
        
        &lt;!-- Teacher's order of headings --&gt;
        &lt;h2&gt;Interactive Elements:&lt;/h2&gt;
        &lt;h3&gt;Third Heading&lt;/h3&gt;
        
        &lt;!-- Teacher's order of buttons --&gt;
        &lt;div class="button-container"&gt;
            &lt;button class="primary" onclick="saveData()"&gt;Save&lt;/button&gt;
            &lt;button class="secondary" onclick="cancelAction()"&gt;Cancel&lt;/button&gt;
            &lt;button class="danger" onclick="deleteItem()"&gt;Delete&lt;/button&gt;
        &lt;/div&gt;
        
        &lt;h2&gt;Color Boxes:&lt;/h2&gt;
        &lt;!-- Teacher's order of color boxes --&gt;
        &lt;div class="color-box" style="background-color: #FF5733;"&gt;&lt;/div&gt;
        &lt;div class="color-box" style="background-color: #33FF57;"&gt;&lt;/div&gt;
        &lt;div class="color-box" style="background-color: #3357FF;"&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</msg>
<msg time="2025-04-29T15:58:58.733998" level="FAIL">Multiline strings are different:
--- first
+++ second
@@ -5,7 +5,7 @@
     &lt;style&gt;
         body {
             margin: 20px;
-            /* Missing background-color */
+            background-color: #f5f5f5;
         }
         .container {
             background-color: white;
@@ -30,22 +30,22 @@
         &lt;h1&gt;Order Testing Example&lt;/h1&gt;
         &lt;p&gt;This example is used to test element order detection.&lt;/p&gt;
 
-        &lt;!-- Different order of headings compared to teacher version --&gt;
+        &lt;!-- Teacher's order of headings --&gt;
+        &lt;h2&gt;Interactive Elements:&lt;/h2&gt;
         &lt;h3&gt;Third Heading&lt;/h3&gt;
-        &lt;h2&gt;Interactive Elements:&lt;/h2&gt;
 
-        &lt;!-- Different order of buttons --&gt;
+        &lt;!-- Teacher's order of buttons --&gt;
         &lt;div class="button-container"&gt;
+            &lt;button class="primary" onclick="saveData()"&gt;Save&lt;/button&gt;
             &lt;button class="secondary" onclick="cancelAction()"&gt;Cancel&lt;/button&gt;
-            &lt;button class="primary" onclick="saveData()"&gt;Save&lt;/button&gt;
             &lt;button class="danger" onclick="deleteItem()"&gt;Delete&lt;/button&gt;
         &lt;/div&gt;
 
         &lt;h2&gt;Color Boxes:&lt;/h2&gt;
-        &lt;!-- Different order of color boxes --&gt;
-        &lt;div class="color-box" style="background-color: #3357FF;"&gt;&lt;/div&gt;
+        &lt;!-- Teacher's order of color boxes --&gt;
         &lt;div class="color-box" style="background-color: #FF5733;"&gt;&lt;/div&gt;
         &lt;div class="color-box" style="background-color: #33FF57;"&gt;&lt;/div&gt;
+        &lt;div class="color-box" style="background-color: #3357FF;"&gt;&lt;/div&gt;
     &lt;/div&gt;
 &lt;/body&gt;
 &lt;/html&gt;</msg>
<arg>${student_code}</arg>
<arg>${teacher_code}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2025-04-29T15:58:58.733753" elapsed="0.000300">Multiline strings are different:
--- first
+++ second
@@ -5,7 +5,7 @@
     &lt;style&gt;
         body {
             margin: 20px;
-            /* Missing background-color */
+            background-color: #f5f5f5;
         }
         .container {
             background-color: white;
@@ -30,22 +30,22 @@
         &lt;h1&gt;Order Testing Example&lt;/h1&gt;
         &lt;p&gt;This example is used to test element order detection.&lt;/p&gt;
 
-        &lt;!-- Different order of headings compared to teacher version --&gt;
+        &lt;!-- Teacher's order of headings --&gt;
+        &lt;h2&gt;Interactive Elements:&lt;/h2&gt;
         &lt;h3&gt;Third Heading&lt;/h3&gt;
    [ Message content over the limit has been removed. ]
-        &lt;!-- Different order of buttons --&gt;
+        &lt;!-- Teacher's order of buttons --&gt;
         &lt;div class="button-container"&gt;
+            &lt;button class="primary" onclick="saveData()"&gt;Save&lt;/button&gt;
             &lt;button class="secondary" onclick="cancelAction()"&gt;Cancel&lt;/button&gt;
-            &lt;button class="primary" onclick="saveData()"&gt;Save&lt;/button&gt;
             &lt;button class="danger" onclick="deleteItem()"&gt;Delete&lt;/button&gt;
         &lt;/div&gt;
 
         &lt;h2&gt;Color Boxes:&lt;/h2&gt;
-        &lt;!-- Different order of color boxes --&gt;
-        &lt;div class="color-box" style="background-color: #3357FF;"&gt;&lt;/div&gt;
+        &lt;!-- Teacher's order of color boxes --&gt;
         &lt;div class="color-box" style="background-color: #FF5733;"&gt;&lt;/div&gt;
         &lt;div class="color-box" style="background-color: #33FF57;"&gt;&lt;/div&gt;
+        &lt;div class="color-box" style="background-color: #3357FF;"&gt;&lt;/div&gt;
     &lt;/div&gt;
 &lt;/body&gt;
 &lt;/html&gt;</status>
</kw>
<msg time="2025-04-29T15:58:58.734096" level="INFO">${match} = False</msg>
<var>${match}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${student_code}</arg>
<arg>${teacher_code}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-04-29T15:58:58.733705" elapsed="0.000398"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.734181" level="INFO">@{differences} = [ ]</msg>
<var>@{differences}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-04-29T15:58:58.734139" elapsed="0.000050"/>
</kw>
<if>
<branch type="IF" condition="not ${match}">
<if>
<branch type="IF" condition="&quot;${code_type}&quot; == &quot;html&quot;">
<kw name="Compare Html Structure" owner="WebCourseLibrary">
<msg time="2025-04-29T15:58:58.735390" level="INFO">${diff_result} = ['Missing background-color: #f5f5f5 in body style rule', 'Color boxes are in wrong order. Expected: #FF5733, #33FF57, #3357FF', 'Heading order is incorrect. Expected: Order Testing Example, Interactiv...</msg>
<var>${diff_result}</var>
<arg>${student_code}</arg>
<arg>${teacher_code}</arg>
<doc>Compare HTML structure and return specific differences</doc>
<status status="PASS" start="2025-04-29T15:58:58.734309" elapsed="0.001092"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-04-29T15:58:58.735554" level="INFO">Starting process:
python /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/json_helper.py analyze_html /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_html.html /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_html.html</msg>
<msg time="2025-04-29T15:58:58.737626" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-04-29T15:58:58.756318" level="INFO">Process completed.</msg>
<msg time="2025-04-29T15:58:58.756519" level="INFO">${html_order_result} = &lt;result object with rc 0&gt;</msg>
<var>${html_order_result}</var>
<arg>python</arg>
<arg>${HELPER_SCRIPT}</arg>
<arg>analyze_html</arg>
<arg>${student_file}</arg>
<arg>${teacher_file}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-04-29T15:58:58.735444" elapsed="0.021098"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.756969" level="INFO">${html_order_diff} = []</msg>
<var>${html_order_diff}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-04-29T15:58:58.756820" elapsed="0.000158"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.757209" level="INFO">${stdout_empty} = False</msg>
<var>${stdout_empty}</var>
<arg>$html_order_result.stdout == ""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-04-29T15:58:58.757037" elapsed="0.000181"/>
</kw>
<if>
<branch type="IF" condition="$html_order_result.rc == 0 and not $stdout_empty">
<kw name="Split To Lines" owner="String">
<msg time="2025-04-29T15:58:58.757654" level="INFO">3 lines returned</msg>
<msg time="2025-04-29T15:58:58.757682" level="INFO">${html_order_lines} = ['Missing background-color: #f5f5f5 in body style rule', 'Color boxes are in wrong order. Expected: #FF5733, #33FF57, #3357FF', 'Heading order is incorrect. Expected: Order Testing Example, Interactiv...</msg>
<var>${html_order_lines}</var>
<arg>${html_order_result.stdout}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2025-04-29T15:58:58.757387" elapsed="0.000303"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Strip String" owner="String">
<msg time="2025-04-29T15:58:58.757900" level="INFO">${stripped} = Missing background-color: #f5f5f5 in body style rule</msg>
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-04-29T15:58:58.757844" elapsed="0.000065"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.758037" level="INFO">${is_empty} = False</msg>
<var>${is_empty}</var>
<arg>"${stripped}" == ""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-04-29T15:58:58.757944" elapsed="0.000101"/>
</kw>
<if>
<branch type="IF" condition="not ${is_empty}">
<kw name="Append To List" owner="Collections">
<arg>${html_order_diff}</arg>
<arg>${stripped}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.758162" elapsed="0.000059"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.758102" elapsed="0.000131"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.758095" elapsed="0.000148"/>
</if>
<var name="${line}">Missing background-color: #f5f5f5 in body style rule</var>
<status status="PASS" start="2025-04-29T15:58:58.757810" elapsed="0.000442"/>
</iter>
<iter>
<kw name="Strip String" owner="String">
<msg time="2025-04-29T15:58:58.758377" level="INFO">${stripped} = Color boxes are in wrong order. Expected: #FF5733, #33FF57, #3357FF</msg>
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-04-29T15:58:58.758328" elapsed="0.000058"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.758497" level="INFO">${is_empty} = False</msg>
<var>${is_empty}</var>
<arg>"${stripped}" == ""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-04-29T15:58:58.758420" elapsed="0.000085"/>
</kw>
<if>
<branch type="IF" condition="not ${is_empty}">
<kw name="Append To List" owner="Collections">
<arg>${html_order_diff}</arg>
<arg>${stripped}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.758579" elapsed="0.000046"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.758531" elapsed="0.000108"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.758525" elapsed="0.000121"/>
</if>
<var name="${line}">Color boxes are in wrong order. Expected: #FF5733, #33FF57, #3357FF</var>
<status status="PASS" start="2025-04-29T15:58:58.758296" elapsed="0.000358"/>
</iter>
<iter>
<kw name="Strip String" owner="String">
<msg time="2025-04-29T15:58:58.758763" level="INFO">${stripped} = Heading order is incorrect. Expected: Order Testing Example, Interactive Elements:, Third Heading, Color Boxes:</msg>
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-04-29T15:58:58.758718" elapsed="0.000053"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.758876" level="INFO">${is_empty} = False</msg>
<var>${is_empty}</var>
<arg>"${stripped}" == ""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-04-29T15:58:58.758803" elapsed="0.000080"/>
</kw>
<if>
<branch type="IF" condition="not ${is_empty}">
<kw name="Append To List" owner="Collections">
<arg>${html_order_diff}</arg>
<arg>${stripped}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.758950" elapsed="0.000049"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.758903" elapsed="0.000108"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.758898" elapsed="0.000121"/>
</if>
<var name="${line}">Heading order is incorrect. Expected: Order Testing Example, Interactive Elements:, Third Heading, Color Boxes:</var>
<status status="PASS" start="2025-04-29T15:58:58.758692" elapsed="0.000334"/>
</iter>
<var>${line}</var>
<value>@{html_order_lines}</value>
<status status="PASS" start="2025-04-29T15:58:58.757717" elapsed="0.001318"/>
</for>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.759114" level="INFO">Length is 3.</msg>
<msg time="2025-04-29T15:58:58.759136" level="INFO">${diff_len} = 3</msg>
<var>${diff_len}</var>
<arg>${html_order_diff}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-04-29T15:58:58.759068" elapsed="0.000075"/>
</kw>
<if>
<branch type="IF" condition="${diff_len} &gt; 0">
<kw name="Combine Lists">
<kw name="Create List" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.759430" level="INFO">${combined} = []</msg>
<var>${combined}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-04-29T15:58:58.759396" elapsed="0.000042"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Append To List" owner="Collections">
<arg>${combined}</arg>
<arg>${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.759515" elapsed="0.000045"/>
</kw>
<var name="${item}">Missing background-color: #f5f5f5 in body style rule</var>
<status status="PASS" start="2025-04-29T15:58:58.759491" elapsed="0.000080"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${combined}</arg>
<arg>${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.759640" elapsed="0.000041"/>
</kw>
<var name="${item}">Color boxes are in wrong order. Expected: #FF5733, #33FF57, #3357FF</var>
<status status="PASS" start="2025-04-29T15:58:58.759616" elapsed="0.000076"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${combined}</arg>
<arg>${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.759738" elapsed="0.000045"/>
</kw>
<var name="${item}">Heading order is incorrect. Expected: Order Testing Example, Interactive Elements:, Third Heading, Color Boxes:</var>
<status status="PASS" start="2025-04-29T15:58:58.759715" elapsed="0.000079"/>
</iter>
<var>${item}</var>
<value>@{list1}</value>
<status status="PASS" start="2025-04-29T15:58:58.759453" elapsed="0.000351"/>
</for>
<for flavor="IN">
<iter>
<kw name="Append To List" owner="Collections">
<arg>${combined}</arg>
<arg>${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.759874" elapsed="0.000042"/>
</kw>
<var name="${item}">Missing background-color: #f5f5f5 in body style rule</var>
<status status="PASS" start="2025-04-29T15:58:58.759851" elapsed="0.000076"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${combined}</arg>
<arg>${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.759973" elapsed="0.000041"/>
</kw>
<var name="${item}">Color boxes are in wrong order. Expected: #FF5733, #33FF57, #3357FF</var>
<status status="PASS" start="2025-04-29T15:58:58.759950" elapsed="0.000075"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${combined}</arg>
<arg>${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.760069" elapsed="0.000043"/>
</kw>
<var name="${item}">Heading order is incorrect. Expected: Order Testing Example, Interactive Elements:, Third Heading, Color Boxes:</var>
<status status="PASS" start="2025-04-29T15:58:58.760047" elapsed="0.000076"/>
</iter>
<var>${item}</var>
<value>@{list2}</value>
<status status="PASS" start="2025-04-29T15:58:58.759818" elapsed="0.000315"/>
</for>
<return>
<value>${combined}</value>
<status status="PASS" start="2025-04-29T15:58:58.760150" elapsed="0.000021"/>
</return>
<msg time="2025-04-29T15:58:58.760215" level="INFO">${diff_result} = ['Missing background-color: #f5f5f5 in body style rule', 'Color boxes are in wrong order. Expected: #FF5733, #33FF57, #3357FF', 'Heading order is incorrect. Expected: Order Testing Example, Interactiv...</msg>
<var>${diff_result}</var>
<arg>${diff_result}</arg>
<arg>${html_order_diff}</arg>
<status status="PASS" start="2025-04-29T15:58:58.759276" elapsed="0.000948"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.759167" elapsed="0.001067"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.759158" elapsed="0.001084"/>
</if>
<status status="PASS" start="2025-04-29T15:58:58.757277" elapsed="0.002973"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.757254" elapsed="0.003002"/>
</if>
<status status="PASS" start="2025-04-29T15:58:58.734257" elapsed="0.026005"/>
</branch>
<branch type="ELSE IF" condition="&quot;${code_type}&quot; == &quot;css&quot;">
<kw name="Compare Css Rules" owner="WebCourseLibrary">
<var>${diff_result}</var>
<arg>${student_code}</arg>
<arg>${teacher_code}</arg>
<doc>Compare CSS rules and return specific differences</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.760332" elapsed="0.000007"/>
</kw>
<kw name="Run Process" owner="Process">
<var>${css_order_result}</var>
<arg>python</arg>
<arg>${HELPER_SCRIPT}</arg>
<arg>analyze_css</arg>
<arg>${student_file}</arg>
<arg>${teacher_file}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.760377" elapsed="0.000007"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<var>${css_order_diff}</var>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.760417" elapsed="0.000005"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${stdout_empty}</var>
<arg>$css_order_result.stdout == ""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.760453" elapsed="0.000007"/>
</kw>
<if>
<branch type="IF" condition="$css_order_result.rc == 0 and not $stdout_empty">
<kw name="Split To Lines" owner="String">
<var>${css_order_lines}</var>
<arg>${css_order_result.stdout}</arg>
<doc>Splits the given string to lines.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.760523" elapsed="0.000006"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Strip String" owner="String">
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.760613" elapsed="0.000006"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${is_empty}</var>
<arg>"${stripped}" == ""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.760648" elapsed="0.000004"/>
</kw>
<if>
<branch type="IF" condition="not ${is_empty}">
<kw name="Append To List" owner="Collections">
<arg>${css_order_diff}</arg>
<arg>${stripped}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.760695" elapsed="0.000004"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.760670" elapsed="0.000039"/>
</branch>
<status status="NOT RUN" start="2025-04-29T15:58:58.760665" elapsed="0.000051"/>
</if>
<var name="${line}"/>
<status status="NOT RUN" start="2025-04-29T15:58:58.760586" elapsed="0.000137"/>
</iter>
<var>${line}</var>
<value>@{css_order_lines}</value>
<status status="NOT RUN" start="2025-04-29T15:58:58.760543" elapsed="0.000188"/>
</for>
<kw name="Get Length" owner="BuiltIn">
<var>${diff_len}</var>
<arg>${css_order_diff}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.760759" elapsed="0.000006"/>
</kw>
<if>
<branch type="IF" condition="${diff_len} &gt; 0">
<kw name="Combine Lists">
<var>${diff_result}</var>
<arg>${diff_result}</arg>
<arg>${css_order_diff}</arg>
<status status="NOT RUN" start="2025-04-29T15:58:58.760853" elapsed="0.000007"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.760783" elapsed="0.000088"/>
</branch>
<status status="NOT RUN" start="2025-04-29T15:58:58.760778" elapsed="0.000101"/>
</if>
<status status="NOT RUN" start="2025-04-29T15:58:58.760489" elapsed="0.000397"/>
</branch>
<status status="NOT RUN" start="2025-04-29T15:58:58.760481" elapsed="0.000412"/>
</if>
<status status="NOT RUN" start="2025-04-29T15:58:58.760289" elapsed="0.000610"/>
</branch>
<branch type="ELSE IF" condition="&quot;${code_type}&quot; == &quot;js&quot;">
<kw name="Compare Js Functionality" owner="WebCourseLibrary">
<var>${diff_result}</var>
<arg>${student_code}</arg>
<arg>${teacher_code}</arg>
<doc>Compare JavaScript functionality and return specific differences</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.760939" elapsed="0.000005"/>
</kw>
<kw name="Analyze JS Specific Differences">
<var>${js_specific_analysis}</var>
<arg>${student_code}</arg>
<arg>${teacher_code}</arg>
<status status="NOT RUN" start="2025-04-29T15:58:58.761300" elapsed="0.000008"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>Detailed JavaScript Analysis:</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.761343" elapsed="0.000007"/>
</kw>
<kw name="Log Many" owner="BuiltIn">
<arg>@{js_specific_analysis}</arg>
<arg>WARN</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.761389" elapsed="0.000005"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${js_diff_len}</var>
<arg>${js_specific_analysis}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.761422" elapsed="0.000004"/>
</kw>
<if>
<branch type="IF" condition="${js_diff_len} &gt; 0">
<kw name="Combine Lists">
<var>${diff_result}</var>
<arg>${diff_result}</arg>
<arg>${js_specific_analysis}</arg>
<status status="NOT RUN" start="2025-04-29T15:58:58.761490" elapsed="0.000007"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.761445" elapsed="0.000063"/>
</branch>
<status status="NOT RUN" start="2025-04-29T15:58:58.761440" elapsed="0.000076"/>
</if>
<status status="NOT RUN" start="2025-04-29T15:58:58.760906" elapsed="0.000617"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.734252" elapsed="0.027277"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.761623" level="INFO">@{differences} = [ Missing background-color: #f5f5f5 in body style rule | Color boxes are in wrong order. Expected: #FF5733, #33FF57, #3357FF | Heading order is incorrect. Expected: Order Testing Example, Interactive ...</msg>
<var>@{differences}</var>
<arg>${diff_result}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.761559" elapsed="0.000074"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.761720" level="WARN">html differences found:</msg>
<arg>${code_type} differences found:</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.761664" elapsed="0.000120"/>
</kw>
<kw name="Log Many" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.761873" level="INFO">Missing background-color: #f5f5f5 in body style rule</msg>
<msg time="2025-04-29T15:58:58.761885" level="INFO">Color boxes are in wrong order. Expected: #FF5733, #33FF57, #3357FF</msg>
<msg time="2025-04-29T15:58:58.761894" level="INFO">Heading order is incorrect. Expected: Order Testing Example, Interactive Elements:, Third Heading, Color Boxes:</msg>
<msg time="2025-04-29T15:58:58.761903" level="INFO">Missing background-color: #f5f5f5 in body style rule</msg>
<msg time="2025-04-29T15:58:58.761911" level="INFO">Color boxes are in wrong order. Expected: #FF5733, #33FF57, #3357FF</msg>
<msg time="2025-04-29T15:58:58.761916" level="INFO">Heading order is incorrect. Expected: Order Testing Example, Interactive Elements:, Third Heading, Color Boxes:</msg>
<msg time="2025-04-29T15:58:58.761924" level="INFO">WARN</msg>
<arg>@{differences}</arg>
<arg>WARN</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.761823" elapsed="0.000111"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.734211" elapsed="0.027734"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.734204" elapsed="0.027749"/>
</if>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.762089" level="INFO">${result} = {'match': False, 'differences': ['Missing background-color: #f5f5f5 in body style rule', 'Color boxes are in wrong order. Expected: #FF5733, #33FF57, #3357FF', 'Heading order is incorrect. Expected: O...</msg>
<var>${result}</var>
<arg>match=${match}</arg>
<arg>differences=${differences}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.761986" elapsed="0.000113"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" start="2025-04-29T15:58:58.762131" elapsed="0.000011"/>
</return>
<msg time="2025-04-29T15:58:58.762183" level="INFO">${html_result} = {'match': False, 'differences': ['Missing background-color: #f5f5f5 in body style rule', 'Color boxes are in wrong order. Expected: #FF5733, #33FF57, #3357FF', 'Heading order is incorrect. Expected: O...</msg>
<var>${html_result}</var>
<arg>${student_paths["html_path"]}</arg>
<arg>${teacher_paths["html_path"]}</arg>
<arg>html</arg>
<status status="PASS" start="2025-04-29T15:58:58.733063" elapsed="0.029129"/>
</kw>
<kw name="Compare Code Files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.762786" level="INFO" html="true">Getting file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_css.css"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_css.css&lt;/a&gt;'.</msg>
<msg time="2025-04-29T15:58:58.762881" level="INFO">${student_code} = /* Reset and base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Different order of main selectors */
.container {
    max-width: 1000px;
    margin: 0 auto;
    paddin...</msg>
<var>${student_code}</var>
<arg>${student_file}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-04-29T15:58:58.762727" elapsed="0.000162"/>
</kw>
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.762959" level="INFO" html="true">Getting file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_css.css"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_css.css&lt;/a&gt;'.</msg>
<msg time="2025-04-29T15:58:58.763010" level="INFO">${teacher_code} = /* Reset and base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Teacher's order of main selectors */
body {
    font-family: Helvetica, sans-serif;
    line-height: 1....</msg>
<var>${teacher_code}</var>
<arg>${teacher_file}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-04-29T15:58:58.762923" elapsed="0.000096"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.763165" level="INFO">/* Reset and base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Different order of main selectors */
.container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 15px;
}

body {
    line-height: 1.5;
    color: #444;
    background-color: #eaeaea;
}

/* Different order of properties within selectors */
.color-box {
    margin: 5px;
    border-radius: 5px;
    display: inline-block;
    width: 50px;
    height: 50px;
}

/* Header styles */
header {
    background-color: #2c3e50;
    color: white;
    padding: 15px;
    margin-bottom: 15px;
}

header h1 {
    margin-bottom: 15px;
    color: #ecf0f1;
}

nav ul {
    display: block;
    list-style: none;
}

nav ul li {
    margin-right: 15px;
    display: inline-block;
}

nav ul li a {
    color: #ecf0f1;
    text-decoration: none;
}

nav ul li a:hover {
    color: #e74c3c;
}

/* Button styles with different order of properties */
button {
    border: none;
    padding: 8px 12px;
    cursor: pointer;
    border-radius: 2px;
    background-color: #e74c3c;
    color: white;
}

.button-container {
    display: flex;
    gap: 10px;
    margin: 20px 0;
}

.primary {
    background-color: #4299e1;
}

.secondary {
    background-color: #a0aec0;
}

.danger {
    background-color: #f56565;
}

/* Main content styles */
main {
    background-color: #ecf0f1;
    padding: 15px;
    border-radius: 3px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
}

!=

/* Reset and base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Teacher's order of main selectors */
body {
    font-family: Helvetica, sans-serif;
    line-height: 1.5;
    color: #444;
    background-color: #eaeaea;
}

.container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 15px;
}

/* Teacher's order of properties */
.color-box {
    display: inline-block;
    width: 50px;
    height: 50px;
    margin: 5px;
    border-radius: 5px;
}

/* Header styles */
header {
    background-color: #2c3e50;
    color: white;
    padding: 15px;
    margin-bottom: 15px;
}

header h1 {
    margin-bottom: 15px;
    color: #ecf0f1;
}

nav ul {
    display: block;
    list-style: none;
}

nav ul li {
    margin-right: 15px;
    display: inline-block;
}

nav ul li a {
    color: #ecf0f1;
    text-decoration: none;
}

nav ul li a:hover {
    color: #e74c3c;
}

/* Button styles with teacher's order of properties */
button {
    background-color: #e74c3c;
    color: white;
    border: none;
    padding: 8px 12px;
    cursor: pointer;
    border-radius: 2px;
}

.button-container {
    display: flex;
    gap: 10px;
    margin: 20px 0;
}

.primary {
    background-color: #4299e1;
}

.secondary {
    background-color: #a0aec0;
}

.danger {
    background-color: #f56565;
}

/* Main content styles */
main {
    background-color: #ecf0f1;
    padding: 15px;
    border-radius: 3px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
}</msg>
<msg time="2025-04-29T15:58:58.763408" level="FAIL">Multiline strings are different:
--- first
+++ second
@@ -5,26 +5,27 @@
     box-sizing: border-box;
 }
 
-/* Different order of main selectors */
+/* Teacher's order of main selectors */
+body {
+    font-family: Helvetica, sans-serif;
+    line-height: 1.5;
+    color: #444;
+    background-color: #eaeaea;
+}
+
 .container {
     max-width: 1000px;
     margin: 0 auto;
     padding: 15px;
 }
 
-body {
-    line-height: 1.5;
-    color: #444;
-    background-color: #eaeaea;
-}
-
-/* Different order of properties within selectors */
+/* Teacher's order of properties */
 .color-box {
-    margin: 5px;
-    border-radius: 5px;
     display: inline-block;
     width: 50px;
     height: 50px;
+    margin: 5px;
+    border-radius: 5px;
 }
 
 /* Header styles */
@@ -59,14 +60,14 @@
     color: #e74c3c;
 }
 
-/* Button styles with different order of properties */
+/* Button styles with teacher's order of properties */
 button {
+    background-color: #e74c3c;
+    color: white;
     border: none;
     padding: 8px 12px;
     cursor: pointer;
     border-radius: 2px;
-    background-color: #e74c3c;
-    color: white;
 }
 
 .button-container {</msg>
<arg>${student_code}</arg>
<arg>${teacher_code}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2025-04-29T15:58:58.763102" elapsed="0.000368">Multiline strings are different:
--- first
+++ second
@@ -5,26 +5,27 @@
     box-sizing: border-box;
 }
 
-/* Different order of main selectors */
+/* Teacher's order of main selectors */
+body {
+    font-family: Helvetica, sans-serif;
+    line-height: 1.5;
+    color: #444;
+    background-color: #eaeaea;
+}
+
 .container {
     max-width: 1000px;
     margin: 0 auto;
     padding: 15px;
    [ Message content over the limit has been removed. ]
 
 /* Header styles */
@@ -59,14 +60,14 @@
     color: #e74c3c;
 }
 
-/* Button styles with different order of properties */
+/* Button styles with teacher's order of properties */
 button {
+    background-color: #e74c3c;
+    color: white;
     border: none;
     padding: 8px 12px;
     cursor: pointer;
     border-radius: 2px;
-    background-color: #e74c3c;
-    color: white;
 }
 
 .button-container {</status>
</kw>
<msg time="2025-04-29T15:58:58.763504" level="INFO">${match} = False</msg>
<var>${match}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${student_code}</arg>
<arg>${teacher_code}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-04-29T15:58:58.763055" elapsed="0.000456"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.763614" level="INFO">@{differences} = [ ]</msg>
<var>@{differences}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-04-29T15:58:58.763570" elapsed="0.000051"/>
</kw>
<if>
<branch type="IF" condition="not ${match}">
<if>
<branch type="IF" condition="&quot;${code_type}&quot; == &quot;html&quot;">
<kw name="Compare Html Structure" owner="WebCourseLibrary">
<var>${diff_result}</var>
<arg>${student_code}</arg>
<arg>${teacher_code}</arg>
<doc>Compare HTML structure and return specific differences</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.763741" elapsed="0.000006"/>
</kw>
<kw name="Run Process" owner="Process">
<var>${html_order_result}</var>
<arg>python</arg>
<arg>${HELPER_SCRIPT}</arg>
<arg>analyze_html</arg>
<arg>${student_file}</arg>
<arg>${teacher_file}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.763795" elapsed="0.000006"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<var>${html_order_diff}</var>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.763833" elapsed="0.000006"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${stdout_empty}</var>
<arg>$html_order_result.stdout == ""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.763866" elapsed="0.000005"/>
</kw>
<if>
<branch type="IF" condition="$html_order_result.rc == 0 and not $stdout_empty">
<kw name="Split To Lines" owner="String">
<var>${html_order_lines}</var>
<arg>${html_order_result.stdout}</arg>
<doc>Splits the given string to lines.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.763916" elapsed="0.000005"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Strip String" owner="String">
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.763994" elapsed="0.000004"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${is_empty}</var>
<arg>"${stripped}" == ""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.764027" elapsed="0.000005"/>
</kw>
<if>
<branch type="IF" condition="not ${is_empty}">
<kw name="Append To List" owner="Collections">
<arg>${html_order_diff}</arg>
<arg>${stripped}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.764076" elapsed="0.000004"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.764051" elapsed="0.000039"/>
</branch>
<status status="NOT RUN" start="2025-04-29T15:58:58.764046" elapsed="0.000052"/>
</if>
<var name="${line}"/>
<status status="NOT RUN" start="2025-04-29T15:58:58.763970" elapsed="0.000136"/>
</iter>
<var>${line}</var>
<value>@{html_order_lines}</value>
<status status="NOT RUN" start="2025-04-29T15:58:58.763937" elapsed="0.000177"/>
</for>
<kw name="Get Length" owner="BuiltIn">
<var>${diff_len}</var>
<arg>${html_order_diff}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.764144" elapsed="0.000006"/>
</kw>
<if>
<branch type="IF" condition="${diff_len} &gt; 0">
<kw name="Combine Lists">
<var>${diff_result}</var>
<arg>${diff_result}</arg>
<arg>${html_order_diff}</arg>
<status status="NOT RUN" start="2025-04-29T15:58:58.764220" elapsed="0.000007"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.764168" elapsed="0.000071"/>
</branch>
<status status="NOT RUN" start="2025-04-29T15:58:58.764163" elapsed="0.000084"/>
</if>
<status status="NOT RUN" start="2025-04-29T15:58:58.763889" elapsed="0.000365"/>
</branch>
<status status="NOT RUN" start="2025-04-29T15:58:58.763884" elapsed="0.000388"/>
</if>
<status status="NOT RUN" start="2025-04-29T15:58:58.763690" elapsed="0.000589"/>
</branch>
<branch type="ELSE IF" condition="&quot;${code_type}&quot; == &quot;css&quot;">
<kw name="Compare Css Rules" owner="WebCourseLibrary">
<msg time="2025-04-29T15:58:58.764774" level="INFO">${diff_result} = ['Missing CSS property in body: font-family: Helvetica, sans-serif', 'CSS selector order is incorrect. Expected: body, .container, .color-box, header, button', 'Properties in button are in wrong order...</msg>
<var>${diff_result}</var>
<arg>${student_code}</arg>
<arg>${teacher_code}</arg>
<doc>Compare CSS rules and return specific differences</doc>
<status status="PASS" start="2025-04-29T15:58:58.764343" elapsed="0.000440"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-04-29T15:58:58.764936" level="INFO">Starting process:
python /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/json_helper.py analyze_css /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_css.css /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_css.css</msg>
<msg time="2025-04-29T15:58:58.766846" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-04-29T15:58:58.785998" level="INFO">Process completed.</msg>
<msg time="2025-04-29T15:58:58.786182" level="INFO">${css_order_result} = &lt;result object with rc 0&gt;</msg>
<var>${css_order_result}</var>
<arg>python</arg>
<arg>${HELPER_SCRIPT}</arg>
<arg>analyze_css</arg>
<arg>${student_file}</arg>
<arg>${teacher_file}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-04-29T15:58:58.764819" elapsed="0.021383"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.786530" level="INFO">${css_order_diff} = []</msg>
<var>${css_order_diff}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-04-29T15:58:58.786416" elapsed="0.000123"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.786771" level="INFO">${stdout_empty} = False</msg>
<var>${stdout_empty}</var>
<arg>$css_order_result.stdout == ""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-04-29T15:58:58.786593" elapsed="0.000188"/>
</kw>
<if>
<branch type="IF" condition="$css_order_result.rc == 0 and not $stdout_empty">
<kw name="Split To Lines" owner="String">
<msg time="2025-04-29T15:58:58.787235" level="INFO">1 lines returned</msg>
<msg time="2025-04-29T15:58:58.787266" level="INFO">${css_order_lines} = ['CSS selector order is different. Expected: body, .container, button']</msg>
<var>${css_order_lines}</var>
<arg>${css_order_result.stdout}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2025-04-29T15:58:58.786964" elapsed="0.000311"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Strip String" owner="String">
<msg time="2025-04-29T15:58:58.787616" level="INFO">${stripped} = CSS selector order is different. Expected: body, .container, button</msg>
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-04-29T15:58:58.787541" elapsed="0.000088"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.787980" level="INFO">${is_empty} = False</msg>
<var>${is_empty}</var>
<arg>"${stripped}" == ""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-04-29T15:58:58.787672" elapsed="0.000325"/>
</kw>
<if>
<branch type="IF" condition="not ${is_empty}">
<kw name="Append To List" owner="Collections">
<arg>${css_order_diff}</arg>
<arg>${stripped}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.788150" elapsed="0.000082"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.788041" elapsed="0.000210"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.788027" elapsed="0.000244"/>
</if>
<var name="${line}">CSS selector order is different. Expected: body, .container, button</var>
<status status="PASS" start="2025-04-29T15:58:58.787469" elapsed="0.000814"/>
</iter>
<var>${line}</var>
<value>@{css_order_lines}</value>
<status status="PASS" start="2025-04-29T15:58:58.787310" elapsed="0.001040"/>
</for>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.788495" level="INFO">Length is 1.</msg>
<msg time="2025-04-29T15:58:58.788520" level="INFO">${diff_len} = 1</msg>
<var>${diff_len}</var>
<arg>${css_order_diff}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-04-29T15:58:58.788429" elapsed="0.000098"/>
</kw>
<if>
<branch type="IF" condition="${diff_len} &gt; 0">
<kw name="Combine Lists">
<kw name="Create List" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.788880" level="INFO">${combined} = []</msg>
<var>${combined}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-04-29T15:58:58.788840" elapsed="0.000049"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Append To List" owner="Collections">
<arg>${combined}</arg>
<arg>${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.788971" elapsed="0.000051"/>
</kw>
<var name="${item}">Missing CSS property in body: font-family: Helvetica, sans-serif</var>
<status status="PASS" start="2025-04-29T15:58:58.788946" elapsed="0.000090"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${combined}</arg>
<arg>${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.789085" elapsed="0.000044"/>
</kw>
<var name="${item}">CSS selector order is incorrect. Expected: body, .container, .color-box, header, button</var>
<status status="PASS" start="2025-04-29T15:58:58.789060" elapsed="0.000081"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${combined}</arg>
<arg>${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.789190" elapsed="0.000048"/>
</kw>
<var name="${item}">Properties in button are in wrong order. Expected: background-color, color, border...</var>
<status status="PASS" start="2025-04-29T15:58:58.789166" elapsed="0.000084"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${combined}</arg>
<arg>${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.789298" elapsed="0.000051"/>
</kw>
<var name="${item}">Properties in .color-box are in wrong order. Expected: display, width, height...</var>
<status status="PASS" start="2025-04-29T15:58:58.789274" elapsed="0.000087"/>
</iter>
<var>${item}</var>
<value>@{list1}</value>
<status status="PASS" start="2025-04-29T15:58:58.788908" elapsed="0.000463"/>
</for>
<for flavor="IN">
<iter>
<kw name="Append To List" owner="Collections">
<arg>${combined}</arg>
<arg>${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.789454" elapsed="0.000046"/>
</kw>
<var name="${item}">CSS selector order is different. Expected: body, .container, button</var>
<status status="PASS" start="2025-04-29T15:58:58.789431" elapsed="0.000081"/>
</iter>
<var>${item}</var>
<value>@{list2}</value>
<status status="PASS" start="2025-04-29T15:58:58.789391" elapsed="0.000130"/>
</for>
<return>
<value>${combined}</value>
<status status="PASS" start="2025-04-29T15:58:58.789541" elapsed="0.000021"/>
</return>
<msg time="2025-04-29T15:58:58.789614" level="INFO">${diff_result} = ['Missing CSS property in body: font-family: Helvetica, sans-serif', 'CSS selector order is incorrect. Expected: body, .container, .color-box, header, button', 'Properties in button are in wrong order...</msg>
<var>${diff_result}</var>
<arg>${diff_result}</arg>
<arg>${css_order_diff}</arg>
<status status="PASS" start="2025-04-29T15:58:58.788702" elapsed="0.000920"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.788550" elapsed="0.001083"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.788544" elapsed="0.001097"/>
</if>
<status status="PASS" start="2025-04-29T15:58:58.786838" elapsed="0.002811"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.786820" elapsed="0.002839"/>
</if>
<status status="PASS" start="2025-04-29T15:58:58.764286" elapsed="0.025382"/>
</branch>
<branch type="ELSE IF" condition="&quot;${code_type}&quot; == &quot;js&quot;">
<kw name="Compare Js Functionality" owner="WebCourseLibrary">
<var>${diff_result}</var>
<arg>${student_code}</arg>
<arg>${teacher_code}</arg>
<doc>Compare JavaScript functionality and return specific differences</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.789720" elapsed="0.000007"/>
</kw>
<kw name="Analyze JS Specific Differences">
<var>${js_specific_analysis}</var>
<arg>${student_code}</arg>
<arg>${teacher_code}</arg>
<status status="NOT RUN" start="2025-04-29T15:58:58.789811" elapsed="0.000008"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>Detailed JavaScript Analysis:</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.789855" elapsed="0.000006"/>
</kw>
<kw name="Log Many" owner="BuiltIn">
<arg>@{js_specific_analysis}</arg>
<arg>WARN</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.789900" elapsed="0.000005"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${js_diff_len}</var>
<arg>${js_specific_analysis}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.789935" elapsed="0.000005"/>
</kw>
<if>
<branch type="IF" condition="${js_diff_len} &gt; 0">
<kw name="Combine Lists">
<var>${diff_result}</var>
<arg>${diff_result}</arg>
<arg>${js_specific_analysis}</arg>
<status status="NOT RUN" start="2025-04-29T15:58:58.790007" elapsed="0.000006"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.789959" elapsed="0.000066"/>
</branch>
<status status="NOT RUN" start="2025-04-29T15:58:58.789954" elapsed="0.000079"/>
</if>
<status status="NOT RUN" start="2025-04-29T15:58:58.789677" elapsed="0.000363"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.763685" elapsed="0.026361"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.790144" level="INFO">@{differences} = [ Missing CSS property in body: font-family: Helvetica, sans-serif | CSS selector order is incorrect. Expected: body, .container, .color-box, header, button | Properties in button are in wrong order. ...</msg>
<var>@{differences}</var>
<arg>${diff_result}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.790083" elapsed="0.000070"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.790245" level="WARN">css differences found:</msg>
<arg>${code_type} differences found:</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.790186" elapsed="0.000133"/>
</kw>
<kw name="Log Many" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.790416" level="INFO">Missing CSS property in body: font-family: Helvetica, sans-serif</msg>
<msg time="2025-04-29T15:58:58.790426" level="INFO">CSS selector order is incorrect. Expected: body, .container, .color-box, header, button</msg>
<msg time="2025-04-29T15:58:58.790435" level="INFO">Properties in button are in wrong order. Expected: background-color, color, border...</msg>
<msg time="2025-04-29T15:58:58.790442" level="INFO">Properties in .color-box are in wrong order. Expected: display, width, height...</msg>
<msg time="2025-04-29T15:58:58.790447" level="INFO">CSS selector order is different. Expected: body, .container, button</msg>
<msg time="2025-04-29T15:58:58.790455" level="INFO">WARN</msg>
<arg>@{differences}</arg>
<arg>WARN</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.790368" elapsed="0.000097"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.763645" elapsed="0.026831"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.763638" elapsed="0.026846"/>
</if>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.790647" level="INFO">${result} = {'match': False, 'differences': ['Missing CSS property in body: font-family: Helvetica, sans-serif', 'CSS selector order is incorrect. Expected: body, .container, .color-box, header, button', 'Propert...</msg>
<var>${result}</var>
<arg>match=${match}</arg>
<arg>differences=${differences}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.790543" elapsed="0.000114"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" start="2025-04-29T15:58:58.790674" elapsed="0.000010"/>
</return>
<msg time="2025-04-29T15:58:58.790725" level="INFO">${css_result} = {'match': False, 'differences': ['Missing CSS property in body: font-family: Helvetica, sans-serif', 'CSS selector order is incorrect. Expected: body, .container, .color-box, header, button', 'Propert...</msg>
<var>${css_result}</var>
<arg>${student_paths["css_path"]}</arg>
<arg>${teacher_paths["css_path"]}</arg>
<arg>css</arg>
<status status="PASS" start="2025-04-29T15:58:58.762411" elapsed="0.028323"/>
</kw>
<kw name="Compare Code Files">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.791460" level="INFO" html="true">Getting file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_js.js"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/students_js.js&lt;/a&gt;'.</msg>
<msg time="2025-04-29T15:58:58.791576" level="INFO">${student_code} = // Wait for DOM to be fully loaded
document.addEventListener('DOMContentLoaded', function() {
    // Different order of variable declarations
    const contactForm = document.getElementById('contact-f...</msg>
<var>${student_code}</var>
<arg>${student_file}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-04-29T15:58:58.791290" elapsed="0.000294"/>
</kw>
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.791654" level="INFO" html="true">Getting file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_js.js"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_js.js&lt;/a&gt;'.</msg>
<msg time="2025-04-29T15:58:58.791705" level="INFO">${teacher_code} = // Wait for DOM to be fully loaded
document.addEventListener('DOMContentLoaded', function() {
    // Teacher's order of variable declarations
    const result = document.getElementById('result');
    ...</msg>
<var>${teacher_code}</var>
<arg>${teacher_file}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-04-29T15:58:58.791618" elapsed="0.000095"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.791867" level="INFO">// Wait for DOM to be fully loaded
document.addEventListener('DOMContentLoaded', function() {
    // Different order of variable declarations
    const contactForm = document.getElementById('contact-form');
    const result = document.getElementById('result');
    const buttons = document.querySelectorAll('button');
    
    // Different order of function declarations
    function deleteItem() {
        console.log('Item deleted');
        if (result) {
            result.textContent = 'Item deleted!';
            result.style.backgroundColor = '#ffe6e6';
        }
    }
    
    function saveData() {
        console.log('Data saved');
        if (result) {
            result.textContent = 'Data saved successfully!';
            result.style.backgroundColor = '#e6ffe6';
        }
    }
    
    function cancelAction() {
        console.log('Action canceled');
        if (result) {
            result.textContent = 'Action canceled.';
            result.style.backgroundColor = '#e6f7ff';
        }
    }
    
    // Different order of event listeners
    if (buttons.length &gt; 0) {
        // Registering events in different order
        document.querySelector('.danger').addEventListener('click', deleteItem);
        document.querySelector('.primary').addEventListener('click', saveData);
        document.querySelector('.secondary').addEventListener('click', cancelAction);
    }
    
    // Form submission handling
    if (contactForm) {
        contactForm.addEventListener('submit', function(event) {
            event.preventDefault();
            // Different order of operations
            contactForm.reset();
            if (result) {
                result.textContent = 'Form submitted!';
            }
        });
    }
});

!=

// Wait for DOM to be fully loaded
document.addEventListener('DOMContentLoaded', function() {
    // Teacher's order of variable declarations
    const result = document.getElementById('result');
    const buttons = document.querySelectorAll('button');
    const contactForm = document.getElementById('contact-form');
    
    // Teacher's order of function declarations
    function saveData() {
        console.log('Data saved');
        if (result) {
            result.textContent = 'Data saved successfully!';
            result.style.backgroundColor = '#e6ffe6';
        }
    }
    
    function cancelAction() {
        console.log('Action canceled');
        if (result) {
            result.textContent = 'Action canceled.';
            result.style.backgroundColor = '#e6f7ff';
        }
    }
    
    function deleteItem() {
        console.log('Item deleted');
        if (result) {
            result.textContent = 'Item deleted!';
            result.style.backgroundColor = '#ffe6e6';
        }
    }
    
    // Teacher's order of event listeners
    if (buttons.length &gt; 0) {
        // Events in teacher's order
        document.querySelector('.primary').addEventListener('click', saveData);
        document.querySelector('.secondary').addEventListener('click', cancelAction);
        document.querySelector('.danger').addEventListener('click', deleteItem);
    }
    
    // Form submission handling
    if (contactForm) {
        contactForm.addEventListener('submit', function(event) {
            event.preventDefault();
            // Teacher's order of operations
            if (result) {
                result.textContent = 'Form submitted!';
            }
            contactForm.reset();
        });
    }
});</msg>
<msg time="2025-04-29T15:58:58.792060" level="FAIL">Multiline strings are different:
--- first
+++ second
@@ -1,19 +1,11 @@
 // Wait for DOM to be fully loaded
 document.addEventListener('DOMContentLoaded', function() {
-    // Different order of variable declarations
-    const contactForm = document.getElementById('contact-form');
+    // Teacher's order of variable declarations
     const result = document.getElementById('result');
     const buttons = document.querySelectorAll('button');
+    const contactForm = document.getElementById('contact-form');
 
-    // Different order of function declarations
-    function deleteItem() {
-        console.log('Item deleted');
-        if (result) {
-            result.textContent = 'Item deleted!';
-            result.style.backgroundColor = '#ffe6e6';
-        }
-    }
-
+    // Teacher's order of function declarations
     function saveData() {
         console.log('Data saved');
         if (result) {
@@ -30,23 +22,31 @@
         }
     }
 
-    // Different order of event listeners
+    function deleteItem() {
+        console.log('Item deleted');
+        if (result) {
+            result.textContent = 'Item deleted!';
+            result.style.backgroundColor = '#ffe6e6';
+        }
+    }
+
+    // Teacher's order of event listeners
     if (buttons.length &gt; 0) {
-        // Registering events in different order
-        document.querySelector('.danger').addEventListener('click', deleteItem);
+        // Events in teacher's order
         document.querySelector('.primary').addEventListener('click', saveData);
         document.querySelector('.secondary').addEventListener('click', cancelAction);
+        document.querySelector('.danger').addEventListener('click', deleteItem);
     }
 
     // Form submission handling
     if (contactForm) {
         contactForm.addEventListener('submit', function(event) {
             event.preventDefault();
-            // Different order of operations
-            contactForm.reset();
+            // Teacher's order of operations
             if (result) {
                 result.textContent = 'Form submitted!';
             }
+            contactForm.reset();
         });
     }
 });</msg>
<arg>${student_code}</arg>
<arg>${teacher_code}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2025-04-29T15:58:58.791801" elapsed="0.000323">Multiline strings are different:
--- first
+++ second
@@ -1,19 +1,11 @@
 // Wait for DOM to be fully loaded
 document.addEventListener('DOMContentLoaded', function() {
-    // Different order of variable declarations
-    const contactForm = document.getElementById('contact-form');
+    // Teacher's order of variable declarations
     const result = document.getElementById('result');
     const buttons = document.querySelectorAll('button');
+    const contactForm = document.getElementById('contact-form');
 
-    // Different order of function declarations
-    function deleteItem() {
-        console.log('Item deleted');
-        if (result) {
-            result.textContent = 'Item deleted!';
-            result.style.backgroundColor = '#ffe6e6';
-        }
    [ Message content over the limit has been removed. ]
         document.querySelector('.secondary').addEventListener('click', cancelAction);
+        document.querySelector('.danger').addEventListener('click', deleteItem);
     }
 
     // Form submission handling
     if (contactForm) {
         contactForm.addEventListener('submit', function(event) {
             event.preventDefault();
-            // Different order of operations
-            contactForm.reset();
+            // Teacher's order of operations
             if (result) {
                 result.textContent = 'Form submitted!';
             }
+            contactForm.reset();
         });
     }
 });</status>
</kw>
<msg time="2025-04-29T15:58:58.792161" level="INFO">${match} = False</msg>
<var>${match}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${student_code}</arg>
<arg>${teacher_code}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-04-29T15:58:58.791750" elapsed="0.000418"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.792245" level="INFO">@{differences} = [ ]</msg>
<var>@{differences}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-04-29T15:58:58.792204" elapsed="0.000048"/>
</kw>
<if>
<branch type="IF" condition="not ${match}">
<if>
<branch type="IF" condition="&quot;${code_type}&quot; == &quot;html&quot;">
<kw name="Compare Html Structure" owner="WebCourseLibrary">
<var>${diff_result}</var>
<arg>${student_code}</arg>
<arg>${teacher_code}</arg>
<doc>Compare HTML structure and return specific differences</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.792389" elapsed="0.000007"/>
</kw>
<kw name="Run Process" owner="Process">
<var>${html_order_result}</var>
<arg>python</arg>
<arg>${HELPER_SCRIPT}</arg>
<arg>analyze_html</arg>
<arg>${student_file}</arg>
<arg>${teacher_file}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.792432" elapsed="0.000006"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<var>${html_order_diff}</var>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.792479" elapsed="0.000006"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${stdout_empty}</var>
<arg>$html_order_result.stdout == ""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.792517" elapsed="0.000005"/>
</kw>
<if>
<branch type="IF" condition="$html_order_result.rc == 0 and not $stdout_empty">
<kw name="Split To Lines" owner="String">
<var>${html_order_lines}</var>
<arg>${html_order_result.stdout}</arg>
<doc>Splits the given string to lines.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.792582" elapsed="0.000005"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Strip String" owner="String">
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.792671" elapsed="0.000006"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${is_empty}</var>
<arg>"${stripped}" == ""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.792707" elapsed="0.000005"/>
</kw>
<if>
<branch type="IF" condition="not ${is_empty}">
<kw name="Append To List" owner="Collections">
<arg>${html_order_diff}</arg>
<arg>${stripped}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.792758" elapsed="0.000005"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.792731" elapsed="0.000043"/>
</branch>
<status status="NOT RUN" start="2025-04-29T15:58:58.792726" elapsed="0.000055"/>
</if>
<var name="${line}"/>
<status status="NOT RUN" start="2025-04-29T15:58:58.792646" elapsed="0.000142"/>
</iter>
<var>${line}</var>
<value>@{html_order_lines}</value>
<status status="NOT RUN" start="2025-04-29T15:58:58.792607" elapsed="0.000190"/>
</for>
<kw name="Get Length" owner="BuiltIn">
<var>${diff_len}</var>
<arg>${html_order_diff}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.792825" elapsed="0.000005"/>
</kw>
<if>
<branch type="IF" condition="${diff_len} &gt; 0">
<kw name="Combine Lists">
<var>${diff_result}</var>
<arg>${diff_result}</arg>
<arg>${html_order_diff}</arg>
<status status="NOT RUN" start="2025-04-29T15:58:58.792900" elapsed="0.000007"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.792848" elapsed="0.000071"/>
</branch>
<status status="NOT RUN" start="2025-04-29T15:58:58.792844" elapsed="0.000082"/>
</if>
<status status="NOT RUN" start="2025-04-29T15:58:58.792544" elapsed="0.000389"/>
</branch>
<status status="NOT RUN" start="2025-04-29T15:58:58.792537" elapsed="0.000403"/>
</if>
<status status="NOT RUN" start="2025-04-29T15:58:58.792326" elapsed="0.000621"/>
</branch>
<branch type="ELSE IF" condition="&quot;${code_type}&quot; == &quot;css&quot;">
<kw name="Compare Css Rules" owner="WebCourseLibrary">
<var>${diff_result}</var>
<arg>${student_code}</arg>
<arg>${teacher_code}</arg>
<doc>Compare CSS rules and return specific differences</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.793008" elapsed="0.000006"/>
</kw>
<kw name="Run Process" owner="Process">
<var>${css_order_result}</var>
<arg>python</arg>
<arg>${HELPER_SCRIPT}</arg>
<arg>analyze_css</arg>
<arg>${student_file}</arg>
<arg>${teacher_file}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.793044" elapsed="0.000005"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<var>${css_order_diff}</var>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.793078" elapsed="0.000005"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${stdout_empty}</var>
<arg>$css_order_result.stdout == ""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.793109" elapsed="0.000004"/>
</kw>
<if>
<branch type="IF" condition="$css_order_result.rc == 0 and not $stdout_empty">
<kw name="Split To Lines" owner="String">
<var>${css_order_lines}</var>
<arg>${css_order_result.stdout}</arg>
<doc>Splits the given string to lines.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.793158" elapsed="0.000005"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Strip String" owner="String">
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.793228" elapsed="0.000006"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${is_empty}</var>
<arg>"${stripped}" == ""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.793263" elapsed="0.000005"/>
</kw>
<if>
<branch type="IF" condition="not ${is_empty}">
<kw name="Append To List" owner="Collections">
<arg>${css_order_diff}</arg>
<arg>${stripped}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.793311" elapsed="0.000021"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.793285" elapsed="0.000059"/>
</branch>
<status status="NOT RUN" start="2025-04-29T15:58:58.793280" elapsed="0.000071"/>
</if>
<var name="${line}"/>
<status status="NOT RUN" start="2025-04-29T15:58:58.793204" elapsed="0.000154"/>
</iter>
<var>${line}</var>
<value>@{css_order_lines}</value>
<status status="NOT RUN" start="2025-04-29T15:58:58.793176" elapsed="0.000190"/>
</for>
<kw name="Get Length" owner="BuiltIn">
<var>${diff_len}</var>
<arg>${css_order_diff}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.793393" elapsed="0.000005"/>
</kw>
<if>
<branch type="IF" condition="${diff_len} &gt; 0">
<kw name="Combine Lists">
<var>${diff_result}</var>
<arg>${diff_result}</arg>
<arg>${css_order_diff}</arg>
<status status="NOT RUN" start="2025-04-29T15:58:58.793462" elapsed="0.000007"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.793416" elapsed="0.000065"/>
</branch>
<status status="NOT RUN" start="2025-04-29T15:58:58.793411" elapsed="0.000077"/>
</if>
<status status="NOT RUN" start="2025-04-29T15:58:58.793131" elapsed="0.000364"/>
</branch>
<status status="NOT RUN" start="2025-04-29T15:58:58.793127" elapsed="0.000375"/>
</if>
<status status="NOT RUN" start="2025-04-29T15:58:58.792954" elapsed="0.000555"/>
</branch>
<branch type="ELSE IF" condition="&quot;${code_type}&quot; == &quot;js&quot;">
<kw name="Compare Js Functionality" owner="WebCourseLibrary">
<msg time="2025-04-29T15:58:58.793664" level="INFO">${diff_result} = ['Variable declaration order is incorrect. Expected: result, contactForm']</msg>
<var>${diff_result}</var>
<arg>${student_code}</arg>
<arg>${teacher_code}</arg>
<doc>Compare JavaScript functionality and return specific differences</doc>
<status status="PASS" start="2025-04-29T15:58:58.793567" elapsed="0.000106"/>
</kw>
<kw name="Analyze JS Specific Differences">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.793879" level="INFO">${temp_student_js} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/student_js_analysis.js</msg>
<var>${temp_student_js}</var>
<arg>/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/student_js_analysis.js</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.793842" elapsed="0.000045"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.793954" level="INFO">${temp_teacher_js} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_js_analysis.js</msg>
<var>${temp_teacher_js}</var>
<arg>/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_js_analysis.js</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.793919" elapsed="0.000042"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.794257" level="INFO" html="true">Created file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/student_js_analysis.js"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/student_js_analysis.js&lt;/a&gt;'.</msg>
<arg>${temp_student_js}</arg>
<arg>${student_js}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-04-29T15:58:58.793998" elapsed="0.000278"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.794466" level="INFO" html="true">Created file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_js_analysis.js"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_js_analysis.js&lt;/a&gt;'.</msg>
<arg>${temp_teacher_js}</arg>
<arg>${teacher_js}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-04-29T15:58:58.794309" elapsed="0.000431"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-04-29T15:58:58.794887" level="INFO">Starting process:
python /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/json_helper.py analyze_js /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/student_js_analysis.js /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_js_analysis.js</msg>
<msg time="2025-04-29T15:58:58.796735" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-04-29T15:58:58.815983" level="INFO">Process completed.</msg>
<msg time="2025-04-29T15:58:58.816148" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>python</arg>
<arg>${HELPER_SCRIPT}</arg>
<arg>analyze_js</arg>
<arg>${temp_student_js}</arg>
<arg>${temp_teacher_js}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-04-29T15:58:58.794777" elapsed="0.021389"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.816794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to analyze JS differences</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-04-29T15:58:58.816368" elapsed="0.000464"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2025-04-29T15:58:58.817083" level="INFO">1 lines returned</msg>
<msg time="2025-04-29T15:58:58.817109" level="INFO">${lines} = ['Function declaration order is different. Expected: saveData, cancelAction, deleteItem']</msg>
<var>${lines}</var>
<arg>${result.stdout}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2025-04-29T15:58:58.816909" elapsed="0.000208"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.817217" level="INFO">@{specific_differences} = [ ]</msg>
<var>@{specific_differences}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-04-29T15:58:58.817162" elapsed="0.000069"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Strip String" owner="String">
<msg time="2025-04-29T15:58:58.817443" level="INFO">${stripped} = Function declaration order is different. Expected: saveData, cancelAction, deleteItem</msg>
<var>${stripped}</var>
<arg>${line}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-04-29T15:58:58.817391" elapsed="0.000061"/>
</kw>
<if>
<branch type="IF" condition="&quot;${stripped}&quot; != &quot;${EMPTY}&quot;">
<kw name="Append To List" owner="Collections">
<arg>${specific_differences}</arg>
<arg>${stripped}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.817680" elapsed="0.000059"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.817484" elapsed="0.000269"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.817473" elapsed="0.000289"/>
</if>
<var name="${line}">Function declaration order is different. Expected: saveData, cancelAction, deleteItem</var>
<status status="PASS" start="2025-04-29T15:58:58.817354" elapsed="0.000416"/>
</iter>
<var>${line}</var>
<value>@{lines}</value>
<status status="PASS" start="2025-04-29T15:58:58.817262" elapsed="0.000521"/>
</for>
<kw name="Remove File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.817980" level="INFO" html="true">Removed file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/student_js_analysis.js"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/student_js_analysis.js&lt;/a&gt;'.</msg>
<arg>${temp_student_js}</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2025-04-29T15:58:58.817819" elapsed="0.000211"/>
</kw>
<kw name="Remove File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.818143" level="INFO" html="true">Removed file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_js_analysis.js"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp/teacher_js_analysis.js&lt;/a&gt;'.</msg>
<arg>${temp_teacher_js}</arg>
<doc>Removes a file with the given path.</doc>
<status status="PASS" start="2025-04-29T15:58:58.818061" elapsed="0.000098"/>
</kw>
<return>
<value>${specific_differences}</value>
<status status="PASS" start="2025-04-29T15:58:58.818181" elapsed="0.000022"/>
</return>
<msg time="2025-04-29T15:58:58.818259" level="INFO">${js_specific_analysis} = ['Function declaration order is different. Expected: saveData, cancelAction, deleteItem']</msg>
<var>${js_specific_analysis}</var>
<arg>${student_code}</arg>
<arg>${teacher_code}</arg>
<status status="PASS" start="2025-04-29T15:58:58.793746" elapsed="0.024521"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.818346" level="WARN">Detailed JavaScript Analysis:</msg>
<arg>Detailed JavaScript Analysis:</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.818304" elapsed="0.000122"/>
</kw>
<kw name="Log Many" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.818536" level="INFO">Function declaration order is different. Expected: saveData, cancelAction, deleteItem</msg>
<msg time="2025-04-29T15:58:58.818548" level="INFO">WARN</msg>
<arg>@{js_specific_analysis}</arg>
<arg>WARN</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.818481" elapsed="0.000077"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.818630" level="INFO">Length is 1.</msg>
<msg time="2025-04-29T15:58:58.818657" level="INFO">${js_diff_len} = 1</msg>
<var>${js_diff_len}</var>
<arg>${js_specific_analysis}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-04-29T15:58:58.818595" elapsed="0.000069"/>
</kw>
<if>
<branch type="IF" condition="${js_diff_len} &gt; 0">
<kw name="Combine Lists">
<kw name="Create List" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.818966" level="INFO">${combined} = []</msg>
<var>${combined}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-04-29T15:58:58.818930" elapsed="0.000045"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Append To List" owner="Collections">
<arg>${combined}</arg>
<arg>${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.819066" elapsed="0.000044"/>
</kw>
<var name="${item}">Variable declaration order is incorrect. Expected: result, contactForm</var>
<status status="PASS" start="2025-04-29T15:58:58.819042" elapsed="0.000080"/>
</iter>
<var>${item}</var>
<value>@{list1}</value>
<status status="PASS" start="2025-04-29T15:58:58.819003" elapsed="0.000129"/>
</for>
<for flavor="IN">
<iter>
<kw name="Append To List" owner="Collections">
<arg>${combined}</arg>
<arg>${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.819202" elapsed="0.000049"/>
</kw>
<var name="${item}">Function declaration order is different. Expected: saveData, cancelAction, deleteItem</var>
<status status="PASS" start="2025-04-29T15:58:58.819178" elapsed="0.000085"/>
</iter>
<var>${item}</var>
<value>@{list2}</value>
<status status="PASS" start="2025-04-29T15:58:58.819146" elapsed="0.000126"/>
</for>
<return>
<value>${combined}</value>
<status status="PASS" start="2025-04-29T15:58:58.819285" elapsed="0.000010"/>
</return>
<msg time="2025-04-29T15:58:58.819333" level="INFO">${diff_result} = ['Variable declaration order is incorrect. Expected: result, contactForm', 'Function declaration order is different. Expected: saveData, cancelAction, deleteItem']</msg>
<var>${diff_result}</var>
<arg>${diff_result}</arg>
<arg>${js_specific_analysis}</arg>
<status status="PASS" start="2025-04-29T15:58:58.818800" elapsed="0.000541"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.818687" elapsed="0.000665"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.818680" elapsed="0.000680"/>
</if>
<status status="PASS" start="2025-04-29T15:58:58.793515" elapsed="0.025853"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.792319" elapsed="0.027057"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.819458" level="INFO">@{differences} = [ Variable declaration order is incorrect. Expected: result, contactForm | Function declaration order is different. Expected: saveData, cancelAction, deleteItem ]</msg>
<var>@{differences}</var>
<arg>${diff_result}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.819408" elapsed="0.000058"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.819544" level="WARN">js differences found:</msg>
<arg>${code_type} differences found:</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.819500" elapsed="0.000087"/>
</kw>
<kw name="Log Many" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.819730" level="INFO">Variable declaration order is incorrect. Expected: result, contactForm</msg>
<msg time="2025-04-29T15:58:58.819746" level="INFO">Function declaration order is different. Expected: saveData, cancelAction, deleteItem</msg>
<msg time="2025-04-29T15:58:58.819756" level="INFO">WARN</msg>
<arg>@{differences}</arg>
<arg>WARN</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.819652" elapsed="0.000116"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.792281" elapsed="0.027503"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.792273" elapsed="0.027523"/>
</if>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.819982" level="INFO">${result} = {'match': False, 'differences': ['Variable declaration order is incorrect. Expected: result, contactForm', 'Function declaration order is different. Expected: saveData, cancelAction, deleteItem']}</msg>
<var>${result}</var>
<arg>match=${match}</arg>
<arg>differences=${differences}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.819850" elapsed="0.000142"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" start="2025-04-29T15:58:58.820013" elapsed="0.000013"/>
</return>
<msg time="2025-04-29T15:58:58.820077" level="INFO">${js_result} = {'match': False, 'differences': ['Variable declaration order is incorrect. Expected: result, contactForm', 'Function declaration order is different. Expected: saveData, cancelAction, deleteItem']}</msg>
<var>${js_result}</var>
<arg>${student_paths["js_path"]}</arg>
<arg>${teacher_paths["js_path"]}</arg>
<arg>js</arg>
<status status="PASS" start="2025-04-29T15:58:58.790963" elapsed="0.029125"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.820673" level="INFO">${overall_match} = False</msg>
<var>${overall_match}</var>
<arg>${html_result["match"]} and ${css_result["match"]} and ${js_result["match"]}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-04-29T15:58:58.820160" elapsed="0.000526"/>
</kw>
<kw name="Convert To Boolean" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.820902" level="INFO">${overall_match_bool} = False</msg>
<var>${overall_match_bool}</var>
<arg>${overall_match}</arg>
<doc>Converts the given item to Boolean true or false.</doc>
<status status="PASS" start="2025-04-29T15:58:58.820785" elapsed="0.000131"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.821866" level="INFO">${validation_data} = {'html_match': False, 'css_match': False, 'js_match': False, 'overall_match': False, 'html_differences': ['Missing background-color: #f5f5f5 in body style rule', 'Color boxes are in wrong order. Expec...</msg>
<var>${validation_data}</var>
<arg>html_match=${html_result["match"]}</arg>
<arg>css_match=${css_result["match"]}</arg>
<arg>js_match=${js_result["match"]}</arg>
<arg>overall_match=${overall_match_bool}</arg>
<arg>html_differences=${html_result["differences"]}</arg>
<arg>css_differences=${css_result["differences"]}</arg>
<arg>js_differences=${js_result["differences"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.821026" elapsed="0.000854"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.822027" level="INFO">${report_file} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results/student_validation.json</msg>
<var>${report_file}</var>
<arg>${OUTPUT_DIR}/student_validation.json</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-04-29T15:58:58.821962" elapsed="0.000075"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.822312" level="INFO">${report_json} = {
  "html_match": false,
  "css_match": false,
  "js_match": false,
  "overall_match": false,
  "html_differences": [
    "Missing background-color: #f5f5f5 in body style rule",
    "Color boxes are i...</msg>
<var>${report_json}</var>
<arg>json.dumps(${validation_data}, indent=2)</arg>
<arg>modules=json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-04-29T15:58:58.822095" elapsed="0.000228"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.822649" level="INFO" html="true">Created file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results/student_validation.json"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results/student_validation.json&lt;/a&gt;'.</msg>
<arg>${report_file}</arg>
<arg>${report_json}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-04-29T15:58:58.822384" elapsed="0.000291"/>
</kw>
<if>
<branch type="IF" condition="${overall_match_bool}">
<kw name="Log" owner="BuiltIn">
<arg>All code parts match! Student submission is correct.</arg>
<arg>INFO</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.822781" elapsed="0.000007"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.822725" elapsed="0.000077"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.822883" level="WARN">Student submission has differences. Check the detailed report.</msg>
<arg>Student submission has differences. Check the detailed report.</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.822846" elapsed="0.000084"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.822811" elapsed="0.000133"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.822715" elapsed="0.000237"/>
</if>
<kw name="Pass Execution" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.823033" level="INFO">Execution passed with message:
Test completed with detailed results saved to JSON</msg>
<arg>Test completed with detailed results saved to JSON</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2025-04-29T15:58:58.823000" elapsed="0.000072">Test completed with detailed results saved to JSON</status>
</kw>
<doc>Test defaultcode in student JSON against teacher reference</doc>
<status status="PASS" start="2025-04-29T15:58:58.679061" elapsed="0.144142">Test completed with detailed results saved to JSON</status>
</test>
<kw name="Teardown Test Environment" type="TEARDOWN">
<kw name="List Files In Directory" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.823785" level="INFO" html="true">Listing contents of directory '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results&lt;/a&gt;'.</msg>
<msg time="2025-04-29T15:58:58.823852" level="INFO">2 files:
defaultcode_comparison_result.json
student_validation.json</msg>
<msg time="2025-04-29T15:58:58.823879" level="INFO">${files} = ['defaultcode_comparison_result.json', 'student_validation.json']</msg>
<var>${files}</var>
<arg>${OUTPUT_DIR}</arg>
<arg>*.json</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<status status="PASS" start="2025-04-29T15:58:58.823723" elapsed="0.000163"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.823961" level="INFO">${all_results} = []</msg>
<var>${all_results}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-04-29T15:58:58.823925" elapsed="0.000044"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Continue For Loop If" owner="BuiltIn">
<arg>'${file}' == 'validation_report.json'</arg>
<doc>Skips the current FOR loop iteration if the ``condition`` is true.</doc>
<status status="PASS" start="2025-04-29T15:58:58.824092" elapsed="0.000079"/>
</kw>
<kw name="Join Path" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.824270" level="INFO">${file_path} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results/defaultcode_comparison_result.json</msg>
<var>${file_path}</var>
<arg>${OUTPUT_DIR}</arg>
<arg>${file}</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<status status="PASS" start="2025-04-29T15:58:58.824208" elapsed="0.000071"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.824423" level="INFO" html="true">Getting file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results/defaultcode_comparison_result.json"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results/defaultcode_comparison_result.json&lt;/a&gt;'.</msg>
<msg time="2025-04-29T15:58:58.824497" level="INFO">${json_content} = {
  "timestamp": 1745917138.677399,
  "html_match": false,
  "css_match": false,
  "js_match": false,
  "html_differences": [
    "Missing background-color: #f5f5f5 in body style rule",
    "Color box...</msg>
<var>${json_content}</var>
<arg>${file_path}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-04-29T15:58:58.824370" elapsed="0.000137"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.824929" level="INFO">${json_obj} = {'timestamp': 1745917138.677399, 'html_match': False, 'css_match': False, 'js_match': False, 'html_differences': ['Missing background-color: #f5f5f5 in body style rule', 'Color boxes are in wrong orde...</msg>
<var>${json_obj}</var>
<arg>json.loads('''${json_content}''')</arg>
<arg>modules=json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-04-29T15:58:58.824574" elapsed="0.000370"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${all_results}</arg>
<arg>${json_obj}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.825047" elapsed="0.000157"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.824327" elapsed="0.000897"/>
</branch>
<branch type="EXCEPT">
<kw name="Log" owner="BuiltIn">
<arg>Error parsing JSON file: ${file_path}</arg>
<arg>level=WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.825297" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.825252" elapsed="0.000094"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.824303" elapsed="0.001059"/>
</try>
<var name="${file}">defaultcode_comparison_result.json</var>
<status status="PASS" start="2025-04-29T15:58:58.824061" elapsed="0.001312"/>
</iter>
<iter>
<kw name="Continue For Loop If" owner="BuiltIn">
<arg>'${file}' == 'validation_report.json'</arg>
<doc>Skips the current FOR loop iteration if the ``condition`` is true.</doc>
<status status="PASS" start="2025-04-29T15:58:58.825477" elapsed="0.000099"/>
</kw>
<kw name="Join Path" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.825685" level="INFO">${file_path} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results/student_validation.json</msg>
<var>${file_path}</var>
<arg>${OUTPUT_DIR}</arg>
<arg>${file}</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<status status="PASS" start="2025-04-29T15:58:58.825618" elapsed="0.000077"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.825813" level="INFO" html="true">Getting file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results/student_validation.json"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results/student_validation.json&lt;/a&gt;'.</msg>
<msg time="2025-04-29T15:58:58.825898" level="INFO">${json_content} = {
  "html_match": false,
  "css_match": false,
  "js_match": false,
  "overall_match": false,
  "html_differences": [
    "Missing background-color: #f5f5f5 in body style rule",
    "Color boxes are i...</msg>
<var>${json_content}</var>
<arg>${file_path}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-04-29T15:58:58.825765" elapsed="0.000142"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.826069" level="INFO">${json_obj} = {'html_match': False, 'css_match': False, 'js_match': False, 'overall_match': False, 'html_differences': ['Missing background-color: #f5f5f5 in body style rule', 'Color boxes are in wrong order. Expec...</msg>
<var>${json_obj}</var>
<arg>json.loads('''${json_content}''')</arg>
<arg>modules=json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-04-29T15:58:58.825947" elapsed="0.000133"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${all_results}</arg>
<arg>${json_obj}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.826121" elapsed="0.000050"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.825730" elapsed="0.000455"/>
</branch>
<branch type="EXCEPT">
<kw name="Log" owner="BuiltIn">
<arg>Error parsing JSON file: ${file_path}</arg>
<arg>level=WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.826234" elapsed="0.000007"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.826201" elapsed="0.000050"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.825716" elapsed="0.000546"/>
</try>
<var name="${file}">student_validation.json</var>
<status status="PASS" start="2025-04-29T15:58:58.825445" elapsed="0.000824"/>
</iter>
<var>${file}</var>
<value>@{files}</value>
<status status="PASS" start="2025-04-29T15:58:58.823993" elapsed="0.002287"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.826427" level="INFO">${final_report} = {'results': [{'timestamp': 1745917138.677399, 'html_match': False, 'css_match': False, 'js_match': False, 'html_differences': ['Missing background-color: #f5f5f5 in body style rule', 'Color boxes are ...</msg>
<var>${final_report}</var>
<arg>results=${all_results}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.826319" elapsed="0.000118"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.826696" level="INFO">${final_json} = {
  "results": [
    {
      "timestamp": 1745917138.677399,
      "html_match": false,
      "css_match": false,
      "js_match": false,
      "html_differences": [
        "Missing background-color...</msg>
<var>${final_json}</var>
<arg>json.dumps(${final_report}, indent=2)</arg>
<arg>modules=json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-04-29T15:58:58.826483" elapsed="0.000223"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.826957" level="INFO" html="true">Created file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results/validation_report.json"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/test_results/validation_report.json&lt;/a&gt;'.</msg>
<arg>${REPORT_FILE}</arg>
<arg>${final_json}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-04-29T15:58:58.826743" elapsed="0.000235"/>
</kw>
<kw name="Join Path" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.827059" level="INFO">${temp_dir} = /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp</msg>
<var>${temp_dir}</var>
<arg>/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2</arg>
<arg>temp</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<status status="PASS" start="2025-04-29T15:58:58.827016" elapsed="0.000050"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Directory Should Exist" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.827215" level="INFO" html="true">Directory '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp&lt;/a&gt;' exists.</msg>
<arg>${temp_dir}</arg>
<doc>Fails unless the given path points to an existing directory.</doc>
<status status="PASS" start="2025-04-29T15:58:58.827162" elapsed="0.000071"/>
</kw>
<msg time="2025-04-29T15:58:58.827259" level="INFO">${dir_exists} = True</msg>
<var>${dir_exists}</var>
<arg>Directory Should Exist</arg>
<arg>${temp_dir}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-04-29T15:58:58.827105" elapsed="0.000161"/>
</kw>
<if>
<branch type="IF" condition="${dir_exists}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-04-29T15:58:58.827380" level="INFO">Cleaning up temporary directory: /Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp</msg>
<arg>Cleaning up temporary directory: ${temp_dir}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-04-29T15:58:58.827341" elapsed="0.000054"/>
</kw>
<kw name="Remove Directory" owner="OperatingSystem">
<msg time="2025-04-29T15:58:58.827810" level="INFO" html="true">Removed directory '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/WebsiteTesting/v2/temp&lt;/a&gt;'.</msg>
<arg>${temp_dir}</arg>
<arg>recursive=True</arg>
<doc>Removes the directory pointed to by the given ``path``.</doc>
<status status="PASS" start="2025-04-29T15:58:58.827426" elapsed="0.000404"/>
</kw>
<status status="PASS" start="2025-04-29T15:58:58.827293" elapsed="0.000549"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>Temporary directory doesn't exist: ${temp_dir}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-04-29T15:58:58.827882" elapsed="0.000006"/>
</kw>
<status status="NOT RUN" start="2025-04-29T15:58:58.827851" elapsed="0.000047"/>
</branch>
<status status="PASS" start="2025-04-29T15:58:58.827285" elapsed="0.000639"/>
</if>
<status status="PASS" start="2025-04-29T15:58:58.823650" elapsed="0.004293"/>
</kw>
<doc>Enhanced test suite for validating web development code
Provides specific, detailed feedback on differences</doc>
<status status="PASS" start="2025-04-29T15:58:58.547327" elapsed="0.280628"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat name="Test Web Code" id="s1" pass="2" fail="0" skip="0">Test Web Code</stat>
</suite>
</statistics>
<errors>
<msg time="2025-04-29T15:58:58.673934" level="WARN">HTML differences found:</msg>
<msg time="2025-04-29T15:58:58.675970" level="WARN">CSS differences found:</msg>
<msg time="2025-04-29T15:58:58.677134" level="WARN">JavaScript differences found:</msg>
<msg time="2025-04-29T15:58:58.678710" level="WARN">Defaultcode does not match teacher reference. See JSON report for details.</msg>
<msg time="2025-04-29T15:58:58.761720" level="WARN">html differences found:</msg>
<msg time="2025-04-29T15:58:58.790245" level="WARN">css differences found:</msg>
<msg time="2025-04-29T15:58:58.818346" level="WARN">Detailed JavaScript Analysis:</msg>
<msg time="2025-04-29T15:58:58.819544" level="WARN">js differences found:</msg>
<msg time="2025-04-29T15:58:58.822883" level="WARN">Student submission has differences. Check the detailed report.</msg>
</errors>
</robot>
