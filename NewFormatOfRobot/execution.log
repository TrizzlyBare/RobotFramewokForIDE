2025-02-02 17:03:51.664937: Starting test execution
2025-02-02 17:03:51.665834: Test input: a
b
c
d
e
2025-02-02 17:03:51.666288: Expected output: u0061
u0062
u0063
u0064
u0065
2025-02-02 17:03:51.666694: Student code: x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-02 17:03:51.669043: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-02 17:03:51.669577: Input values: a
b
c
d
e
2025-02-02 17:03:51.672392: Created input file with content: a
b
c
d
e

2025-02-02 17:03:51.692334: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-02 17:03:51.694069: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-02 17:03:51.696715: Final raw output: Enter a character: The Unicode is: u0061
2025-02-02 17:03:51.698273: Output is not numeric, keeping as string: Enter a character: The Unicode is: u0061
2025-02-02 17:03:51.699516: Normalized output: Enter a character: The Unicode is: u0061
2025-02-02 17:03:51.700017: Python final output: Enter a character: The Unicode is: u0061
2025-02-02 17:03:51.702035: Final execution status: success
2025-02-02 17:03:51.702992: Final processed output: Enter a character: The Unicode is: u0061
2025-02-02 17:03:51.704764: Output is not numeric, keeping as string: Enter a character: The Unicode is: u0061
2025-02-02 17:03:51.706018: Normalized output: Enter a character: The Unicode is: u0061
2025-02-02 17:03:51.707312: Output is not numeric, keeping as string: u0061
u0062
u0063
u0064
u0065
2025-02-02 17:03:51.709872: Normalized output: u0061
u0062
u0063
u0064
u0065
2025-02-02 17:03:51.710802: Different number of lines - Student: 1, Expected: 5
2025-02-02 17:03:51.712326: Added comparison result - Status: FAIL, Student: Enter a character: The Unicode is: u0061, Teacher: u0061
u0062
u0063
u0064
u0065
2025-02-02 17:03:51.713372: Saved results to comparison_results.json
2025-02-02 17:03:51.713798: Test execution completed
2025-02-02 17:06:17.181902: Starting test execution
2025-02-02 17:06:17.182870: Test input: a
b
c
d
e
2025-02-02 17:06:17.183334: Expected output: u0061
u0062
u0063
u0064
u0065
2025-02-02 17:06:17.183743: Student code: x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-02 17:06:17.185815: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-02 17:06:17.186252: Input values: a
b
c
d
e
2025-02-02 17:06:17.188417: Created input file with content: a
b
c
d
e

2025-02-02 17:06:17.208229: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-02 17:06:17.210827: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-02 17:06:17.214279: Final processed output: u0061
2025-02-02 17:06:17.215830: Output is not numeric, keeping as string: u0061
2025-02-02 17:06:17.217094: Normalized output: u0061
2025-02-02 17:06:17.217564: Python final output: u0061
2025-02-02 17:06:17.219628: Final execution status: success
2025-02-02 17:06:17.220039: Final processed output: u0061
2025-02-02 17:06:17.221613: Output is not numeric, keeping as string: u0061
2025-02-02 17:06:17.223030: Normalized output: u0061
2025-02-02 17:06:17.224549: Output is not numeric, keeping as string: u0061
u0062
u0063
u0064
u0065
2025-02-02 17:06:17.227062: Normalized output: u0061
u0062
u0063
u0064
u0065
2025-02-02 17:06:17.228044: Different number of lines - Student: 1, Expected: 5
2025-02-02 17:06:17.229592: Added comparison result - Status: FAIL, Student: u0061, Teacher: u0061
u0062
u0063
u0064
u0065
2025-02-02 17:06:17.230623: Saved results to comparison_results.json
2025-02-02 17:06:17.231050: Test execution completed
2025-02-02 17:06:28.685305: Starting test execution
2025-02-02 17:06:28.686143: Test input: a
b
c
d
e
2025-02-02 17:06:28.686613: Expected output: u0061
u0062
u0063
u0064
u0065
2025-02-02 17:06:28.687036: Student code: x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-02 17:06:28.689499: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-02 17:06:28.690087: Input values: a
b
c
d
e
2025-02-02 17:06:28.692831: Created input file with content: a
b
c
d
e

2025-02-02 17:06:28.713122: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-02 17:06:28.714733: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-02 17:06:28.718112: Final processed output: u0061
2025-02-02 17:06:28.720571: Normalized output: u0061
2025-02-02 17:06:28.721077: Python final output: u0061
2025-02-02 17:06:28.723463: Final execution status: success
2025-02-02 17:06:28.723903: Final processed output: u0061
2025-02-02 17:06:28.726464: Normalized output: u0061
2025-02-02 17:06:28.731988: Normalized output: u0061
u0062
u0063
u0064
u0065
2025-02-02 17:06:28.732975: Different number of lines - Student: 1, Expected: 5
2025-02-02 17:06:28.734628: Added comparison result - Status: FAIL, Student: u0061, Teacher: u0061
u0062
u0063
u0064
u0065
2025-02-02 17:06:28.735843: Saved results to comparison_results.json
2025-02-02 17:06:28.736342: Test execution completed
2025-02-02 17:06:49.829108: Starting test execution
2025-02-02 17:06:49.830123: Test input: a
b
c
d
e
2025-02-02 17:06:49.830766: Expected output: u0061
u0062
u0063
u0064
u0065
2025-02-02 17:06:49.831236: Student code: x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-02 17:06:49.833868: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-02 17:06:49.834342: Input values: a
b
c
d
e
2025-02-02 17:06:49.838437: Created input file with content: a
b
c
d
e

2025-02-02 17:06:49.859673: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-02 17:06:49.861480: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-02 17:06:49.865269: Final processed output: u0061
2025-02-02 17:06:49.867845: Normalized output: u0061
2025-02-02 17:06:49.868694: Python final output: u0061
2025-02-02 17:06:49.870805: Final execution status: success
2025-02-02 17:06:49.871204: Final processed output: u0061
2025-02-02 17:06:49.873975: Normalized output: u0061
2025-02-02 17:06:49.879407: Normalized output: u0061
u0062
u0063
u0064
u0065
2025-02-02 17:06:49.880369: Different number of lines - Student: 1, Expected: 5
2025-02-02 17:06:49.882029: Added comparison result - Status: FAIL, Student: u0061, Teacher: u0061
u0062
u0063
u0064
u0065
2025-02-02 17:06:49.883190: Saved results to comparison_results.json
2025-02-02 17:06:49.883634: Test execution completed
2025-02-02 17:08:29.565539: Starting test execution
2025-02-02 17:08:29.566430: Test input: a
2025-02-02 17:08:29.567017: Expected output: u0061
2025-02-02 17:08:29.567573: Student code: x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-02 17:08:29.570097: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-02 17:08:29.570898: Input values: a
2025-02-02 17:08:29.575104: Created input file with content: a

2025-02-02 17:08:29.596440: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-02 17:08:29.598239: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-02 17:08:29.601803: Final processed output: u0061
2025-02-02 17:08:29.604431: Normalized output: u0061
2025-02-02 17:08:29.604961: Python final output: u0061
2025-02-02 17:08:29.607151: Final execution status: success
2025-02-02 17:08:29.607566: Final processed output: u0061
2025-02-02 17:08:29.610518: Normalized output: u0061
2025-02-02 17:08:29.612856: Normalized output: u0061
2025-02-02 17:08:29.615264: Outputs match completely
2025-02-02 17:08:29.616453: Added comparison result - Status: PASS, Student: u0061, Teacher: u0061
2025-02-02 17:08:29.617491: Saved results to comparison_results.json
2025-02-02 17:08:29.617902: Test execution completed
2025-02-02 17:08:44.342237: Starting test execution
2025-02-02 17:08:44.343108: Test input: a
2025-02-02 17:08:44.343585: Expected output: u0061
2025-02-02 17:08:44.344090: Student code: x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-02 17:08:44.346325: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-02 17:08:44.346816: Input values: a
2025-02-02 17:08:44.349709: Created input file with content: a

2025-02-02 17:08:44.368221: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-02 17:08:44.369858: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-02 17:08:44.373311: Final processed output: u0061
2025-02-02 17:08:44.376410: Normalized output: u0061
2025-02-02 17:08:44.376972: Python final output: u0061
2025-02-02 17:08:44.379107: Final execution status: success
2025-02-02 17:08:44.379521: Final processed output: u0061
2025-02-02 17:08:44.382058: Normalized output: u0061
2025-02-02 17:08:44.384342: Normalized output: u0061
2025-02-02 17:08:44.386741: Outputs match completely
2025-02-02 17:08:44.387921: Added comparison result - Status: PASS, Student: u0061, Teacher: u0061
2025-02-02 17:08:44.388944: Saved results to comparison_results.json
2025-02-02 17:08:44.389373: Test execution completed
2025-02-02 17:09:22.946710: Starting test execution
2025-02-02 17:09:22.947537: Test input: 5
3

2025-02-02 17:09:22.948010: Expected output: 8
2025-02-02 17:09:22.948431: Student code: a = int(input('Enter A: '))
b = int(input('Enter B: '))
print(a + b)
2025-02-02 17:09:22.950705: Executing code in python:
a = int(input('Enter A: '))
b = int(input('Enter B: '))
print(a + b)
2025-02-02 17:09:22.951228: Input values: 5
3

2025-02-02 17:09:22.953510: Created input file with content: 5
3

2025-02-02 17:09:22.976849: Python execution with input - RC: 0, Output:
Enter A: Enter B: 8
2025-02-02 17:09:22.978893: Processing raw output: Enter A: Enter B: 8
2025-02-02 17:09:22.982270: Final processed output: 8
2025-02-02 17:09:22.984766: Normalized output: 8.0
2025-02-02 17:09:22.985279: Python final output: 8.0
2025-02-02 17:09:22.987348: Final execution status: success
2025-02-02 17:09:22.987761: Final processed output: 8.0
2025-02-02 17:09:22.990234: Normalized output: 8.0
2025-02-02 17:09:22.992361: Normalized output: 8.0
2025-02-02 17:09:22.994988: Outputs match completely
2025-02-02 17:09:22.996106: Added comparison result - Status: PASS, Student: 8.0, Teacher: 8
2025-02-02 17:09:22.997252: Saved results to comparison_results.json
2025-02-02 17:09:22.997670: Test execution completed
2025-02-02 17:45:25.841825: Starting test execution
2025-02-02 17:45:43.286397: Starting test execution
2025-02-02 17:45:43.287240: Test input: 5
3

2025-02-02 17:45:43.287721: Expected output: 8
2025-02-02 17:45:43.288153: Student code: a = int(input('Enter A: '))
b = int(input('Enter B: '))
print(a + b)
2025-02-02 17:45:43.290839: Executing code in python:
a = int(input('Enter A: '))
b = int(input('Enter B: '))
print(a + b)
2025-02-02 17:45:43.291567: Input values: 5
3

2025-02-02 17:45:43.295234: Created input file with content: 5
3

2025-02-02 17:45:43.315635: Python execution with input - RC: 0, Output:
Enter A: Enter B: 8
2025-02-02 17:45:43.318346: Processing raw output: Enter A: Enter B: 8
2025-02-02 17:45:43.322031: Final processed output: 8
2025-02-02 17:45:43.324763: Normalized output: 8.0
2025-02-02 17:45:43.325339: Python final output: 8.0
2025-02-02 17:45:43.327719: Final execution status: success
2025-02-02 17:45:43.328243: Final processed output: 8.0
2025-02-02 17:45:43.331046: Normalized output: 8.0
2025-02-02 17:45:43.333248: Normalized output: 8.0
2025-02-02 17:45:43.335999: Outputs match completely
2025-02-02 17:45:43.337101: Added comparison result - Status: PASS, Student: 8.0, Teacher: 8
2025-02-02 17:45:43.338574: Saved results to comparison_results.json
2025-02-02 17:45:43.338999: Test execution completed
2025-02-02 17:47:40.882836: Starting test execution
2025-02-02 17:47:40.883819: Test input: 5
3

2025-02-02 17:47:40.884283: Expected output: 8
2025-02-02 17:47:40.884997: Student code: def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)

# Test the function
print(factorial(5))  # Output: 120
print(factorial(3))  # Output: 6
2025-02-02 17:47:40.887785: Executing code in python:
def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)

# Test the function
print(factorial(5))  # Output: 120
print(factorial(3))  # Output: 6
2025-02-02 17:47:40.888295: Input values: 5
3

2025-02-02 17:47:40.891825: Created input file with content: 5
3

2025-02-02 17:47:40.910701: Python execution with input - RC: 0, Output:
120
6
2025-02-02 17:47:40.912674: Processing raw output: 120
6
2025-02-02 17:47:40.918109: Final processed output: 120
6
2025-02-02 17:47:40.921870: Normalized output: 120.0
6.0
2025-02-02 17:47:40.922641: Python final output: 120.0
6.0
2025-02-02 17:47:40.924670: Final execution status: success
2025-02-02 17:47:40.925088: Final processed output: 120.0
6.0
2025-02-02 17:47:40.928380: Normalized output: 120.0
6.0
2025-02-02 17:47:40.930998: Normalized output: 8.0
2025-02-02 17:47:40.932017: Different number of lines - Student: 2, Expected: 1
2025-02-02 17:47:40.933777: Added comparison result - Status: FAIL, Student: 120.0
6.0, Teacher: 8
2025-02-02 17:47:40.934982: Saved results to comparison_results.json
2025-02-02 17:47:40.935428: Test execution completed
2025-02-02 21:19:56.113891: Starting test execution
2025-02-02 21:20:06.594325: Starting test execution
2025-02-02 21:20:06.595290: Test input: a
b
c
d
e
2025-02-02 21:20:06.595827: Expected output: u0061
u0062
u0063
u0064
u0065
2025-02-02 21:20:06.596394: Student code: def factorial(n):
    # Write your recursive factorial function here
    pass

# Test cases
print(factorial(5))
print(factorial(3))
2025-02-02 21:20:06.598700: Executing code in python:
def factorial(n):
    # Write your recursive factorial function here
    pass

# Test cases
print(factorial(5))
print(factorial(3))
2025-02-02 21:20:06.599232: Input values: a
b
c
d
e
2025-02-02 21:20:06.601851: Created input file with content: a
b
c
d
e

2025-02-02 21:20:06.621638: Python execution with input - RC: 0, Output:
None
None
2025-02-02 21:20:06.623396: Processing raw output: None
None
2025-02-02 21:20:06.629001: Final processed output: None
None
2025-02-02 21:20:06.632297: Normalized output: None
None
2025-02-02 21:20:06.632794: Python final output: None
None
2025-02-02 21:20:06.634829: Final execution status: success
2025-02-02 21:20:06.635238: Final processed output: None
None
2025-02-02 21:20:06.638459: Normalized output: None
None
2025-02-02 21:20:06.643986: Normalized output: u0061
u0062
u0063
u0064
u0065
2025-02-02 21:20:06.644985: Different number of lines - Student: 2, Expected: 5
2025-02-02 21:20:06.646697: Added comparison result - Status: FAIL, Student: None
None, Teacher: u0061
u0062
u0063
u0064
u0065
2025-02-02 21:20:06.647825: Saved results to comparison_results.json
2025-02-02 21:20:06.648234: Test execution completed
2025-02-02 21:20:18.251461: Starting test execution
2025-02-02 21:20:18.252350: Test input: a
b
c
d
e
2025-02-02 21:20:18.252837: Expected output: u0061
u0062
u0063
u0064
u0065
2025-02-02 21:20:18.253338: Student code: def factorial(n):
    # Write your recursive factorial function here
    pass

# Test cases
print(factorial(5))
print(factorial(3))
2025-02-02 21:20:18.255793: Executing code in python:
def factorial(n):
    # Write your recursive factorial function here
    pass

# Test cases
print(factorial(5))
print(factorial(3))
2025-02-02 21:20:18.256245: Input values: a
b
c
d
e
2025-02-02 21:20:18.260532: Created input file with content: a
b
c
d
e

2025-02-02 21:20:18.280939: Python execution with input - RC: 0, Output:
None
None
2025-02-02 21:20:18.282810: Processing raw output: None
None
2025-02-02 21:20:18.288631: Final processed output: None
None
2025-02-02 21:20:18.292057: Normalized output: None
None
2025-02-02 21:20:18.292598: Python final output: None
None
2025-02-02 21:20:18.295342: Final execution status: success
2025-02-02 21:20:18.295796: Final processed output: None
None
2025-02-02 21:20:18.299481: Normalized output: None
None
2025-02-02 21:20:18.305112: Normalized output: u0061
u0062
u0063
u0064
u0065
2025-02-02 21:20:18.306181: Different number of lines - Student: 2, Expected: 5
2025-02-02 21:20:18.307954: Added comparison result - Status: FAIL, Student: None
None, Teacher: u0061
u0062
u0063
u0064
u0065
2025-02-02 21:20:18.309107: Saved results to comparison_results.json
2025-02-02 21:20:18.309619: Test execution completed
2025-02-09 15:11:39.162127: Starting test execution
2025-02-09 15:11:58.087297: Starting test execution
2025-02-09 15:12:06.795872: Starting test execution
2025-02-09 15:13:49.325297: Starting test execution
2025-02-09 15:14:00.000118: Starting test execution
2025-02-09 15:14:00.001249: Processing test case 1
2025-02-09 15:14:00.002771: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:14:00.004747: Input values: a
2025-02-09 15:14:00.007789: Created input file with content: a

2025-02-09 15:14:00.026400: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-09 15:14:00.027983: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-09 15:14:00.031268: Final processed output: u0061
2025-02-09 15:14:00.033816: Normalized output: u0061
2025-02-09 15:14:00.034300: Python final output: u0061
2025-02-09 15:14:00.036321: Final execution status: success
2025-02-09 15:14:00.036707: Final processed output: u0061
2025-02-09 15:14:00.039120: Normalized output: u0061
2025-02-09 15:14:00.041260: Normalized output: u0061
2025-02-09 15:14:00.043434: Outputs match completely
2025-02-09 15:14:00.044651: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': 'a', 'detail': 'Student=u0061 vs Teacher=u0061'}
2025-02-09 15:14:00.045220: Processing test case 2
2025-02-09 15:14:00.046310: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:14:00.046663: Input values: b
2025-02-09 15:14:00.048857: Created input file with content: b

2025-02-09 15:14:00.063734: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0062
2025-02-09 15:14:00.065055: Processing raw output: Enter a character: The Unicode is: u0062
2025-02-09 15:14:00.067756: Final processed output: u0062
2025-02-09 15:14:00.069952: Normalized output: u0062
2025-02-09 15:14:00.070402: Python final output: u0062
2025-02-09 15:14:00.072310: Final execution status: success
2025-02-09 15:14:00.072671: Final processed output: u0062
2025-02-09 15:14:00.074986: Normalized output: u0062
2025-02-09 15:14:00.077027: Normalized output: u0062
2025-02-09 15:14:00.079745: Outputs match completely
2025-02-09 15:14:00.080873: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': 'b', 'detail': 'Student=u0062 vs Teacher=u0062'}
2025-02-09 15:14:00.081430: Processing test case 3
2025-02-09 15:14:00.088993: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:14:00.089412: Input values: c
2025-02-09 15:14:00.091275: Created input file with content: c

2025-02-09 15:14:00.105967: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0063
2025-02-09 15:14:00.107288: Processing raw output: Enter a character: The Unicode is: u0063
2025-02-09 15:14:00.109988: Final processed output: u0063
2025-02-09 15:14:00.112101: Normalized output: u0063
2025-02-09 15:14:00.112539: Python final output: u0063
2025-02-09 15:14:00.114441: Final execution status: success
2025-02-09 15:14:00.114808: Final processed output: u0063
2025-02-09 15:14:00.117150: Normalized output: u0063
2025-02-09 15:14:00.119269: Normalized output: u0063
2025-02-09 15:14:00.121461: Outputs match completely
2025-02-09 15:14:00.122635: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': 'c', 'detail': 'Student=u0063 vs Teacher=u0063'}
2025-02-09 15:14:00.123226: Processing test case 4
2025-02-09 15:14:00.124344: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:14:00.124696: Input values: d
2025-02-09 15:14:00.126583: Created input file with content: d

2025-02-09 15:14:00.140374: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0064
2025-02-09 15:14:00.141800: Processing raw output: Enter a character: The Unicode is: u0064
2025-02-09 15:14:00.144328: Final processed output: u0064
2025-02-09 15:14:00.146514: Normalized output: u0064
2025-02-09 15:14:00.146942: Python final output: u0064
2025-02-09 15:14:00.148787: Final execution status: success
2025-02-09 15:14:00.149146: Final processed output: u0064
2025-02-09 15:14:00.151428: Normalized output: u0064
2025-02-09 15:14:00.153900: Normalized output: u0064
2025-02-09 15:14:00.156071: Outputs match completely
2025-02-09 15:14:00.157165: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': 'd', 'detail': 'Student=u0064 vs Teacher=u0064'}
2025-02-09 15:14:00.157742: Processing test case 5
2025-02-09 15:14:00.158918: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:14:00.159276: Input values: e
2025-02-09 15:14:00.161180: Created input file with content: e

2025-02-09 15:14:00.175187: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0065
2025-02-09 15:14:00.176515: Processing raw output: Enter a character: The Unicode is: u0065
2025-02-09 15:14:00.179137: Final processed output: u0065
2025-02-09 15:14:00.181211: Normalized output: u0065
2025-02-09 15:14:00.181653: Python final output: u0065
2025-02-09 15:14:00.183528: Final execution status: success
2025-02-09 15:14:00.183905: Final processed output: u0065
2025-02-09 15:14:00.186184: Normalized output: u0065
2025-02-09 15:14:00.188283: Normalized output: u0065
2025-02-09 15:14:00.190456: Outputs match completely
2025-02-09 15:14:00.191834: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': 'e', 'detail': 'Student=u0065 vs Teacher=u0065'}
2025-02-09 15:14:00.192850: Saved results to comparison_results.json
2025-02-09 15:15:12.772039: Starting test execution
2025-02-09 15:15:12.773278: Processing test case 1
2025-02-09 15:15:12.774661: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:12.775767: Input values: a
2025-02-09 15:15:12.778539: Created input file with content: a

2025-02-09 15:15:12.795110: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-09 15:15:12.796529: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-09 15:15:12.799611: Final processed output: u0061
2025-02-09 15:15:12.801923: Normalized output: u0061
2025-02-09 15:15:12.802370: Python final output: u0061
2025-02-09 15:15:12.804310: Final execution status: success
2025-02-09 15:15:12.804706: Final processed output: u0061
2025-02-09 15:15:12.807050: Normalized output: u0061
2025-02-09 15:15:12.809295: Normalized output: u0061
2025-02-09 15:15:12.811563: Outputs match completely
2025-02-09 15:15:12.812807: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': 'a', 'detail': 'Student=u0061 vs Teacher=u0061'}
2025-02-09 15:15:12.813377: Processing test case 2
2025-02-09 15:15:12.814487: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:12.814859: Input values: b
2025-02-09 15:15:12.816807: Created input file with content: b

2025-02-09 15:15:12.831095: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0062
2025-02-09 15:15:12.832459: Processing raw output: Enter a character: The Unicode is: u0062
2025-02-09 15:15:12.835216: Final processed output: u0062
2025-02-09 15:15:12.837442: Normalized output: u0062
2025-02-09 15:15:12.837876: Python final output: u0062
2025-02-09 15:15:12.839733: Final execution status: success
2025-02-09 15:15:12.840155: Final processed output: u0062
2025-02-09 15:15:12.842579: Normalized output: u0062
2025-02-09 15:15:12.844662: Normalized output: u0062
2025-02-09 15:15:12.847293: Outputs match completely
2025-02-09 15:15:12.848430: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': 'b', 'detail': 'Student=u0062 vs Teacher=u0062'}
2025-02-09 15:15:12.849013: Processing test case 3
2025-02-09 15:15:12.856205: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:12.856641: Input values: c
2025-02-09 15:15:12.858492: Created input file with content: c

2025-02-09 15:15:12.875981: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0063
2025-02-09 15:15:12.877746: Processing raw output: Enter a character: The Unicode is: u0063
2025-02-09 15:15:12.880555: Final processed output: u0063
2025-02-09 15:15:12.882823: Normalized output: u0063
2025-02-09 15:15:12.883295: Python final output: u0063
2025-02-09 15:15:12.885234: Final execution status: success
2025-02-09 15:15:12.885609: Final processed output: u0063
2025-02-09 15:15:12.888015: Normalized output: u0063
2025-02-09 15:15:12.890351: Normalized output: u0063
2025-02-09 15:15:12.892790: Outputs match completely
2025-02-09 15:15:12.894221: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': 'c', 'detail': 'Student=u0063 vs Teacher=u0063'}
2025-02-09 15:15:12.894864: Processing test case 4
2025-02-09 15:15:12.896085: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:12.896614: Input values: d
2025-02-09 15:15:12.898788: Created input file with content: d

2025-02-09 15:15:12.914717: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0064
2025-02-09 15:15:12.916235: Processing raw output: Enter a character: The Unicode is: u0064
2025-02-09 15:15:12.918856: Final processed output: u0064
2025-02-09 15:15:12.921122: Normalized output: u0064
2025-02-09 15:15:12.921567: Python final output: u0064
2025-02-09 15:15:12.923520: Final execution status: success
2025-02-09 15:15:12.923906: Final processed output: u0064
2025-02-09 15:15:12.926353: Normalized output: u0064
2025-02-09 15:15:12.929261: Normalized output: u0064
2025-02-09 15:15:12.931573: Outputs match completely
2025-02-09 15:15:12.932736: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': 'd', 'detail': 'Student=u0064 vs Teacher=u0064'}
2025-02-09 15:15:12.933360: Processing test case 5
2025-02-09 15:15:12.934544: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:12.934911: Input values: e
2025-02-09 15:15:12.936794: Created input file with content: e

2025-02-09 15:15:12.952284: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0065
2025-02-09 15:15:12.953809: Processing raw output: Enter a character: The Unicode is: u0065
2025-02-09 15:15:12.956618: Final processed output: u0065
2025-02-09 15:15:12.958821: Normalized output: u0065
2025-02-09 15:15:12.959319: Python final output: u0065
2025-02-09 15:15:12.961610: Final execution status: success
2025-02-09 15:15:12.962049: Final processed output: u0065
2025-02-09 15:15:12.964533: Normalized output: u0065
2025-02-09 15:15:12.966691: Normalized output: u0065
2025-02-09 15:15:12.968874: Outputs match completely
2025-02-09 15:15:12.970156: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': 'e', 'detail': 'Student=u0065 vs Teacher=u0065'}
2025-02-09 15:15:12.971274: Saved results to comparison_results.json
2025-02-09 15:15:16.883832: Starting test execution
2025-02-09 15:15:16.884937: Processing test case 1
2025-02-09 15:15:16.886391: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:16.887399: Input values: a
2025-02-09 15:15:16.889576: Created input file with content: a

2025-02-09 15:15:16.906539: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-09 15:15:16.908102: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-09 15:15:16.911641: Final processed output: u0061
2025-02-09 15:15:16.914111: Normalized output: u0061
2025-02-09 15:15:16.914579: Python final output: u0061
2025-02-09 15:15:16.916628: Final execution status: success
2025-02-09 15:15:16.917038: Final processed output: u0061
2025-02-09 15:15:16.919497: Normalized output: u0061
2025-02-09 15:15:16.921730: Normalized output: u0061
2025-02-09 15:15:16.924027: Outputs match completely
2025-02-09 15:15:16.925329: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': 'a', 'detail': 'Student=u0061 vs Teacher=u0061'}
2025-02-09 15:15:16.926011: Processing test case 2
2025-02-09 15:15:16.927246: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:16.927827: Input values: b
2025-02-09 15:15:16.929890: Created input file with content: b

2025-02-09 15:15:16.945428: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0062
2025-02-09 15:15:16.946900: Processing raw output: Enter a character: The Unicode is: u0062
2025-02-09 15:15:16.949921: Final processed output: u0062
2025-02-09 15:15:16.952344: Normalized output: u0062
2025-02-09 15:15:16.952811: Python final output: u0062
2025-02-09 15:15:16.954819: Final execution status: success
2025-02-09 15:15:16.955219: Final processed output: u0062
2025-02-09 15:15:16.957778: Normalized output: u0062
2025-02-09 15:15:16.959976: Normalized output: u0062
2025-02-09 15:15:16.962819: Outputs match completely
2025-02-09 15:15:16.964017: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': 'b', 'detail': 'Student=u0062 vs Teacher=u0062'}
2025-02-09 15:15:16.964629: Processing test case 3
2025-02-09 15:15:16.973681: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:16.974179: Input values: c
2025-02-09 15:15:16.976320: Created input file with content: c

2025-02-09 15:15:16.992345: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0063
2025-02-09 15:15:16.993845: Processing raw output: Enter a character: The Unicode is: u0063
2025-02-09 15:15:16.996741: Final processed output: u0063
2025-02-09 15:15:16.999070: Normalized output: u0063
2025-02-09 15:15:16.999586: Python final output: u0063
2025-02-09 15:15:17.001803: Final execution status: success
2025-02-09 15:15:17.002217: Final processed output: u0063
2025-02-09 15:15:17.004799: Normalized output: u0063
2025-02-09 15:15:17.007180: Normalized output: u0063
2025-02-09 15:15:17.009661: Outputs match completely
2025-02-09 15:15:17.010945: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': 'c', 'detail': 'Student=u0063 vs Teacher=u0063'}
2025-02-09 15:15:17.011607: Processing test case 4
2025-02-09 15:15:17.012804: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:17.013184: Input values: d
2025-02-09 15:15:17.015194: Created input file with content: d

2025-02-09 15:15:17.030429: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0064
2025-02-09 15:15:17.032031: Processing raw output: Enter a character: The Unicode is: u0064
2025-02-09 15:15:17.034945: Final processed output: u0064
2025-02-09 15:15:17.037517: Normalized output: u0064
2025-02-09 15:15:17.038021: Python final output: u0064
2025-02-09 15:15:17.040154: Final execution status: success
2025-02-09 15:15:17.040586: Final processed output: u0064
2025-02-09 15:15:17.043065: Normalized output: u0064
2025-02-09 15:15:17.045673: Normalized output: u0064
2025-02-09 15:15:17.048039: Outputs match completely
2025-02-09 15:15:17.049259: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': 'd', 'detail': 'Student=u0064 vs Teacher=u0064'}
2025-02-09 15:15:17.049927: Processing test case 5
2025-02-09 15:15:17.051213: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:17.051669: Input values: e
2025-02-09 15:15:17.053666: Created input file with content: e

2025-02-09 15:15:17.070939: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0065
2025-02-09 15:15:17.072636: Processing raw output: Enter a character: The Unicode is: u0065
2025-02-09 15:15:17.075614: Final processed output: u0065
2025-02-09 15:15:17.077976: Normalized output: u0065
2025-02-09 15:15:17.078491: Python final output: u0065
2025-02-09 15:15:17.080744: Final execution status: success
2025-02-09 15:15:17.081208: Final processed output: u0065
2025-02-09 15:15:17.083783: Normalized output: u0065
2025-02-09 15:15:17.086058: Normalized output: u0065
2025-02-09 15:15:17.088361: Outputs match completely
2025-02-09 15:15:17.089656: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': 'e', 'detail': 'Student=u0065 vs Teacher=u0065'}
2025-02-09 15:15:17.090688: Saved results to comparison_results.json
2025-02-09 15:15:41.293185: Starting test execution
2025-02-09 15:15:41.294308: Processing test case 1
2025-02-09 15:15:41.295529: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:41.296442: Input values: a
2025-02-09 15:15:41.300605: Created input file with content: a

2025-02-09 15:15:41.316758: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-09 15:15:41.318175: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-09 15:15:41.321262: Final processed output: u0061
2025-02-09 15:15:41.323613: Normalized output: u0061
2025-02-09 15:15:41.324061: Python final output: u0061
2025-02-09 15:15:41.326009: Final execution status: success
2025-02-09 15:15:41.326400: Final processed output: u0061
2025-02-09 15:15:41.328721: Normalized output: u0061
2025-02-09 15:15:41.330884: Normalized output: u0061
2025-02-09 15:15:41.333105: Outputs match completely
2025-02-09 15:15:41.334345: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': 'a', 'detail': 'Student=u0061 vs Teacher=u0061'}
2025-02-09 15:15:41.334907: Processing test case 2
2025-02-09 15:15:41.336007: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:41.336366: Input values: b
2025-02-09 15:15:41.338302: Created input file with content: b

2025-02-09 15:15:41.352382: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0062
2025-02-09 15:15:41.353751: Processing raw output: Enter a character: The Unicode is: u0062
2025-02-09 15:15:41.356464: Final processed output: u0062
2025-02-09 15:15:41.358658: Normalized output: u0062
2025-02-09 15:15:41.359121: Python final output: u0062
2025-02-09 15:15:41.361033: Final execution status: success
2025-02-09 15:15:41.361402: Final processed output: u0062
2025-02-09 15:15:41.363753: Normalized output: u0062
2025-02-09 15:15:41.365811: Normalized output: u0062
2025-02-09 15:15:41.368411: Outputs match completely
2025-02-09 15:15:41.369535: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': 'b', 'detail': 'Student=u0062 vs Teacher=u0062'}
2025-02-09 15:15:41.370105: Processing test case 3
2025-02-09 15:15:41.377352: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:41.377774: Input values: c
2025-02-09 15:15:41.379623: Created input file with content: c

2025-02-09 15:15:41.394065: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0063
2025-02-09 15:15:41.395376: Processing raw output: Enter a character: The Unicode is: u0063
2025-02-09 15:15:41.398085: Final processed output: u0063
2025-02-09 15:15:41.400222: Normalized output: u0063
2025-02-09 15:15:41.400666: Python final output: u0063
2025-02-09 15:15:41.402583: Final execution status: success
2025-02-09 15:15:41.402959: Final processed output: u0063
2025-02-09 15:15:41.405300: Normalized output: u0063
2025-02-09 15:15:41.407412: Normalized output: u0063
2025-02-09 15:15:41.409660: Outputs match completely
2025-02-09 15:15:41.410891: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': 'c', 'detail': 'Student=u0063 vs Teacher=u0063'}
2025-02-09 15:15:41.411458: Processing test case 4
2025-02-09 15:15:41.412569: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:41.412931: Input values: d
2025-02-09 15:15:41.414854: Created input file with content: d

2025-02-09 15:15:41.428334: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0064
2025-02-09 15:15:41.429799: Processing raw output: Enter a character: The Unicode is: u0064
2025-02-09 15:15:41.432402: Final processed output: u0064
2025-02-09 15:15:41.434570: Normalized output: u0064
2025-02-09 15:15:41.435014: Python final output: u0064
2025-02-09 15:15:41.436887: Final execution status: success
2025-02-09 15:15:41.437261: Final processed output: u0064
2025-02-09 15:15:41.439569: Normalized output: u0064
2025-02-09 15:15:41.442077: Normalized output: u0064
2025-02-09 15:15:41.444306: Outputs match completely
2025-02-09 15:15:41.445415: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': 'd', 'detail': 'Student=u0064 vs Teacher=u0064'}
2025-02-09 15:15:41.445987: Processing test case 5
2025-02-09 15:15:41.447197: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:41.447557: Input values: e
2025-02-09 15:15:41.449409: Created input file with content: e

2025-02-09 15:15:41.463032: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0065
2025-02-09 15:15:41.464515: Processing raw output: Enter a character: The Unicode is: u0065
2025-02-09 15:15:41.467166: Final processed output: u0065
2025-02-09 15:15:41.469252: Normalized output: u0065
2025-02-09 15:15:41.469707: Python final output: u0065
2025-02-09 15:15:41.471617: Final execution status: success
2025-02-09 15:15:41.471995: Final processed output: u0065
2025-02-09 15:15:41.474353: Normalized output: u0065
2025-02-09 15:15:41.476474: Normalized output: u0065
2025-02-09 15:15:41.478641: Outputs match completely
2025-02-09 15:15:41.479889: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': 'e', 'detail': 'Student=u0065 vs Teacher=u0065'}
2025-02-09 15:15:41.480462: Processing test case 6
2025-02-09 15:15:41.481553: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:41.481915: Input values: f
2025-02-09 15:15:41.483821: Created input file with content: f

2025-02-09 15:15:41.498735: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0066
2025-02-09 15:15:41.500366: Processing raw output: Enter a character: The Unicode is: u0066
2025-02-09 15:15:41.503700: Final processed output: u0066
2025-02-09 15:15:41.506506: Normalized output: u0066
2025-02-09 15:15:41.507001: Python final output: u0066
2025-02-09 15:15:41.508981: Final execution status: success
2025-02-09 15:15:41.509476: Final processed output: u0066
2025-02-09 15:15:41.512397: Normalized output: u0066
2025-02-09 15:15:41.514626: Normalized output: u0066
2025-02-09 15:15:41.516983: Outputs match completely
2025-02-09 15:15:41.518320: Added comparison result for Case6: {'status': 'PASS', 'teacherinput': 'f', 'detail': 'Student=u0066 vs Teacher=u0066'}
2025-02-09 15:15:41.519429: Saved results to comparison_results.json
2025-02-09 15:15:48.676155: Starting test execution
2025-02-09 15:15:48.677279: Processing test case 1
2025-02-09 15:15:48.678483: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:48.679331: Input values: a
2025-02-09 15:15:48.681673: Created input file with content: a

2025-02-09 15:15:48.697767: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-09 15:15:48.699187: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-09 15:15:48.702295: Final processed output: u0061
2025-02-09 15:15:48.704625: Normalized output: u0061
2025-02-09 15:15:48.705103: Python final output: u0061
2025-02-09 15:15:48.707069: Final execution status: success
2025-02-09 15:15:48.707466: Final processed output: u0061
2025-02-09 15:15:48.709851: Normalized output: u0061
2025-02-09 15:15:48.711997: Normalized output: u0061
2025-02-09 15:15:48.714207: Outputs match completely
2025-02-09 15:15:48.715446: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': 'a', 'detail': 'Student=u0061 vs Teacher=u0061'}
2025-02-09 15:15:48.716018: Processing test case 2
2025-02-09 15:15:48.717119: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:48.717485: Input values: b
2025-02-09 15:15:48.719409: Created input file with content: b

2025-02-09 15:15:48.733765: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0062
2025-02-09 15:15:48.735134: Processing raw output: Enter a character: The Unicode is: u0062
2025-02-09 15:15:48.737863: Final processed output: u0062
2025-02-09 15:15:48.740092: Normalized output: u0062
2025-02-09 15:15:48.740546: Python final output: u0062
2025-02-09 15:15:48.742479: Final execution status: success
2025-02-09 15:15:48.742882: Final processed output: u0062
2025-02-09 15:15:48.745259: Normalized output: u0062
2025-02-09 15:15:48.747373: Normalized output: u0062
2025-02-09 15:15:48.750032: Outputs match completely
2025-02-09 15:15:48.751171: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': 'b', 'detail': 'Student=u0062 vs Teacher=u0062'}
2025-02-09 15:15:48.751738: Processing test case 3
2025-02-09 15:15:48.759377: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:48.759827: Input values: c
2025-02-09 15:15:48.761722: Created input file with content: c

2025-02-09 15:15:48.775967: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0063
2025-02-09 15:15:48.777362: Processing raw output: Enter a character: The Unicode is: u0063
2025-02-09 15:15:48.780096: Final processed output: u0063
2025-02-09 15:15:48.782225: Normalized output: u0063
2025-02-09 15:15:48.782674: Python final output: u0063
2025-02-09 15:15:48.784589: Final execution status: success
2025-02-09 15:15:48.784965: Final processed output: u0063
2025-02-09 15:15:48.787320: Normalized output: u0063
2025-02-09 15:15:48.789459: Normalized output: u0063
2025-02-09 15:15:48.791642: Outputs match completely
2025-02-09 15:15:48.792881: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': 'c', 'detail': 'Student=u0063 vs Teacher=u0063'}
2025-02-09 15:15:48.793493: Processing test case 4
2025-02-09 15:15:48.794636: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:48.795001: Input values: d
2025-02-09 15:15:48.796915: Created input file with content: d

2025-02-09 15:15:48.810314: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0064
2025-02-09 15:15:48.811745: Processing raw output: Enter a character: The Unicode is: u0064
2025-02-09 15:15:48.814323: Final processed output: u0064
2025-02-09 15:15:48.816518: Normalized output: u0064
2025-02-09 15:15:48.816980: Python final output: u0064
2025-02-09 15:15:48.818845: Final execution status: success
2025-02-09 15:15:48.819232: Final processed output: u0064
2025-02-09 15:15:48.821620: Normalized output: u0064
2025-02-09 15:15:48.824059: Normalized output: u0064
2025-02-09 15:15:48.826294: Outputs match completely
2025-02-09 15:15:48.827413: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': 'd', 'detail': 'Student=u0064 vs Teacher=u0064'}
2025-02-09 15:15:48.828002: Processing test case 5
2025-02-09 15:15:48.829216: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:48.829591: Input values: e
2025-02-09 15:15:48.831443: Created input file with content: e

2025-02-09 15:15:48.844752: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0065
2025-02-09 15:15:48.846104: Processing raw output: Enter a character: The Unicode is: u0065
2025-02-09 15:15:48.848786: Final processed output: u0065
2025-02-09 15:15:48.850868: Normalized output: u0065
2025-02-09 15:15:48.851331: Python final output: u0065
2025-02-09 15:15:48.853222: Final execution status: success
2025-02-09 15:15:48.853613: Final processed output: u0065
2025-02-09 15:15:48.855918: Normalized output: u0065
2025-02-09 15:15:48.858024: Normalized output: u0065
2025-02-09 15:15:48.860214: Outputs match completely
2025-02-09 15:15:48.861428: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': 'e', 'detail': 'Student=u0065 vs Teacher=u0065'}
2025-02-09 15:15:48.861996: Processing test case 6
2025-02-09 15:15:48.863114: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:15:48.863482: Input values: f
2025-02-09 15:15:48.865407: Created input file with content: f

2025-02-09 15:15:48.878769: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0066
2025-02-09 15:15:48.880192: Processing raw output: Enter a character: The Unicode is: u0066
2025-02-09 15:15:48.882868: Final processed output: u0066
2025-02-09 15:15:48.885030: Normalized output: u0066
2025-02-09 15:15:48.885472: Python final output: u0066
2025-02-09 15:15:48.887386: Final execution status: success
2025-02-09 15:15:48.887766: Final processed output: u0066
2025-02-09 15:15:48.890523: Normalized output: u0066
2025-02-09 15:15:48.892585: Normalized output: u0068
2025-02-09 15:15:48.894820: Mismatch at line 0 - Student: "u0066", Expected: "u0068"
2025-02-09 15:15:48.896099: Added comparison result for Case6: {'status': 'FAIL', 'teacherinput': 'f', 'detail': 'Student=u0066 vs Teacher=u0068'}
2025-02-09 15:15:48.897066: Saved results to comparison_results.json
2025-02-09 15:25:35.351981: Starting test execution
2025-02-09 15:25:35.353057: Processing test case 1
2025-02-09 15:25:35.354351: Executing code in python:
x = int(input())
 def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)

2025-02-09 15:25:35.355441: Input values: a
2025-02-09 15:25:35.357687: Created input file with content: a

2025-02-09 15:25:35.373967: Python execution with input - RC: 1, Output:
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:25:35.375532: Python runtime error:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:25:35.377783: Final execution status: runtime_error
2025-02-09 15:25:35.378184: Final processed output:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:25:35.379577: Added comparison result for Case1: {'status': 'runtime_error', 'teacherinput': 'a', 'detail': 'Student=  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2\n    def factorial(n):\nIndentationError: unexpected indent vs Teacher=u0061'}
2025-02-09 15:25:35.380200: Processing test case 2
2025-02-09 15:25:35.381475: Executing code in python:
x = int(input())
 def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)

2025-02-09 15:25:35.381847: Input values: b
2025-02-09 15:25:35.383758: Created input file with content: b

2025-02-09 15:25:35.398204: Python execution with input - RC: 1, Output:
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:25:35.399611: Python runtime error:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:25:35.401823: Final execution status: runtime_error
2025-02-09 15:25:35.402203: Final processed output:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:25:35.403527: Added comparison result for Case2: {'status': 'runtime_error', 'teacherinput': 'b', 'detail': 'Student=  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2\n    def factorial(n):\nIndentationError: unexpected indent vs Teacher=u0062'}
2025-02-09 15:25:35.404109: Processing test case 3
2025-02-09 15:25:35.405319: Executing code in python:
x = int(input())
 def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)

2025-02-09 15:25:35.405674: Input values: c
2025-02-09 15:25:35.407621: Created input file with content: c

2025-02-09 15:25:35.421318: Python execution with input - RC: 1, Output:
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:25:35.422681: Python runtime error:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:25:35.424892: Final execution status: runtime_error
2025-02-09 15:25:35.425281: Final processed output:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:25:35.426600: Added comparison result for Case3: {'status': 'runtime_error', 'teacherinput': 'c', 'detail': 'Student=  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2\n    def factorial(n):\nIndentationError: unexpected indent vs Teacher=u0063'}
2025-02-09 15:25:35.427189: Processing test case 4
2025-02-09 15:25:35.428400: Executing code in python:
x = int(input())
 def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)

2025-02-09 15:25:35.428757: Input values: d
2025-02-09 15:25:35.430637: Created input file with content: d

2025-02-09 15:25:35.444083: Python execution with input - RC: 1, Output:
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:25:35.445412: Python runtime error:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:25:35.447565: Final execution status: runtime_error
2025-02-09 15:25:35.447953: Final processed output:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:25:35.449277: Added comparison result for Case4: {'status': 'runtime_error', 'teacherinput': 'd', 'detail': 'Student=  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2\n    def factorial(n):\nIndentationError: unexpected indent vs Teacher=u0064'}
2025-02-09 15:25:35.450325: Processing test case 5
2025-02-09 15:25:35.451448: Executing code in python:
x = int(input())
 def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)

2025-02-09 15:25:35.451816: Input values: e
2025-02-09 15:25:35.459691: Created input file with content: e

2025-02-09 15:25:35.474151: Python execution with input - RC: 1, Output:
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:25:35.475554: Python runtime error:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:25:35.477862: Final execution status: runtime_error
2025-02-09 15:25:35.478270: Final processed output:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:25:35.479599: Added comparison result for Case5: {'status': 'runtime_error', 'teacherinput': 'e', 'detail': 'Student=  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2\n    def factorial(n):\nIndentationError: unexpected indent vs Teacher=u0065'}
2025-02-09 15:25:35.480198: Processing test case 6
2025-02-09 15:25:35.481421: Executing code in python:
x = int(input())
 def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)

2025-02-09 15:25:35.481800: Input values: f
2025-02-09 15:25:35.483670: Created input file with content: f

2025-02-09 15:25:35.497208: Python execution with input - RC: 1, Output:
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:25:35.498530: Python runtime error:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:25:35.500696: Final execution status: runtime_error
2025-02-09 15:25:35.501075: Final processed output:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:25:35.502419: Added comparison result for Case6: {'status': 'runtime_error', 'teacherinput': 'f', 'detail': 'Student=  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2\n    def factorial(n):\nIndentationError: unexpected indent vs Teacher=u0068'}
2025-02-09 15:25:35.503459: Saved results to comparison_results.json
2025-02-09 15:26:26.649908: Starting test execution
2025-02-09 15:26:26.650980: Processing test case 1
2025-02-09 15:26:26.652651: Executing code in python:
x = int(input())
 def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)

2025-02-09 15:26:26.653089: Input values: 3
2025-02-09 15:26:26.655587: Created input file with content: 3

2025-02-09 15:26:26.671665: Python execution with input - RC: 1, Output:
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:26:26.673108: Python runtime error:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:26:26.675343: Final execution status: runtime_error
2025-02-09 15:26:26.675742: Final processed output:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:26:26.677113: Added comparison result for Case1: {'status': 'runtime_error', 'teacherinput': '3', 'detail': 'Student=  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2\n    def factorial(n):\nIndentationError: unexpected indent vs Teacher=6'}
2025-02-09 15:26:26.677703: Processing test case 2
2025-02-09 15:26:26.678926: Executing code in python:
x = int(input())
 def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)

2025-02-09 15:26:26.679289: Input values: 5
2025-02-09 15:26:26.681229: Created input file with content: 5

2025-02-09 15:26:26.695176: Python execution with input - RC: 1, Output:
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:26:26.696595: Python runtime error:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:26:26.698824: Final execution status: runtime_error
2025-02-09 15:26:26.699215: Final processed output:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:26:26.700545: Added comparison result for Case2: {'status': 'runtime_error', 'teacherinput': '5', 'detail': 'Student=  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2\n    def factorial(n):\nIndentationError: unexpected indent vs Teacher=120'}
2025-02-09 15:26:26.701599: Saved results to comparison_results.json
2025-02-09 15:26:31.229089: Starting test execution
2025-02-09 15:26:31.230328: Processing test case 1
2025-02-09 15:26:31.232175: Executing code in python:
x = int(input())
 def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)

2025-02-09 15:26:31.232718: Input values: 3
2025-02-09 15:26:31.235036: Created input file with content: 3

2025-02-09 15:26:31.251515: Python execution with input - RC: 1, Output:
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:26:31.253078: Python runtime error:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:26:31.255376: Final execution status: runtime_error
2025-02-09 15:26:31.255774: Final processed output:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:26:31.257147: Added comparison result for Case1: {'status': 'runtime_error', 'teacherinput': '3', 'detail': 'Student=  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2\n    def factorial(n):\nIndentationError: unexpected indent vs Teacher=6'}
2025-02-09 15:26:31.257737: Processing test case 2
2025-02-09 15:26:31.259199: Executing code in python:
x = int(input())
 def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)

2025-02-09 15:26:31.259597: Input values: 5
2025-02-09 15:26:31.261549: Created input file with content: 5

2025-02-09 15:26:31.275975: Python execution with input - RC: 1, Output:
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:26:31.277353: Python runtime error:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:26:31.279495: Final execution status: runtime_error
2025-02-09 15:26:31.279874: Final processed output:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:26:31.281201: Added comparison result for Case2: {'status': 'runtime_error', 'teacherinput': '5', 'detail': 'Student=  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2\n    def factorial(n):\nIndentationError: unexpected indent vs Teacher=120'}
2025-02-09 15:26:31.282228: Saved results to comparison_results.json
2025-02-09 15:27:08.439753: Starting test execution
2025-02-09 15:27:08.440846: Processing test case 1
2025-02-09 15:27:08.442777: Executing code in python:
x = int(input())
 def factorial(n):
if n == 0 or n == 1:
return 1
return n * factorial(n - 1)

2025-02-09 15:27:08.443279: Input values: 3
2025-02-09 15:27:08.445726: Created input file with content: 3

2025-02-09 15:27:08.461953: Python execution with input - RC: 1, Output:
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:27:08.463462: Python runtime error:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:27:08.465672: Final execution status: runtime_error
2025-02-09 15:27:08.466056: Final processed output:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:27:08.467417: Added comparison result for Case1: {'status': 'runtime_error', 'teacherinput': '3', 'detail': 'Student=  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2\n    def factorial(n):\nIndentationError: unexpected indent vs Teacher=6'}
2025-02-09 15:27:08.468002: Processing test case 2
2025-02-09 15:27:08.469237: Executing code in python:
x = int(input())
 def factorial(n):
if n == 0 or n == 1:
return 1
return n * factorial(n - 1)

2025-02-09 15:27:08.469602: Input values: 5
2025-02-09 15:27:08.471520: Created input file with content: 5

2025-02-09 15:27:08.485652: Python execution with input - RC: 1, Output:
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:27:08.487047: Python runtime error:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:27:08.489478: Final execution status: runtime_error
2025-02-09 15:27:08.489905: Final processed output:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:27:08.491265: Added comparison result for Case2: {'status': 'runtime_error', 'teacherinput': '5', 'detail': 'Student=  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2\n    def factorial(n):\nIndentationError: unexpected indent vs Teacher=120'}
2025-02-09 15:27:08.492362: Saved results to comparison_results.json
2025-02-09 15:27:16.046940: Starting test execution
2025-02-09 15:27:16.048074: Processing test case 1
2025-02-09 15:27:16.050032: Executing code in python:
x = int(input())
 def factorial(n):
if n == 0 or n == 1:
return 1
return n * factorial(n - 1)

2025-02-09 15:27:16.050560: Input values: 3
2025-02-09 15:27:16.053009: Created input file with content: 3

2025-02-09 15:27:16.068697: Python execution with input - RC: 1, Output:
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:27:16.070137: Python runtime error:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:27:16.072399: Final execution status: runtime_error
2025-02-09 15:27:16.072792: Final processed output:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:27:16.074165: Added comparison result for Case1: {'status': 'runtime_error', 'teacherinput': '3', 'detail': 'Student=  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2\n    def factorial(n):\nIndentationError: unexpected indent vs Teacher=6'}
2025-02-09 15:27:16.074761: Processing test case 2
2025-02-09 15:27:16.076030: Executing code in python:
x = int(input())
 def factorial(n):
if n == 0 or n == 1:
return 1
return n * factorial(n - 1)

2025-02-09 15:27:16.076413: Input values: 5
2025-02-09 15:27:16.078326: Created input file with content: 5

2025-02-09 15:27:16.092363: Python execution with input - RC: 1, Output:
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:27:16.093773: Python runtime error:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:27:16.095951: Final execution status: runtime_error
2025-02-09 15:27:16.096329: Final processed output:   File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2
    def factorial(n):
IndentationError: unexpected indent
2025-02-09 15:27:16.097674: Added comparison result for Case2: {'status': 'runtime_error', 'teacherinput': '5', 'detail': 'Student=  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 2\n    def factorial(n):\nIndentationError: unexpected indent vs Teacher=120'}
2025-02-09 15:27:16.098707: Saved results to comparison_results.json
2025-02-09 15:28:44.779940: Starting test execution
2025-02-09 15:28:44.781146: Processing test case 1
2025-02-09 15:28:44.782738: Executing code in python:
x = int(input())
def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)
print(factorial(x))
2025-02-09 15:28:44.783150: Input values: 3
2025-02-09 15:28:44.785615: Created input file with content: 3

2025-02-09 15:28:44.802408: Python execution with input - RC: 0, Output:
6
2025-02-09 15:28:44.803808: Processing raw output: 6
2025-02-09 15:28:44.806855: Final processed output: 6
2025-02-09 15:28:44.809024: Normalized output: 6.0
2025-02-09 15:28:44.809566: Python final output: 6.0
2025-02-09 15:28:44.811609: Final execution status: success
2025-02-09 15:28:44.812005: Final processed output: 6.0
2025-02-09 15:28:44.814328: Normalized output: 6.0
2025-02-09 15:28:44.816442: Normalized output: 6.0
2025-02-09 15:28:44.818667: Outputs match completely
2025-02-09 15:28:44.819820: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': '3', 'detail': 'Student=6.0 vs Teacher=6'}
2025-02-09 15:28:44.820403: Processing test case 2
2025-02-09 15:28:44.821584: Executing code in python:
x = int(input())
def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)
print(factorial(x))
2025-02-09 15:28:44.821941: Input values: 5
2025-02-09 15:28:44.823841: Created input file with content: 5

2025-02-09 15:28:44.837815: Python execution with input - RC: 0, Output:
120
2025-02-09 15:28:44.839145: Processing raw output: 120
2025-02-09 15:28:44.841812: Final processed output: 120
2025-02-09 15:28:44.843918: Normalized output: 120.0
2025-02-09 15:28:44.844377: Python final output: 120.0
2025-02-09 15:28:44.846234: Final execution status: success
2025-02-09 15:28:44.846623: Final processed output: 120.0
2025-02-09 15:28:44.848877: Normalized output: 120.0
2025-02-09 15:28:44.850928: Normalized output: 120.0
2025-02-09 15:28:44.853078: Outputs match completely
2025-02-09 15:28:44.854633: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': '5', 'detail': 'Student=120.0 vs Teacher=120'}
2025-02-09 15:28:44.855646: Saved results to comparison_results.json
2025-02-09 15:30:50.458490: Starting test execution
2025-02-09 15:30:50.459557: Processing test case 1
2025-02-09 15:30:50.461221: Executing code in python:
a = int(input())
b = int(input())
print(a + b)
2025-02-09 15:30:50.461650: Input values: 3
5
2025-02-09 15:30:50.464002: Created input file with content: 3
5

2025-02-09 15:30:50.481043: Python execution with input - RC: 0, Output:
8
2025-02-09 15:30:50.482495: Processing raw output: 8
2025-02-09 15:30:50.485609: Final processed output: 8
2025-02-09 15:30:50.487784: Normalized output: 8.0
2025-02-09 15:30:50.488230: Python final output: 8.0
2025-02-09 15:30:50.490291: Final execution status: success
2025-02-09 15:30:50.490686: Final processed output: 8.0
2025-02-09 15:30:50.493003: Normalized output: 8.0
2025-02-09 15:30:50.495468: Normalized output: 8.0
2025-02-09 15:30:50.497878: Outputs match completely
2025-02-09 15:30:50.499059: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': '3\n5', 'detail': 'Student=8.0 vs Teacher=8'}
2025-02-09 15:30:50.499667: Processing test case 2
2025-02-09 15:30:50.500855: Executing code in python:
a = int(input())
b = int(input())
print(a + b)
2025-02-09 15:30:50.501224: Input values: 5
0
2025-02-09 15:30:50.503182: Created input file with content: 5
0

2025-02-09 15:30:50.517343: Python execution with input - RC: 0, Output:
5
2025-02-09 15:30:50.518702: Processing raw output: 5
2025-02-09 15:30:50.521436: Final processed output: 5
2025-02-09 15:30:50.523489: Normalized output: 5.0
2025-02-09 15:30:50.523934: Python final output: 5.0
2025-02-09 15:30:50.525865: Final execution status: success
2025-02-09 15:30:50.526261: Final processed output: 5.0
2025-02-09 15:30:50.528602: Normalized output: 5.0
2025-02-09 15:30:50.530712: Normalized output: 5.0
2025-02-09 15:30:50.532876: Outputs match completely
2025-02-09 15:30:50.534433: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': '5\n0', 'detail': 'Student=5.0 vs Teacher=5'}
2025-02-09 15:30:50.535460: Saved results to comparison_results.json
2025-02-09 15:30:58.483637: Starting test execution
2025-02-09 15:30:58.484717: Processing test case 1
2025-02-09 15:30:58.486560: Executing code in python:
a = int(input())
b = int(input())
print(a + b)
2025-02-09 15:30:58.487080: Input values: 3
5
2025-02-09 15:30:58.489502: Created input file with content: 3
5

2025-02-09 15:30:58.505309: Python execution with input - RC: 0, Output:
8
2025-02-09 15:30:58.506851: Processing raw output: 8
2025-02-09 15:30:58.509912: Final processed output: 8
2025-02-09 15:30:58.512180: Normalized output: 8.0
2025-02-09 15:30:58.512634: Python final output: 8.0
2025-02-09 15:30:58.514569: Final execution status: success
2025-02-09 15:30:58.514951: Final processed output: 8.0
2025-02-09 15:30:58.517249: Normalized output: 8.0
2025-02-09 15:30:58.519353: Normalized output: 7.0
2025-02-09 15:30:58.521542: Mismatch at line 0 - Student: "8.0", Expected: "7.0"
2025-02-09 15:30:58.522783: Added comparison result for Case1: {'status': 'FAIL', 'teacherinput': '3\n5', 'detail': 'Student=8.0 vs Teacher=7'}
2025-02-09 15:30:58.523485: Processing test case 2
2025-02-09 15:30:58.524884: Executing code in python:
a = int(input())
b = int(input())
print(a + b)
2025-02-09 15:30:58.525302: Input values: 5
0
2025-02-09 15:30:58.527480: Created input file with content: 5
0

2025-02-09 15:30:58.543138: Python execution with input - RC: 0, Output:
5
2025-02-09 15:30:58.544619: Processing raw output: 5
2025-02-09 15:30:58.547385: Final processed output: 5
2025-02-09 15:30:58.549495: Normalized output: 5.0
2025-02-09 15:30:58.550040: Python final output: 5.0
2025-02-09 15:30:58.551856: Final execution status: success
2025-02-09 15:30:58.552236: Final processed output: 5.0
2025-02-09 15:30:58.554511: Normalized output: 5.0
2025-02-09 15:30:58.556580: Normalized output: 5.0
2025-02-09 15:30:58.558747: Outputs match completely
2025-02-09 15:30:58.560315: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': '5\n0', 'detail': 'Student=5.0 vs Teacher=5'}
2025-02-09 15:30:58.561303: Saved results to comparison_results.json
2025-02-09 15:34:45.651820: Starting test execution
2025-02-09 15:34:45.653131: Processing test case 1
2025-02-09 15:34:45.654915: Executing code in python:
x = int(input())
def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)
print(factorial(x))
2025-02-09 15:34:45.655355: Input values: 3
2025-02-09 15:34:45.657430: Created input file with content: 3

2025-02-09 15:34:45.673854: Python execution with input - RC: 0, Output:
6
2025-02-09 15:34:45.675328: Processing raw output: 6
2025-02-09 15:34:45.678485: Final processed output: 6
2025-02-09 15:34:45.681212: Normalized output: 6.0
2025-02-09 15:34:45.681722: Python final output: 6.0
2025-02-09 15:34:45.683664: Final execution status: success
2025-02-09 15:34:45.684049: Final processed output: 6.0
2025-02-09 15:34:45.686356: Normalized output: 6.0
2025-02-09 15:34:45.688548: Normalized output: 6.0
2025-02-09 15:34:45.690719: Outputs match completely
2025-02-09 15:34:45.691849: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': '3', 'detail': 'Student=6.0 vs Teacher=6'}
2025-02-09 15:34:45.692463: Processing test case 2
2025-02-09 15:34:45.693649: Executing code in python:
x = int(input())
def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)
print(factorial(x))
2025-02-09 15:34:45.694010: Input values: 5
2025-02-09 15:34:45.695954: Created input file with content: 5

2025-02-09 15:34:45.710410: Python execution with input - RC: 0, Output:
120
2025-02-09 15:34:45.711761: Processing raw output: 120
2025-02-09 15:34:45.714617: Final processed output: 120
2025-02-09 15:34:45.716746: Normalized output: 120.0
2025-02-09 15:34:45.717215: Python final output: 120.0
2025-02-09 15:34:45.719137: Final execution status: success
2025-02-09 15:34:45.719538: Final processed output: 120.0
2025-02-09 15:34:45.721803: Normalized output: 120.0
2025-02-09 15:34:45.723877: Normalized output: 120.0
2025-02-09 15:34:45.726053: Outputs match completely
2025-02-09 15:34:45.727619: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': '5', 'detail': 'Student=120.0 vs Teacher=120'}
2025-02-09 15:34:45.728623: Saved results to comparison_results.json
2025-02-09 15:35:06.837622: Starting test execution
2025-02-09 15:35:06.838693: Processing test case 1
2025-02-09 15:35:06.839903: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:35:06.840738: Input values: a
2025-02-09 15:35:06.843008: Created input file with content: a

2025-02-09 15:35:06.859133: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-09 15:35:06.860697: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-09 15:35:06.863813: Final processed output: u0061
2025-02-09 15:35:06.866175: Normalized output: u0061
2025-02-09 15:35:06.866621: Python final output: u0061
2025-02-09 15:35:06.868590: Final execution status: success
2025-02-09 15:35:06.869005: Final processed output: u0061
2025-02-09 15:35:06.871362: Normalized output: u0061
2025-02-09 15:35:06.873612: Normalized output: u0061
2025-02-09 15:35:06.875805: Outputs match completely
2025-02-09 15:35:06.877045: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': 'a', 'detail': 'Student=u0061 vs Teacher=u0061'}
2025-02-09 15:35:06.877616: Processing test case 2
2025-02-09 15:35:06.878846: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:35:06.879230: Input values: b
2025-02-09 15:35:06.881250: Created input file with content: b

2025-02-09 15:35:06.895307: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0062
2025-02-09 15:35:06.896639: Processing raw output: Enter a character: The Unicode is: u0062
2025-02-09 15:35:06.899491: Final processed output: u0062
2025-02-09 15:35:06.901688: Normalized output: u0062
2025-02-09 15:35:06.902128: Python final output: u0062
2025-02-09 15:35:06.903987: Final execution status: success
2025-02-09 15:35:06.904360: Final processed output: u0062
2025-02-09 15:35:06.906667: Normalized output: u0062
2025-02-09 15:35:06.908723: Normalized output: u0062
2025-02-09 15:35:06.911311: Outputs match completely
2025-02-09 15:35:06.912440: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': 'b', 'detail': 'Student=u0062 vs Teacher=u0062'}
2025-02-09 15:35:06.913010: Processing test case 3
2025-02-09 15:35:06.920124: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:35:06.920536: Input values: c
2025-02-09 15:35:06.922479: Created input file with content: c

2025-02-09 15:35:06.937021: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0063
2025-02-09 15:35:06.938349: Processing raw output: Enter a character: The Unicode is: u0063
2025-02-09 15:35:06.941067: Final processed output: u0063
2025-02-09 15:35:06.943176: Normalized output: u0063
2025-02-09 15:35:06.943629: Python final output: u0063
2025-02-09 15:35:06.945523: Final execution status: success
2025-02-09 15:35:06.945895: Final processed output: u0063
2025-02-09 15:35:06.948246: Normalized output: u0063
2025-02-09 15:35:06.950409: Normalized output: u0063
2025-02-09 15:35:06.952581: Outputs match completely
2025-02-09 15:35:06.953756: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': 'c', 'detail': 'Student=u0063 vs Teacher=u0063'}
2025-02-09 15:35:06.954315: Processing test case 4
2025-02-09 15:35:06.955436: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:35:06.955795: Input values: d
2025-02-09 15:35:06.957711: Created input file with content: d

2025-02-09 15:35:06.971287: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0064
2025-02-09 15:35:06.972708: Processing raw output: Enter a character: The Unicode is: u0064
2025-02-09 15:35:06.975210: Final processed output: u0064
2025-02-09 15:35:06.977404: Normalized output: u0064
2025-02-09 15:35:06.977846: Python final output: u0064
2025-02-09 15:35:06.979718: Final execution status: success
2025-02-09 15:35:06.980090: Final processed output: u0064
2025-02-09 15:35:06.982404: Normalized output: u0064
2025-02-09 15:35:06.984841: Normalized output: u0064
2025-02-09 15:35:06.987015: Outputs match completely
2025-02-09 15:35:06.988139: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': 'd', 'detail': 'Student=u0064 vs Teacher=u0064'}
2025-02-09 15:35:06.988725: Processing test case 5
2025-02-09 15:35:06.989903: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:35:06.990268: Input values: e
2025-02-09 15:35:06.992169: Created input file with content: e

2025-02-09 15:35:07.005894: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0065
2025-02-09 15:35:07.007230: Processing raw output: Enter a character: The Unicode is: u0065
2025-02-09 15:35:07.009869: Final processed output: u0065
2025-02-09 15:35:07.011966: Normalized output: u0065
2025-02-09 15:35:07.012420: Python final output: u0065
2025-02-09 15:35:07.014350: Final execution status: success
2025-02-09 15:35:07.014742: Final processed output: u0065
2025-02-09 15:35:07.017049: Normalized output: u0065
2025-02-09 15:35:07.019156: Normalized output: u0065
2025-02-09 15:35:07.021329: Outputs match completely
2025-02-09 15:35:07.022538: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': 'e', 'detail': 'Student=u0065 vs Teacher=u0065'}
2025-02-09 15:35:07.023107: Processing test case 6
2025-02-09 15:35:07.024199: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 15:35:07.024558: Input values: f
2025-02-09 15:35:07.026466: Created input file with content: f

2025-02-09 15:35:07.039930: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0066
2025-02-09 15:35:07.041335: Processing raw output: Enter a character: The Unicode is: u0066
2025-02-09 15:35:07.043878: Final processed output: u0066
2025-02-09 15:35:07.046049: Normalized output: u0066
2025-02-09 15:35:07.046488: Python final output: u0066
2025-02-09 15:35:07.048411: Final execution status: success
2025-02-09 15:35:07.048785: Final processed output: u0066
2025-02-09 15:35:07.051476: Normalized output: u0066
2025-02-09 15:35:07.053513: Normalized output: u0068
2025-02-09 15:35:07.055733: Mismatch at line 0 - Student: "u0066", Expected: "u0068"
2025-02-09 15:35:07.056936: Added comparison result for Case6: {'status': 'FAIL', 'teacherinput': 'f', 'detail': 'Student=u0066 vs Teacher=u0068'}
2025-02-09 15:35:07.057889: Saved results to comparison_results.json
2025-02-09 17:37:59.694047: Starting test execution
2025-02-09 17:37:59.695376: Processing test case 1
2025-02-09 17:37:59.696718: Executing code in python:
a = int(input())
b = int(input())
print(a + b)
2025-02-09 17:37:59.697679: Input values: a
2025-02-09 17:37:59.699739: Created input file with content: a

2025-02-09 17:37:59.716813: Python execution with input - RC: 1, Output:
Traceback (most recent call last):
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>
    a = int(input())
        ^^^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'a'
2025-02-09 17:37:59.718304: Python runtime error: Traceback (most recent call last):
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>
    a = int(input())
        ^^^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'a'
2025-02-09 17:37:59.720534: Final execution status: runtime_error
2025-02-09 17:37:59.720932: Final processed output: Traceback (most recent call last):
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>
    a = int(input())
        ^^^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'a'
2025-02-09 17:37:59.722331: Added comparison result for Case1: {'status': 'runtime_error', 'teacherinput': 'a', 'detail': 'Student=Traceback (most recent call last):\n  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>\n    a = int(input())\n        ^^^^^^^^^^^^\nValueError: invalid literal for int() with base 10: \'a\' vs Teacher=u0061'}
2025-02-09 17:37:59.722957: Processing test case 2
2025-02-09 17:37:59.724869: Executing code in python:
a = int(input())
b = int(input())
print(a + b)
2025-02-09 17:37:59.725317: Input values: b
2025-02-09 17:37:59.727346: Created input file with content: b

2025-02-09 17:37:59.742069: Python execution with input - RC: 1, Output:
Traceback (most recent call last):
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>
    a = int(input())
        ^^^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'b'
2025-02-09 17:37:59.743491: Python runtime error: Traceback (most recent call last):
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>
    a = int(input())
        ^^^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'b'
2025-02-09 17:37:59.745662: Final execution status: runtime_error
2025-02-09 17:37:59.746051: Final processed output: Traceback (most recent call last):
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>
    a = int(input())
        ^^^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'b'
2025-02-09 17:37:59.747418: Added comparison result for Case2: {'status': 'runtime_error', 'teacherinput': 'b', 'detail': 'Student=Traceback (most recent call last):\n  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>\n    a = int(input())\n        ^^^^^^^^^^^^\nValueError: invalid literal for int() with base 10: \'b\' vs Teacher=u0062'}
2025-02-09 17:37:59.748046: Processing test case 3
2025-02-09 17:37:59.749273: Executing code in python:
a = int(input())
b = int(input())
print(a + b)
2025-02-09 17:37:59.749631: Input values: c
2025-02-09 17:37:59.751495: Created input file with content: c

2025-02-09 17:37:59.765374: Python execution with input - RC: 1, Output:
Traceback (most recent call last):
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>
    a = int(input())
        ^^^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'c'
2025-02-09 17:37:59.766725: Python runtime error: Traceback (most recent call last):
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>
    a = int(input())
        ^^^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'c'
2025-02-09 17:37:59.768926: Final execution status: runtime_error
2025-02-09 17:37:59.769332: Final processed output: Traceback (most recent call last):
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>
    a = int(input())
        ^^^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'c'
2025-02-09 17:37:59.770675: Added comparison result for Case3: {'status': 'runtime_error', 'teacherinput': 'c', 'detail': 'Student=Traceback (most recent call last):\n  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>\n    a = int(input())\n        ^^^^^^^^^^^^\nValueError: invalid literal for int() with base 10: \'c\' vs Teacher=u0063'}
2025-02-09 17:37:59.771268: Processing test case 4
2025-02-09 17:37:59.772482: Executing code in python:
a = int(input())
b = int(input())
print(a + b)
2025-02-09 17:37:59.772855: Input values: d
2025-02-09 17:37:59.774773: Created input file with content: d

2025-02-09 17:37:59.788505: Python execution with input - RC: 1, Output:
Traceback (most recent call last):
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>
    a = int(input())
        ^^^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'd'
2025-02-09 17:37:59.789882: Python runtime error: Traceback (most recent call last):
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>
    a = int(input())
        ^^^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'd'
2025-02-09 17:37:59.792093: Final execution status: runtime_error
2025-02-09 17:37:59.792480: Final processed output: Traceback (most recent call last):
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>
    a = int(input())
        ^^^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'd'
2025-02-09 17:37:59.793814: Added comparison result for Case4: {'status': 'runtime_error', 'teacherinput': 'd', 'detail': 'Student=Traceback (most recent call last):\n  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>\n    a = int(input())\n        ^^^^^^^^^^^^\nValueError: invalid literal for int() with base 10: \'d\' vs Teacher=u0064'}
2025-02-09 17:37:59.794797: Processing test case 5
2025-02-09 17:37:59.795946: Executing code in python:
a = int(input())
b = int(input())
print(a + b)
2025-02-09 17:37:59.796318: Input values: e
2025-02-09 17:37:59.804558: Created input file with content: e

2025-02-09 17:37:59.819273: Python execution with input - RC: 1, Output:
Traceback (most recent call last):
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>
    a = int(input())
        ^^^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'e'
2025-02-09 17:37:59.820646: Python runtime error: Traceback (most recent call last):
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>
    a = int(input())
        ^^^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'e'
2025-02-09 17:37:59.822924: Final execution status: runtime_error
2025-02-09 17:37:59.823349: Final processed output: Traceback (most recent call last):
  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>
    a = int(input())
        ^^^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'e'
2025-02-09 17:37:59.824686: Added comparison result for Case5: {'status': 'runtime_error', 'teacherinput': 'e', 'detail': 'Student=Traceback (most recent call last):\n  File "/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/./temp/test.py", line 1, in <module>\n    a = int(input())\n        ^^^^^^^^^^^^\nValueError: invalid literal for int() with base 10: \'e\' vs Teacher=u0065'}
2025-02-09 17:37:59.825734: Saved results to comparison_results.json
2025-02-09 17:38:22.736416: Starting test execution
2025-02-09 17:38:22.737695: Processing test case 1
2025-02-09 17:38:22.738951: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 17:38:22.739917: Input values: a
2025-02-09 17:38:22.742248: Created input file with content: a

2025-02-09 17:38:22.758035: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-09 17:38:22.759561: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-09 17:38:22.762667: Final processed output: u0061
2025-02-09 17:38:22.765042: Normalized output: u0061
2025-02-09 17:38:22.765495: Python final output: u0061
2025-02-09 17:38:22.767447: Final execution status: success
2025-02-09 17:38:22.767843: Final processed output: u0061
2025-02-09 17:38:22.770170: Normalized output: u0061
2025-02-09 17:38:22.772455: Normalized output: u0061
2025-02-09 17:38:22.774663: Outputs match completely
2025-02-09 17:38:22.775883: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': 'a', 'detail': 'Student=u0061 vs Teacher=u0061'}
2025-02-09 17:38:22.776438: Processing test case 2
2025-02-09 17:38:22.777518: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 17:38:22.777870: Input values: b
2025-02-09 17:38:22.779791: Created input file with content: b

2025-02-09 17:38:22.793657: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0062
2025-02-09 17:38:22.795014: Processing raw output: Enter a character: The Unicode is: u0062
2025-02-09 17:38:22.797755: Final processed output: u0062
2025-02-09 17:38:22.800000: Normalized output: u0062
2025-02-09 17:38:22.800444: Python final output: u0062
2025-02-09 17:38:22.802323: Final execution status: success
2025-02-09 17:38:22.802712: Final processed output: u0062
2025-02-09 17:38:22.805029: Normalized output: u0062
2025-02-09 17:38:22.807088: Normalized output: u0062
2025-02-09 17:38:22.809713: Outputs match completely
2025-02-09 17:38:22.810844: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': 'b', 'detail': 'Student=u0062 vs Teacher=u0062'}
2025-02-09 17:38:22.811407: Processing test case 3
2025-02-09 17:38:22.818498: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 17:38:22.818912: Input values: c
2025-02-09 17:38:22.820797: Created input file with content: c

2025-02-09 17:38:22.835499: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0063
2025-02-09 17:38:22.836815: Processing raw output: Enter a character: The Unicode is: u0063
2025-02-09 17:38:22.839551: Final processed output: u0063
2025-02-09 17:38:22.841696: Normalized output: u0063
2025-02-09 17:38:22.842132: Python final output: u0063
2025-02-09 17:38:22.844030: Final execution status: success
2025-02-09 17:38:22.844395: Final processed output: u0063
2025-02-09 17:38:22.846791: Normalized output: u0063
2025-02-09 17:38:22.848955: Normalized output: u0063
2025-02-09 17:38:22.851175: Outputs match completely
2025-02-09 17:38:22.852360: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': 'c', 'detail': 'Student=u0063 vs Teacher=u0063'}
2025-02-09 17:38:22.852922: Processing test case 4
2025-02-09 17:38:22.854072: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 17:38:22.854445: Input values: d
2025-02-09 17:38:22.856437: Created input file with content: d

2025-02-09 17:38:22.870231: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0064
2025-02-09 17:38:22.871707: Processing raw output: Enter a character: The Unicode is: u0064
2025-02-09 17:38:22.874266: Final processed output: u0064
2025-02-09 17:38:22.876447: Normalized output: u0064
2025-02-09 17:38:22.876877: Python final output: u0064
2025-02-09 17:38:22.878736: Final execution status: success
2025-02-09 17:38:22.879110: Final processed output: u0064
2025-02-09 17:38:22.881493: Normalized output: u0064
2025-02-09 17:38:22.884527: Normalized output: u0064
2025-02-09 17:38:22.886929: Outputs match completely
2025-02-09 17:38:22.888115: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': 'd', 'detail': 'Student=u0064 vs Teacher=u0064'}
2025-02-09 17:38:22.888732: Processing test case 5
2025-02-09 17:38:22.889990: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 17:38:22.890372: Input values: e
2025-02-09 17:38:22.892362: Created input file with content: e

2025-02-09 17:38:22.909154: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0065
2025-02-09 17:38:22.911146: Processing raw output: Enter a character: The Unicode is: u0065
2025-02-09 17:38:22.914500: Final processed output: u0065
2025-02-09 17:38:22.916930: Normalized output: u0065
2025-02-09 17:38:22.917425: Python final output: u0065
2025-02-09 17:38:22.919712: Final execution status: success
2025-02-09 17:38:22.920184: Final processed output: u0065
2025-02-09 17:38:22.922878: Normalized output: u0065
2025-02-09 17:38:22.925150: Normalized output: u0065
2025-02-09 17:38:22.927349: Outputs match completely
2025-02-09 17:38:22.928799: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': 'e', 'detail': 'Student=u0065 vs Teacher=u0065'}
2025-02-09 17:38:22.930104: Saved results to comparison_results.json
2025-02-09 17:58:23.744334: Starting test execution
2025-02-09 17:58:23.745643: Processing test case 1
2025-02-09 17:58:23.746891: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 17:58:23.747955: Input values: a
2025-02-09 17:58:23.750082: Created input file with content: a

2025-02-09 17:58:23.768075: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-09 17:58:23.769605: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-09 17:58:23.773071: Final processed output: u0061
2025-02-09 17:58:23.775554: Normalized output: u0061
2025-02-09 17:58:23.776017: Python final output: u0061
2025-02-09 17:58:23.778397: Final execution status: success
2025-02-09 17:58:23.778862: Final processed output: u0061
2025-02-09 17:58:23.781473: Normalized output: u0061
2025-02-09 17:58:23.783769: Normalized output: u0061
2025-02-09 17:58:23.786113: Outputs match completely
2025-02-09 17:58:23.787423: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': 'a', 'detail': 'Student=u0061 vs Teacher=u0061'}
2025-02-09 17:58:23.788021: Processing test case 2
2025-02-09 17:58:23.789176: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 17:58:23.789555: Input values: b
2025-02-09 17:58:23.791569: Created input file with content: b

2025-02-09 17:58:23.807248: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0062
2025-02-09 17:58:23.808722: Processing raw output: Enter a character: The Unicode is: u0062
2025-02-09 17:58:23.811757: Final processed output: u0062
2025-02-09 17:58:23.814134: Normalized output: u0062
2025-02-09 17:58:23.814586: Python final output: u0062
2025-02-09 17:58:23.816548: Final execution status: success
2025-02-09 17:58:23.816930: Final processed output: u0062
2025-02-09 17:58:23.819376: Normalized output: u0062
2025-02-09 17:58:23.821526: Normalized output: u0062
2025-02-09 17:58:23.824275: Outputs match completely
2025-02-09 17:58:23.825444: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': 'b', 'detail': 'Student=u0062 vs Teacher=u0062'}
2025-02-09 17:58:23.826033: Processing test case 3
2025-02-09 17:58:23.833866: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 17:58:23.834295: Input values: c
2025-02-09 17:58:23.836234: Created input file with content: c

2025-02-09 17:58:23.852210: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0063
2025-02-09 17:58:23.853618: Processing raw output: Enter a character: The Unicode is: u0063
2025-02-09 17:58:23.856471: Final processed output: u0063
2025-02-09 17:58:23.858722: Normalized output: u0063
2025-02-09 17:58:23.859194: Python final output: u0063
2025-02-09 17:58:23.861218: Final execution status: success
2025-02-09 17:58:23.861605: Final processed output: u0063
2025-02-09 17:58:23.864036: Normalized output: u0063
2025-02-09 17:58:23.866254: Normalized output: u0063
2025-02-09 17:58:23.868525: Outputs match completely
2025-02-09 17:58:23.869764: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': 'c', 'detail': 'Student=u0063 vs Teacher=u0063'}
2025-02-09 17:58:23.870361: Processing test case 4
2025-02-09 17:58:23.871523: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 17:58:23.871890: Input values: d
2025-02-09 17:58:23.873901: Created input file with content: d

2025-02-09 17:58:23.888583: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0064
2025-02-09 17:58:23.890069: Processing raw output: Enter a character: The Unicode is: u0064
2025-02-09 17:58:23.892730: Final processed output: u0064
2025-02-09 17:58:23.895056: Normalized output: u0064
2025-02-09 17:58:23.895506: Python final output: u0064
2025-02-09 17:58:23.897473: Final execution status: success
2025-02-09 17:58:23.897861: Final processed output: u0064
2025-02-09 17:58:23.900245: Normalized output: u0064
2025-02-09 17:58:23.902824: Normalized output: u0064
2025-02-09 17:58:23.905128: Outputs match completely
2025-02-09 17:58:23.906264: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': 'd', 'detail': 'Student=u0064 vs Teacher=u0064'}
2025-02-09 17:58:23.906891: Processing test case 5
2025-02-09 17:58:23.908122: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 17:58:23.908495: Input values: e
2025-02-09 17:58:23.910422: Created input file with content: e

2025-02-09 17:58:23.925700: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0065
2025-02-09 17:58:23.927131: Processing raw output: Enter a character: The Unicode is: u0065
2025-02-09 17:58:23.929937: Final processed output: u0065
2025-02-09 17:58:23.932162: Normalized output: u0065
2025-02-09 17:58:23.932629: Python final output: u0065
2025-02-09 17:58:23.934592: Final execution status: success
2025-02-09 17:58:23.934989: Final processed output: u0065
2025-02-09 17:58:23.937386: Normalized output: u0065
2025-02-09 17:58:23.939581: Normalized output: u0066
2025-02-09 17:58:23.941848: Mismatch at line 0 - Student: "u0065", Expected: "u0066"
2025-02-09 17:58:23.943899: Added comparison result for Case5: {'status': 'FAIL', 'teacherinput': 'e', 'detail': 'Student=u0065 vs Teacher=u0066'}
2025-02-09 17:58:23.945325: Saved results to comparison_results.json
2025-02-09 17:58:29.848805: Starting test execution
2025-02-09 17:58:29.850030: Processing test case 1
2025-02-09 17:58:29.851546: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 17:58:29.852724: Input values: a
2025-02-09 17:58:29.855314: Created input file with content: a

2025-02-09 17:58:29.875115: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-09 17:58:29.877201: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-09 17:58:29.881210: Final processed output: u0061
2025-02-09 17:58:29.883971: Normalized output: u0061
2025-02-09 17:58:29.884499: Python final output: u0061
2025-02-09 17:58:29.886661: Final execution status: success
2025-02-09 17:58:29.887098: Final processed output: u0061
2025-02-09 17:58:29.889975: Normalized output: u0061
2025-02-09 17:58:29.892656: Normalized output: u0061
2025-02-09 17:58:29.895482: Outputs match completely
2025-02-09 17:58:29.897196: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': 'a', 'detail': 'Student=u0061 vs Teacher=u0061'}
2025-02-09 17:58:29.897887: Processing test case 2
2025-02-09 17:58:29.899147: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 17:58:29.899578: Input values: b
2025-02-09 17:58:29.901789: Created input file with content: b

2025-02-09 17:58:29.918634: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0062
2025-02-09 17:58:29.920188: Processing raw output: Enter a character: The Unicode is: u0062
2025-02-09 17:58:29.923276: Final processed output: u0062
2025-02-09 17:58:29.925871: Normalized output: u0062
2025-02-09 17:58:29.926366: Python final output: u0062
2025-02-09 17:58:29.928601: Final execution status: success
2025-02-09 17:58:29.929036: Final processed output: u0062
2025-02-09 17:58:29.931701: Normalized output: u0062
2025-02-09 17:58:29.933971: Normalized output: u0062
2025-02-09 17:58:29.936852: Outputs match completely
2025-02-09 17:58:29.938070: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': 'b', 'detail': 'Student=u0062 vs Teacher=u0062'}
2025-02-09 17:58:29.938682: Processing test case 3
2025-02-09 17:58:29.947973: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 17:58:29.948467: Input values: c
2025-02-09 17:58:29.950556: Created input file with content: c

2025-02-09 17:58:29.967781: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0063
2025-02-09 17:58:29.969364: Processing raw output: Enter a character: The Unicode is: u0063
2025-02-09 17:58:29.972347: Final processed output: u0063
2025-02-09 17:58:29.974768: Normalized output: u0063
2025-02-09 17:58:29.975246: Python final output: u0063
2025-02-09 17:58:29.977475: Final execution status: success
2025-02-09 17:58:29.977892: Final processed output: u0063
2025-02-09 17:58:29.980740: Normalized output: u0063
2025-02-09 17:58:29.983071: Normalized output: u0063
2025-02-09 17:58:29.985472: Outputs match completely
2025-02-09 17:58:29.986780: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': 'c', 'detail': 'Student=u0063 vs Teacher=u0063'}
2025-02-09 17:58:29.987387: Processing test case 4
2025-02-09 17:58:29.988624: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 17:58:29.989002: Input values: d
2025-02-09 17:58:29.991105: Created input file with content: d

2025-02-09 17:58:30.007430: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0064
2025-02-09 17:58:30.009149: Processing raw output: Enter a character: The Unicode is: u0064
2025-02-09 17:58:30.012324: Final processed output: u0064
2025-02-09 17:58:30.014865: Normalized output: u0064
2025-02-09 17:58:30.015346: Python final output: u0064
2025-02-09 17:58:30.017411: Final execution status: success
2025-02-09 17:58:30.017810: Final processed output: u0064
2025-02-09 17:58:30.020331: Normalized output: u0064
2025-02-09 17:58:30.023089: Normalized output: u0064
2025-02-09 17:58:30.025488: Outputs match completely
2025-02-09 17:58:30.026798: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': 'd', 'detail': 'Student=u0064 vs Teacher=u0064'}
2025-02-09 17:58:30.027489: Processing test case 5
2025-02-09 17:58:30.028791: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-09 17:58:30.029179: Input values: e
2025-02-09 17:58:30.031189: Created input file with content: e

2025-02-09 17:58:30.047530: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0065
2025-02-09 17:58:30.049091: Processing raw output: Enter a character: The Unicode is: u0065
2025-02-09 17:58:30.052029: Final processed output: u0065
2025-02-09 17:58:30.054332: Normalized output: u0065
2025-02-09 17:58:30.054811: Python final output: u0065
2025-02-09 17:58:30.056873: Final execution status: success
2025-02-09 17:58:30.057279: Final processed output: u0065
2025-02-09 17:58:30.059791: Normalized output: u0065
2025-02-09 17:58:30.062419: Normalized output: u0065
2025-02-09 17:58:30.064848: Outputs match completely
2025-02-09 17:58:30.066184: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': 'e', 'detail': 'Student=u0065 vs Teacher=u0065'}
2025-02-09 17:58:30.067191: Saved results to comparison_results.json
2025-02-12 21:28:11.573975: Starting test execution
2025-02-12 21:28:28.785061: Starting test execution
2025-02-12 21:28:28.786145: Processing test case 1
2025-02-12 21:28:28.787366: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:28:28.788221: Input values: a
2025-02-12 21:28:28.790823: Created input file with content: a

2025-02-12 21:28:28.808173: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-12 21:28:28.809677: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-12 21:28:28.816598: Final processed output: u0061
2025-02-12 21:28:28.819378: Normalized output: u0061
2025-02-12 21:28:28.819870: Python final output: u0061
2025-02-12 21:28:28.821878: Final execution status: success
2025-02-12 21:28:28.822291: Final processed output: u0061
2025-02-12 21:28:28.824607: Normalized output: u0061
2025-02-12 21:28:28.826775: Normalized output: u0061
2025-02-12 21:28:28.829130: Outputs match completely
2025-02-12 21:28:28.830276: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': 'a', 'detail': 'Student=u0061 vs Teacher=u0061'}
2025-02-12 21:28:28.830890: Processing test case 2
2025-02-12 21:28:28.832138: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:28:28.832498: Input values: b
2025-02-12 21:28:28.834369: Created input file with content: b

2025-02-12 21:28:28.848859: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0062
2025-02-12 21:28:28.850224: Processing raw output: Enter a character: The Unicode is: u0062
2025-02-12 21:28:28.855740: Final processed output: u0062
2025-02-12 21:28:28.857967: Normalized output: u0062
2025-02-12 21:28:28.858416: Python final output: u0062
2025-02-12 21:28:28.860339: Final execution status: success
2025-02-12 21:28:28.860718: Final processed output: u0062
2025-02-12 21:28:28.863366: Normalized output: u0062
2025-02-12 21:28:28.865406: Normalized output: u0062
2025-02-12 21:28:28.873644: Outputs match completely
2025-02-12 21:28:28.874801: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': 'b', 'detail': 'Student=u0062 vs Teacher=u0062'}
2025-02-12 21:28:28.875396: Processing test case 3
2025-02-12 21:28:28.876585: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:28:28.876966: Input values: c
2025-02-12 21:28:28.878839: Created input file with content: c

2025-02-12 21:28:28.893495: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0063
2025-02-12 21:28:28.894880: Processing raw output: Enter a character: The Unicode is: u0063
2025-02-12 21:28:28.900404: Final processed output: u0063
2025-02-12 21:28:28.902649: Normalized output: u0063
2025-02-12 21:28:28.903102: Python final output: u0063
2025-02-12 21:28:28.904998: Final execution status: success
2025-02-12 21:28:28.905382: Final processed output: u0063
2025-02-12 21:28:28.907730: Normalized output: u0063
2025-02-12 21:28:28.909752: Normalized output: u0063
2025-02-12 21:28:28.912028: Outputs match completely
2025-02-12 21:28:28.913127: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': 'c', 'detail': 'Student=u0063 vs Teacher=u0063'}
2025-02-12 21:28:28.913722: Processing test case 4
2025-02-12 21:28:28.914905: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:28:28.915274: Input values: d
2025-02-12 21:28:28.917283: Created input file with content: d

2025-02-12 21:28:28.931172: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0064
2025-02-12 21:28:28.932577: Processing raw output: Enter a character: The Unicode is: u0064
2025-02-12 21:28:28.938032: Final processed output: u0064
2025-02-12 21:28:28.940212: Normalized output: u0064
2025-02-12 21:28:28.940659: Python final output: u0064
2025-02-12 21:28:28.942956: Final execution status: success
2025-02-12 21:28:28.943346: Final processed output: u0064
2025-02-12 21:28:28.945722: Normalized output: u0064
2025-02-12 21:28:28.947785: Normalized output: u0064
2025-02-12 21:28:28.950089: Outputs match completely
2025-02-12 21:28:28.951212: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': 'd', 'detail': 'Student=u0064 vs Teacher=u0064'}
2025-02-12 21:28:28.951794: Processing test case 5
2025-02-12 21:28:28.952979: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:28:28.953353: Input values: e
2025-02-12 21:28:28.955192: Created input file with content: e

2025-02-12 21:28:28.968902: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0065
2025-02-12 21:28:28.970264: Processing raw output: Enter a character: The Unicode is: u0065
2025-02-12 21:28:28.975738: Final processed output: u0065
2025-02-12 21:28:28.977969: Normalized output: u0065
2025-02-12 21:28:28.978409: Python final output: u0065
2025-02-12 21:28:28.980299: Final execution status: success
2025-02-12 21:28:28.980689: Final processed output: u0065
2025-02-12 21:28:28.983034: Normalized output: u0065
2025-02-12 21:28:28.985054: Normalized output: u0065
2025-02-12 21:28:28.987293: Outputs match completely
2025-02-12 21:28:28.988405: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': 'e', 'detail': 'Student=u0065 vs Teacher=u0065'}
2025-02-12 21:28:28.989559: Saved results to comparison_results.json
2025-02-12 21:28:46.986217: Starting test execution
2025-02-12 21:28:46.987502: Processing test case 1
2025-02-12 21:28:46.989736: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:28:46.990357: Input values: a
2025-02-12 21:28:46.993068: Created input file with content: a

2025-02-12 21:28:47.012717: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-12 21:28:47.014666: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-12 21:28:47.023205: Final processed output: u0061
2025-02-12 21:28:47.025655: Normalized output: u0061
2025-02-12 21:28:47.026152: Python final output: u0061
2025-02-12 21:28:47.028138: Final execution status: success
2025-02-12 21:28:47.028524: Final processed output: u0061
2025-02-12 21:28:47.030893: Normalized output: u0061
2025-02-12 21:28:47.033046: Normalized output: u0061
2025-02-12 21:28:47.035338: Outputs match completely
2025-02-12 21:28:47.036472: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': 'a', 'detail': 'Student=u0061 vs Teacher=u0061'}
2025-02-12 21:28:47.037072: Processing test case 2
2025-02-12 21:28:47.038279: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:28:47.038676: Input values: b
2025-02-12 21:28:47.040605: Created input file with content: b

2025-02-12 21:28:47.055257: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0062
2025-02-12 21:28:47.056616: Processing raw output: Enter a character: The Unicode is: u0062
2025-02-12 21:28:47.062162: Final processed output: u0062
2025-02-12 21:28:47.064378: Normalized output: u0062
2025-02-12 21:28:47.064831: Python final output: u0062
2025-02-12 21:28:47.066713: Final execution status: success
2025-02-12 21:28:47.067093: Final processed output: u0062
2025-02-12 21:28:47.069818: Normalized output: u0062
2025-02-12 21:28:47.071853: Normalized output: u0062
2025-02-12 21:28:47.080162: Outputs match completely
2025-02-12 21:28:47.081332: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': 'b', 'detail': 'Student=u0062 vs Teacher=u0062'}
2025-02-12 21:28:47.081931: Processing test case 3
2025-02-12 21:28:47.083119: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:28:47.083498: Input values: c
2025-02-12 21:28:47.085355: Created input file with content: c

2025-02-12 21:28:47.100020: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0063
2025-02-12 21:28:47.101451: Processing raw output: Enter a character: The Unicode is: u0063
2025-02-12 21:28:47.106974: Final processed output: u0063
2025-02-12 21:28:47.109192: Normalized output: u0063
2025-02-12 21:28:47.109653: Python final output: u0063
2025-02-12 21:28:47.111567: Final execution status: success
2025-02-12 21:28:47.111939: Final processed output: u0063
2025-02-12 21:28:47.114281: Normalized output: u0063
2025-02-12 21:28:47.116319: Normalized output: u0063
2025-02-12 21:28:47.118561: Outputs match completely
2025-02-12 21:28:47.119666: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': 'c', 'detail': 'Student=u0063 vs Teacher=u0063'}
2025-02-12 21:28:47.120253: Processing test case 4
2025-02-12 21:28:47.121419: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:28:47.121783: Input values: d
2025-02-12 21:28:47.123596: Created input file with content: d

2025-02-12 21:28:47.137274: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0064
2025-02-12 21:28:47.138599: Processing raw output: Enter a character: The Unicode is: u0064
2025-02-12 21:28:47.144073: Final processed output: u0064
2025-02-12 21:28:47.146279: Normalized output: u0064
2025-02-12 21:28:47.146728: Python final output: u0064
2025-02-12 21:28:47.149073: Final execution status: success
2025-02-12 21:28:47.149454: Final processed output: u0064
2025-02-12 21:28:47.151749: Normalized output: u0064
2025-02-12 21:28:47.153778: Normalized output: u0064
2025-02-12 21:28:47.156018: Outputs match completely
2025-02-12 21:28:47.157135: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': 'd', 'detail': 'Student=u0064 vs Teacher=u0064'}
2025-02-12 21:28:47.157729: Processing test case 5
2025-02-12 21:28:47.158908: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:28:47.159277: Input values: e
2025-02-12 21:28:47.161151: Created input file with content: e

2025-02-12 21:28:47.174914: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0065
2025-02-12 21:28:47.176261: Processing raw output: Enter a character: The Unicode is: u0065
2025-02-12 21:28:47.181770: Final processed output: u0065
2025-02-12 21:28:47.183945: Normalized output: u0065
2025-02-12 21:28:47.184393: Python final output: u0065
2025-02-12 21:28:47.186281: Final execution status: success
2025-02-12 21:28:47.186665: Final processed output: u0065
2025-02-12 21:28:47.189009: Normalized output: u0065
2025-02-12 21:28:47.191031: Normalized output: u0065
2025-02-12 21:28:47.193321: Outputs match completely
2025-02-12 21:28:47.194474: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': 'e', 'detail': 'Student=u0065 vs Teacher=u0065'}
2025-02-12 21:28:47.195050: Processing test case 6
2025-02-12 21:28:47.196235: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:28:47.196603: Input values: f
2025-02-12 21:28:47.198529: Created input file with content: f

2025-02-12 21:28:47.212210: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0066
2025-02-12 21:28:47.213566: Processing raw output: Enter a character: The Unicode is: u0066
2025-02-12 21:28:47.219469: Final processed output: u0066
2025-02-12 21:28:47.221708: Normalized output: u0066
2025-02-12 21:28:47.222167: Python final output: u0066
2025-02-12 21:28:47.224066: Final execution status: success
2025-02-12 21:28:47.224468: Final processed output: u0066
2025-02-12 21:28:47.226722: Normalized output: u0066
2025-02-12 21:28:47.228840: Normalized output: u0066
2025-02-12 21:28:47.231101: Outputs match completely
2025-02-12 21:28:47.232239: Added comparison result for Case6: {'status': 'PASS', 'teacherinput': 'f', 'detail': 'Student=u0066 vs Teacher=u0066'}
2025-02-12 21:28:47.232804: Processing test case 7
2025-02-12 21:28:47.233969: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:28:47.234341: Input values: g
2025-02-12 21:28:47.236175: Created input file with content: g

2025-02-12 21:28:47.250085: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0067
2025-02-12 21:28:47.251438: Processing raw output: Enter a character: The Unicode is: u0067
2025-02-12 21:28:47.256882: Final processed output: u0067
2025-02-12 21:28:47.259167: Normalized output: u0067
2025-02-12 21:28:47.259613: Python final output: u0067
2025-02-12 21:28:47.261523: Final execution status: success
2025-02-12 21:28:47.261908: Final processed output: u0067
2025-02-12 21:28:47.264217: Normalized output: u0067
2025-02-12 21:28:47.266279: Normalized output: u0067
2025-02-12 21:28:47.268504: Outputs match completely
2025-02-12 21:28:47.269620: Added comparison result for Case7: {'status': 'PASS', 'teacherinput': 'g', 'detail': 'Student=u0067 vs Teacher=u0067'}
2025-02-12 21:28:47.270186: Processing test case 8
2025-02-12 21:28:47.271696: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:28:47.272066: Input values: h
2025-02-12 21:28:47.273921: Created input file with content: h

2025-02-12 21:28:47.287826: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0068
2025-02-12 21:28:47.289180: Processing raw output: Enter a character: The Unicode is: u0068
2025-02-12 21:28:47.294716: Final processed output: u0068
2025-02-12 21:28:47.296890: Normalized output: u0068
2025-02-12 21:28:47.297345: Python final output: u0068
2025-02-12 21:28:47.299316: Final execution status: success
2025-02-12 21:28:47.299729: Final processed output: u0068
2025-02-12 21:28:47.302060: Normalized output: u0068
2025-02-12 21:28:47.304050: Normalized output: u0068
2025-02-12 21:28:47.306328: Outputs match completely
2025-02-12 21:28:47.307457: Added comparison result for Case8: {'status': 'PASS', 'teacherinput': 'h', 'detail': 'Student=u0068 vs Teacher=u0068'}
2025-02-12 21:28:47.308022: Processing test case 9
2025-02-12 21:28:47.309180: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:28:47.309540: Input values: i
2025-02-12 21:28:47.311384: Created input file with content: i

2025-02-12 21:28:47.326889: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0069
2025-02-12 21:28:47.328524: Processing raw output: Enter a character: The Unicode is: u0069
2025-02-12 21:28:47.335601: Final processed output: u0069
2025-02-12 21:28:47.337887: Normalized output: u0069
2025-02-12 21:28:47.338356: Python final output: u0069
2025-02-12 21:28:47.340280: Final execution status: success
2025-02-12 21:28:47.340662: Final processed output: u0069
2025-02-12 21:28:47.343374: Normalized output: u0069
2025-02-12 21:28:47.345534: Normalized output: u0069
2025-02-12 21:28:47.347939: Outputs match completely
2025-02-12 21:28:47.349077: Added comparison result for Case9: {'status': 'PASS', 'teacherinput': 'i', 'detail': 'Student=u0069 vs Teacher=u0069'}
2025-02-12 21:28:47.349649: Processing test case 10
2025-02-12 21:28:47.350950: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:28:47.351348: Input values: j
2025-02-12 21:28:47.353205: Created input file with content: j

2025-02-12 21:28:47.369496: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u006a
2025-02-12 21:28:47.370932: Processing raw output: Enter a character: The Unicode is: u006a
2025-02-12 21:28:47.376653: Final processed output: u006a
2025-02-12 21:28:47.379423: Normalized output: u006a
2025-02-12 21:28:47.380006: Python final output: u006a
2025-02-12 21:28:47.382280: Final execution status: success
2025-02-12 21:28:47.382743: Final processed output: u006a
2025-02-12 21:28:47.385232: Normalized output: u006a
2025-02-12 21:28:47.387228: Normalized output: u006a
2025-02-12 21:28:47.389597: Outputs match completely
2025-02-12 21:28:47.390753: Added comparison result for Case10: {'status': 'PASS', 'teacherinput': 'j', 'detail': 'Student=u006a vs Teacher=u006a'}
2025-02-12 21:28:47.391799: Saved results to comparison_results.json
2025-02-12 21:39:38.554747: Starting test execution
2025-02-12 21:39:38.555843: Processing test case 1
2025-02-12 21:39:38.557062: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:39:38.557960: Input values: a
2025-02-12 21:39:38.560600: Created input file with content: a

2025-02-12 21:39:38.577221: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-12 21:39:38.578663: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-12 21:39:38.585611: Final processed output: u0061
2025-02-12 21:39:38.587946: Normalized output: u0061
2025-02-12 21:39:38.588411: Python final output: u0061
2025-02-12 21:39:38.590481: Final execution status: success
2025-02-12 21:39:38.590913: Final processed output: u0061
2025-02-12 21:39:38.593266: Normalized output: u0061
2025-02-12 21:39:38.595435: Normalized output: u0061
2025-02-12 21:39:38.597755: Outputs match completely
2025-02-12 21:39:38.598896: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': 'a', 'detail': 'Student=u0061 vs Teacher=u0061'}
2025-02-12 21:39:38.599501: Processing test case 2
2025-02-12 21:39:38.600743: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:39:38.601130: Input values: b
2025-02-12 21:39:38.603311: Created input file with content: b

2025-02-12 21:39:38.617985: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0062
2025-02-12 21:39:38.619326: Processing raw output: Enter a character: The Unicode is: u0062
2025-02-12 21:39:38.624938: Final processed output: u0062
2025-02-12 21:39:38.627227: Normalized output: u0062
2025-02-12 21:39:38.627679: Python final output: u0062
2025-02-12 21:39:38.629579: Final execution status: success
2025-02-12 21:39:38.629960: Final processed output: u0062
2025-02-12 21:39:38.632635: Normalized output: u0062
2025-02-12 21:39:38.634704: Normalized output: u0062
2025-02-12 21:39:38.643061: Outputs match completely
2025-02-12 21:39:38.644251: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': 'b', 'detail': 'Student=u0062 vs Teacher=u0062'}
2025-02-12 21:39:38.644862: Processing test case 3
2025-02-12 21:39:38.646052: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:39:38.646419: Input values: c
2025-02-12 21:39:38.648676: Created input file with content: c

2025-02-12 21:39:38.663280: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0063
2025-02-12 21:39:38.664695: Processing raw output: Enter a character: The Unicode is: u0063
2025-02-12 21:39:38.670201: Final processed output: u0063
2025-02-12 21:39:38.672466: Normalized output: u0063
2025-02-12 21:39:38.672921: Python final output: u0063
2025-02-12 21:39:38.674870: Final execution status: success
2025-02-12 21:39:38.675260: Final processed output: u0063
2025-02-12 21:39:38.677648: Normalized output: u0063
2025-02-12 21:39:38.679694: Normalized output: u0063
2025-02-12 21:39:38.681934: Outputs match completely
2025-02-12 21:39:38.683049: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': 'c', 'detail': 'Student=u0063 vs Teacher=u0063'}
2025-02-12 21:39:38.683636: Processing test case 4
2025-02-12 21:39:38.684806: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:39:38.685179: Input values: d
2025-02-12 21:39:38.687042: Created input file with content: d

2025-02-12 21:39:38.700740: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0064
2025-02-12 21:39:38.702039: Processing raw output: Enter a character: The Unicode is: u0064
2025-02-12 21:39:38.707503: Final processed output: u0064
2025-02-12 21:39:38.709691: Normalized output: u0064
2025-02-12 21:39:38.710156: Python final output: u0064
2025-02-12 21:39:38.712480: Final execution status: success
2025-02-12 21:39:38.712891: Final processed output: u0064
2025-02-12 21:39:38.715219: Normalized output: u0064
2025-02-12 21:39:38.717233: Normalized output: u0064
2025-02-12 21:39:38.719527: Outputs match completely
2025-02-12 21:39:38.720675: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': 'd', 'detail': 'Student=u0064 vs Teacher=u0064'}
2025-02-12 21:39:38.721265: Processing test case 5
2025-02-12 21:39:38.722481: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:39:38.722841: Input values: e
2025-02-12 21:39:38.724835: Created input file with content: e

2025-02-12 21:39:38.738955: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0065
2025-02-12 21:39:38.740320: Processing raw output: Enter a character: The Unicode is: u0065
2025-02-12 21:39:38.745872: Final processed output: u0065
2025-02-12 21:39:38.748048: Normalized output: u0065
2025-02-12 21:39:38.748503: Python final output: u0065
2025-02-12 21:39:38.750380: Final execution status: success
2025-02-12 21:39:38.750757: Final processed output: u0065
2025-02-12 21:39:38.753224: Normalized output: u0065
2025-02-12 21:39:38.755714: Normalized output: u0065
2025-02-12 21:39:38.758193: Outputs match completely
2025-02-12 21:39:38.759438: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': 'e', 'detail': 'Student=u0065 vs Teacher=u0065'}
2025-02-12 21:39:38.760062: Processing test case 6
2025-02-12 21:39:38.761323: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:39:38.761913: Input values: f
2025-02-12 21:39:38.764833: Created input file with content: f

2025-02-12 21:39:38.781659: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0066
2025-02-12 21:39:38.783159: Processing raw output: Enter a character: The Unicode is: u0066
2025-02-12 21:39:38.789421: Final processed output: u0066
2025-02-12 21:39:38.792029: Normalized output: u0066
2025-02-12 21:39:38.792572: Python final output: u0066
2025-02-12 21:39:38.794890: Final execution status: success
2025-02-12 21:39:38.795339: Final processed output: u0066
2025-02-12 21:39:38.797656: Normalized output: u0066
2025-02-12 21:39:38.799762: Normalized output: u0066
2025-02-12 21:39:38.802108: Outputs match completely
2025-02-12 21:39:38.803308: Added comparison result for Case6: {'status': 'PASS', 'teacherinput': 'f', 'detail': 'Student=u0066 vs Teacher=u0066'}
2025-02-12 21:39:38.803898: Processing test case 7
2025-02-12 21:39:38.805141: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:39:38.805659: Input values: g
2025-02-12 21:39:38.807940: Created input file with content: g

2025-02-12 21:39:38.825032: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0067
2025-02-12 21:39:38.826649: Processing raw output: Enter a character: The Unicode is: u0067
2025-02-12 21:39:38.832854: Final processed output: u0067
2025-02-12 21:39:38.835294: Normalized output: u0067
2025-02-12 21:39:38.835770: Python final output: u0067
2025-02-12 21:39:38.837692: Final execution status: success
2025-02-12 21:39:38.838127: Final processed output: u0067
2025-02-12 21:39:38.841240: Normalized output: u0067
2025-02-12 21:39:38.844239: Normalized output: u0067
2025-02-12 21:39:38.846670: Outputs match completely
2025-02-12 21:39:38.847835: Added comparison result for Case7: {'status': 'PASS', 'teacherinput': 'g', 'detail': 'Student=u0067 vs Teacher=u0067'}
2025-02-12 21:39:38.848448: Processing test case 8
2025-02-12 21:39:38.850026: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:39:38.850429: Input values: h
2025-02-12 21:39:38.852407: Created input file with content: h

2025-02-12 21:39:38.867966: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0068
2025-02-12 21:39:38.869431: Processing raw output: Enter a character: The Unicode is: u0068
2025-02-12 21:39:38.875595: Final processed output: u0068
2025-02-12 21:39:38.877883: Normalized output: u0068
2025-02-12 21:39:38.878351: Python final output: u0068
2025-02-12 21:39:38.880254: Final execution status: success
2025-02-12 21:39:38.880674: Final processed output: u0068
2025-02-12 21:39:38.883000: Normalized output: u0068
2025-02-12 21:39:38.885072: Normalized output: u0068
2025-02-12 21:39:38.887339: Outputs match completely
2025-02-12 21:39:38.888561: Added comparison result for Case8: {'status': 'PASS', 'teacherinput': 'h', 'detail': 'Student=u0068 vs Teacher=u0068'}
2025-02-12 21:39:38.889181: Processing test case 9
2025-02-12 21:39:38.890508: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:39:38.890872: Input values: i
2025-02-12 21:39:38.892740: Created input file with content: i

2025-02-12 21:39:38.908163: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0069
2025-02-12 21:39:38.909492: Processing raw output: Enter a character: The Unicode is: u0069
2025-02-12 21:39:38.915066: Final processed output: u0069
2025-02-12 21:39:38.917255: Normalized output: u0069
2025-02-12 21:39:38.917720: Python final output: u0069
2025-02-12 21:39:38.919652: Final execution status: success
2025-02-12 21:39:38.920030: Final processed output: u0069
2025-02-12 21:39:38.922942: Normalized output: u0069
2025-02-12 21:39:38.925055: Normalized output: u0069
2025-02-12 21:39:38.927319: Outputs match completely
2025-02-12 21:39:38.928455: Added comparison result for Case9: {'status': 'PASS', 'teacherinput': 'i', 'detail': 'Student=u0069 vs Teacher=u0069'}
2025-02-12 21:39:38.929054: Processing test case 10
2025-02-12 21:39:38.930248: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:39:38.930611: Input values: j
2025-02-12 21:39:38.932528: Created input file with content: j

2025-02-12 21:39:38.947643: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u006a
2025-02-12 21:39:38.949088: Processing raw output: Enter a character: The Unicode is: u006a
2025-02-12 21:39:38.954676: Final processed output: u006a
2025-02-12 21:39:38.957165: Normalized output: u006a
2025-02-12 21:39:38.957679: Python final output: u006a
2025-02-12 21:39:38.959609: Final execution status: success
2025-02-12 21:39:38.959998: Final processed output: u006a
2025-02-12 21:39:38.962497: Normalized output: u006a
2025-02-12 21:39:38.964513: Normalized output: u006a
2025-02-12 21:39:38.966829: Outputs match completely
2025-02-12 21:39:38.967971: Added comparison result for Case10: {'status': 'PASS', 'teacherinput': 'j', 'detail': 'Student=u006a vs Teacher=u006a'}
2025-02-12 21:39:38.969083: Saved results to comparison_results.json
2025-02-12 21:45:09.523736: Starting test execution
2025-02-12 21:45:09.524982: Processing test case 1
2025-02-12 21:45:09.526296: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:45:09.527335: Input values: a
2025-02-12 21:45:09.529518: Created input file with content: a

2025-02-12 21:45:09.546543: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-12 21:45:09.547974: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-12 21:45:09.554892: Final processed output: u0061
2025-02-12 21:45:09.557210: Normalized output: u0061
2025-02-12 21:45:09.557751: Python final output: u0061
2025-02-12 21:45:09.559808: Final execution status: success
2025-02-12 21:45:09.560210: Final processed output: u0061
2025-02-12 21:45:09.562636: Normalized output: u0061
2025-02-12 21:45:09.564784: Normalized output: u0061
2025-02-12 21:45:09.567054: Outputs match completely
2025-02-12 21:45:09.568210: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': 'a', 'detail': 'Student=u0061 vs Teacher=u0061'}
2025-02-12 21:45:09.568820: Processing test case 2
2025-02-12 21:45:09.570034: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:45:09.570440: Input values: b
2025-02-12 21:45:09.572347: Created input file with content: b

2025-02-12 21:45:09.586872: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0062
2025-02-12 21:45:09.588253: Processing raw output: Enter a character: The Unicode is: u0062
2025-02-12 21:45:09.593783: Final processed output: u0062
2025-02-12 21:45:09.596027: Normalized output: u0062
2025-02-12 21:45:09.596466: Python final output: u0062
2025-02-12 21:45:09.598350: Final execution status: success
2025-02-12 21:45:09.598736: Final processed output: u0062
2025-02-12 21:45:09.601402: Normalized output: u0062
2025-02-12 21:45:09.603447: Normalized output: u0062
2025-02-12 21:45:09.611716: Outputs match completely
2025-02-12 21:45:09.612901: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': 'b', 'detail': 'Student=u0062 vs Teacher=u0062'}
2025-02-12 21:45:09.613503: Processing test case 3
2025-02-12 21:45:09.614690: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:45:09.615066: Input values: c
2025-02-12 21:45:09.616923: Created input file with content: c

2025-02-12 21:45:09.631310: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0063
2025-02-12 21:45:09.632689: Processing raw output: Enter a character: The Unicode is: u0063
2025-02-12 21:45:09.638300: Final processed output: u0063
2025-02-12 21:45:09.641927: Normalized output: u0063
2025-02-12 21:45:09.642464: Python final output: u0063
2025-02-12 21:45:09.644467: Final execution status: success
2025-02-12 21:45:09.644869: Final processed output: u0063
2025-02-12 21:45:09.647260: Normalized output: u0063
2025-02-12 21:45:09.649284: Normalized output: u0063
2025-02-12 21:45:09.651528: Outputs match completely
2025-02-12 21:45:09.652640: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': 'c', 'detail': 'Student=u0063 vs Teacher=u0063'}
2025-02-12 21:45:09.653234: Processing test case 4
2025-02-12 21:45:09.654484: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:45:09.654855: Input values: d
2025-02-12 21:45:09.656943: Created input file with content: d

2025-02-12 21:45:09.671649: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0064
2025-02-12 21:45:09.673000: Processing raw output: Enter a character: The Unicode is: u0064
2025-02-12 21:45:09.678508: Final processed output: u0064
2025-02-12 21:45:09.680795: Normalized output: u0064
2025-02-12 21:45:09.681240: Python final output: u0064
2025-02-12 21:45:09.683548: Final execution status: success
2025-02-12 21:45:09.683960: Final processed output: u0064
2025-02-12 21:45:09.686585: Normalized output: u0064
2025-02-12 21:45:09.688868: Normalized output: u0064
2025-02-12 21:45:09.691423: Outputs match completely
2025-02-12 21:45:09.692586: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': 'd', 'detail': 'Student=u0064 vs Teacher=u0064'}
2025-02-12 21:45:09.693198: Processing test case 5
2025-02-12 21:45:09.694410: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:45:09.694798: Input values: e
2025-02-12 21:45:09.696707: Created input file with content: e

2025-02-12 21:45:09.710756: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0065
2025-02-12 21:45:09.712115: Processing raw output: Enter a character: The Unicode is: u0065
2025-02-12 21:45:09.717591: Final processed output: u0065
2025-02-12 21:45:09.719852: Normalized output: u0065
2025-02-12 21:45:09.720316: Python final output: u0065
2025-02-12 21:45:09.722211: Final execution status: success
2025-02-12 21:45:09.722595: Final processed output: u0065
2025-02-12 21:45:09.724953: Normalized output: u0065
2025-02-12 21:45:09.727024: Normalized output: u0065
2025-02-12 21:45:09.729268: Outputs match completely
2025-02-12 21:45:09.730385: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': 'e', 'detail': 'Student=u0065 vs Teacher=u0065'}
2025-02-12 21:45:09.730961: Processing test case 6
2025-02-12 21:45:09.732129: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:45:09.732500: Input values: f
2025-02-12 21:45:09.734522: Created input file with content: f

2025-02-12 21:45:09.748387: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0066
2025-02-12 21:45:09.749742: Processing raw output: Enter a character: The Unicode is: u0066
2025-02-12 21:45:09.756244: Final processed output: u0066
2025-02-12 21:45:09.758756: Normalized output: u0066
2025-02-12 21:45:09.759249: Python final output: u0066
2025-02-12 21:45:09.761317: Final execution status: success
2025-02-12 21:45:09.761756: Final processed output: u0066
2025-02-12 21:45:09.764164: Normalized output: u0066
2025-02-12 21:45:09.766973: Normalized output: u0066
2025-02-12 21:45:09.769391: Outputs match completely
2025-02-12 21:45:09.770604: Added comparison result for Case6: {'status': 'PASS', 'teacherinput': 'f', 'detail': 'Student=u0066 vs Teacher=u0066'}
2025-02-12 21:45:09.771315: Processing test case 7
2025-02-12 21:45:09.772555: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:45:09.772927: Input values: g
2025-02-12 21:45:09.775156: Created input file with content: g

2025-02-12 21:45:09.790522: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0067
2025-02-12 21:45:09.791955: Processing raw output: Enter a character: The Unicode is: u0067
2025-02-12 21:45:09.797736: Final processed output: u0067
2025-02-12 21:45:09.800145: Normalized output: u0067
2025-02-12 21:45:09.800615: Python final output: u0067
2025-02-12 21:45:09.802631: Final execution status: success
2025-02-12 21:45:09.803050: Final processed output: u0067
2025-02-12 21:45:09.806104: Normalized output: u0067
2025-02-12 21:45:09.808341: Normalized output: u0067
2025-02-12 21:45:09.810790: Outputs match completely
2025-02-12 21:45:09.811987: Added comparison result for Case7: {'status': 'PASS', 'teacherinput': 'g', 'detail': 'Student=u0067 vs Teacher=u0067'}
2025-02-12 21:45:09.812594: Processing test case 8
2025-02-12 21:45:09.814284: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:45:09.814684: Input values: h
2025-02-12 21:45:09.816634: Created input file with content: h

2025-02-12 21:45:09.833191: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0068
2025-02-12 21:45:09.834661: Processing raw output: Enter a character: The Unicode is: u0068
2025-02-12 21:45:09.841109: Final processed output: u0068
2025-02-12 21:45:09.843558: Normalized output: u0068
2025-02-12 21:45:09.844058: Python final output: u0068
2025-02-12 21:45:09.845966: Final execution status: success
2025-02-12 21:45:09.846382: Final processed output: u0068
2025-02-12 21:45:09.848758: Normalized output: u0068
2025-02-12 21:45:09.850784: Normalized output: u0068
2025-02-12 21:45:09.853115: Outputs match completely
2025-02-12 21:45:09.854486: Added comparison result for Case8: {'status': 'PASS', 'teacherinput': 'h', 'detail': 'Student=u0068 vs Teacher=u0068'}
2025-02-12 21:45:09.855175: Processing test case 9
2025-02-12 21:45:09.856958: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:45:09.857437: Input values: i
2025-02-12 21:45:09.859556: Created input file with content: i

2025-02-12 21:45:09.875959: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0069
2025-02-12 21:45:09.877329: Processing raw output: Enter a character: The Unicode is: u0069
2025-02-12 21:45:09.882897: Final processed output: u0069
2025-02-12 21:45:09.885165: Normalized output: u0069
2025-02-12 21:45:09.885643: Python final output: u0069
2025-02-12 21:45:09.887962: Final execution status: success
2025-02-12 21:45:09.888478: Final processed output: u0069
2025-02-12 21:45:09.891672: Normalized output: u0069
2025-02-12 21:45:09.893963: Normalized output: u0069
2025-02-12 21:45:09.896519: Outputs match completely
2025-02-12 21:45:09.897778: Added comparison result for Case9: {'status': 'PASS', 'teacherinput': 'i', 'detail': 'Student=u0069 vs Teacher=u0069'}
2025-02-12 21:45:09.898402: Processing test case 10
2025-02-12 21:45:09.899870: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:45:09.900294: Input values: j
2025-02-12 21:45:09.902207: Created input file with content: j

2025-02-12 21:45:09.917806: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u006a
2025-02-12 21:45:09.919188: Processing raw output: Enter a character: The Unicode is: u006a
2025-02-12 21:45:09.925580: Final processed output: u006a
2025-02-12 21:45:09.927866: Normalized output: u006a
2025-02-12 21:45:09.928341: Python final output: u006a
2025-02-12 21:45:09.930281: Final execution status: success
2025-02-12 21:45:09.930662: Final processed output: u006a
2025-02-12 21:45:09.933083: Normalized output: u006a
2025-02-12 21:45:09.935119: Normalized output: u006a
2025-02-12 21:45:09.937598: Outputs match completely
2025-02-12 21:45:09.938822: Added comparison result for Case10: {'status': 'PASS', 'teacherinput': 'j', 'detail': 'Student=u006a vs Teacher=u006a'}
2025-02-12 21:45:09.939925: Saved results to comparison_results.json
2025-02-12 21:45:21.586425: Starting test execution
2025-02-12 21:45:21.587543: Processing test case 1
2025-02-12 21:45:21.588998: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:45:21.590261: Input values: a
2025-02-12 21:45:21.592709: Created input file with content: a

2025-02-12 21:45:21.609585: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-12 21:45:21.611038: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-12 21:45:21.618270: Final processed output: u0061
2025-02-12 21:45:21.620728: Normalized output: u0061
2025-02-12 21:45:21.621189: Python final output: u0061
2025-02-12 21:45:21.623148: Final execution status: success
2025-02-12 21:45:21.623550: Final processed output: u0061
2025-02-12 21:45:21.625843: Normalized output: u0061
2025-02-12 21:45:21.627988: Normalized output: u0061
2025-02-12 21:45:21.630271: Outputs match completely
2025-02-12 21:45:21.631410: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': 'a', 'detail': 'Student=u0061 vs Teacher=u0061'}
2025-02-12 21:45:21.631993: Processing test case 2
2025-02-12 21:45:21.633216: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:45:21.633604: Input values: b
2025-02-12 21:45:21.635449: Created input file with content: b

2025-02-12 21:45:21.649918: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0062
2025-02-12 21:45:21.651287: Processing raw output: Enter a character: The Unicode is: u0062
2025-02-12 21:45:21.656890: Final processed output: u0062
2025-02-12 21:45:21.659128: Normalized output: u0062
2025-02-12 21:45:21.659577: Python final output: u0062
2025-02-12 21:45:21.661458: Final execution status: success
2025-02-12 21:45:21.661841: Final processed output: u0062
2025-02-12 21:45:21.664499: Normalized output: u0062
2025-02-12 21:45:21.666554: Normalized output: u0062
2025-02-12 21:45:21.674823: Outputs match completely
2025-02-12 21:45:21.676006: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': 'b', 'detail': 'Student=u0062 vs Teacher=u0062'}
2025-02-12 21:45:21.676605: Processing test case 3
2025-02-12 21:45:21.677764: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:45:21.678150: Input values: c
2025-02-12 21:45:21.680093: Created input file with content: c

2025-02-12 21:45:21.694649: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0063
2025-02-12 21:45:21.696009: Processing raw output: Enter a character: The Unicode is: u0063
2025-02-12 21:45:21.701635: Final processed output: u0063
2025-02-12 21:45:21.703898: Normalized output: u0063
2025-02-12 21:45:21.704344: Python final output: u0063
2025-02-12 21:45:21.706268: Final execution status: success
2025-02-12 21:45:21.706668: Final processed output: u0063
2025-02-12 21:45:21.709147: Normalized output: u0063
2025-02-12 21:45:21.711173: Normalized output: u0063
2025-02-12 21:45:21.713447: Outputs match completely
2025-02-12 21:45:21.714589: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': 'c', 'detail': 'Student=u0063 vs Teacher=u0063'}
2025-02-12 21:45:21.715180: Processing test case 4
2025-02-12 21:45:21.716364: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:45:21.716737: Input values: d
2025-02-12 21:45:21.718595: Created input file with content: d

2025-02-12 21:45:21.734732: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0064
2025-02-12 21:45:21.736287: Processing raw output: Enter a character: The Unicode is: u0064
2025-02-12 21:45:21.743659: Final processed output: u0064
2025-02-12 21:45:21.746063: Normalized output: u0064
2025-02-12 21:45:21.746539: Python final output: u0064
2025-02-12 21:45:21.748893: Final execution status: success
2025-02-12 21:45:21.749275: Final processed output: u0064
2025-02-12 21:45:21.751598: Normalized output: u0064
2025-02-12 21:45:21.753591: Normalized output: u0064
2025-02-12 21:45:21.755984: Outputs match completely
2025-02-12 21:45:21.757149: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': 'd', 'detail': 'Student=u0064 vs Teacher=u0064'}
2025-02-12 21:45:21.757764: Processing test case 5
2025-02-12 21:45:21.759045: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 21:45:21.759545: Input values: e
2025-02-12 21:45:21.761557: Created input file with content: e

2025-02-12 21:45:21.777890: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0065
2025-02-12 21:45:21.779918: Processing raw output: Enter a character: The Unicode is: u0065
2025-02-12 21:45:21.786367: Final processed output: u0065
2025-02-12 21:45:21.789396: Normalized output: u0065
2025-02-12 21:45:21.789936: Python final output: u0065
2025-02-12 21:45:21.792042: Final execution status: success
2025-02-12 21:45:21.792459: Final processed output: u0065
2025-02-12 21:45:21.795337: Normalized output: u0065
2025-02-12 21:45:21.797600: Normalized output: u0065
2025-02-12 21:45:21.800014: Outputs match completely
2025-02-12 21:45:21.801181: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': 'e', 'detail': 'Student=u0065 vs Teacher=u0065'}
2025-02-12 21:45:21.802233: Saved results to comparison_results.json
2025-02-12 22:00:51.652183: Starting test execution
2025-02-12 22:00:51.653574: Processing test case 1
2025-02-12 22:00:51.655190: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 22:00:51.656458: Input values: a
2025-02-12 22:00:51.658790: Created input file with content: a

2025-02-12 22:00:51.679813: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0061
2025-02-12 22:00:51.681366: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-12 22:00:51.688675: Final processed output: u0061
2025-02-12 22:00:51.691085: Normalized output: u0061
2025-02-12 22:00:51.691542: Python final output: u0061
2025-02-12 22:00:51.693527: Final execution status: success
2025-02-12 22:00:51.693904: Final processed output: u0061
2025-02-12 22:00:51.696213: Normalized output: u0061
2025-02-12 22:00:51.698326: Normalized output: u0061
2025-02-12 22:00:51.700599: Outputs match completely
2025-02-12 22:00:51.701748: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': 'a', 'detail': 'Student=u0061 vs Teacher=u0061'}
2025-02-12 22:00:51.702334: Processing test case 2
2025-02-12 22:00:51.703508: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 22:00:51.703896: Input values: b
2025-02-12 22:00:51.706051: Created input file with content: b

2025-02-12 22:00:51.720860: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0062
2025-02-12 22:00:51.722256: Processing raw output: Enter a character: The Unicode is: u0062
2025-02-12 22:00:51.727896: Final processed output: u0062
2025-02-12 22:00:51.730086: Normalized output: u0062
2025-02-12 22:00:51.730524: Python final output: u0062
2025-02-12 22:00:51.732437: Final execution status: success
2025-02-12 22:00:51.732835: Final processed output: u0062
2025-02-12 22:00:51.735480: Normalized output: u0062
2025-02-12 22:00:51.737537: Normalized output: u0062
2025-02-12 22:00:51.746003: Outputs match completely
2025-02-12 22:00:51.747180: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': 'b', 'detail': 'Student=u0062 vs Teacher=u0062'}
2025-02-12 22:00:51.747797: Processing test case 3
2025-02-12 22:00:51.748971: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 22:00:51.749332: Input values: c
2025-02-12 22:00:51.751168: Created input file with content: c

2025-02-12 22:00:51.765782: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0063
2025-02-12 22:00:51.767121: Processing raw output: Enter a character: The Unicode is: u0063
2025-02-12 22:00:51.772881: Final processed output: u0063
2025-02-12 22:00:51.775172: Normalized output: u0063
2025-02-12 22:00:51.775624: Python final output: u0063
2025-02-12 22:00:51.777538: Final execution status: success
2025-02-12 22:00:51.777947: Final processed output: u0063
2025-02-12 22:00:51.780306: Normalized output: u0063
2025-02-12 22:00:51.782330: Normalized output: u0063
2025-02-12 22:00:51.784585: Outputs match completely
2025-02-12 22:00:51.785693: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': 'c', 'detail': 'Student=u0063 vs Teacher=u0063'}
2025-02-12 22:00:51.786270: Processing test case 4
2025-02-12 22:00:51.787464: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 22:00:51.787826: Input values: d
2025-02-12 22:00:51.789783: Created input file with content: d

2025-02-12 22:00:51.803743: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0064
2025-02-12 22:00:51.805124: Processing raw output: Enter a character: The Unicode is: u0064
2025-02-12 22:00:51.810764: Final processed output: u0064
2025-02-12 22:00:51.813029: Normalized output: u0064
2025-02-12 22:00:51.813492: Python final output: u0064
2025-02-12 22:00:51.815853: Final execution status: success
2025-02-12 22:00:51.816243: Final processed output: u0064
2025-02-12 22:00:51.818564: Normalized output: u0064
2025-02-12 22:00:51.820602: Normalized output: u0064
2025-02-12 22:00:51.822934: Outputs match completely
2025-02-12 22:00:51.824074: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': 'd', 'detail': 'Student=u0064 vs Teacher=u0064'}
2025-02-12 22:00:51.824660: Processing test case 5
2025-02-12 22:00:51.825847: Executing code in python:
x = input("Enter a character: ")
print("The Unicode is: u%04x" %ord(x))
2025-02-12 22:00:51.826210: Input values: e
2025-02-12 22:00:51.828048: Created input file with content: e

2025-02-12 22:00:51.841991: Python execution with input - RC: 0, Output:
Enter a character: The Unicode is: u0065
2025-02-12 22:00:51.843345: Processing raw output: Enter a character: The Unicode is: u0065
2025-02-12 22:00:51.848771: Final processed output: u0065
2025-02-12 22:00:51.850939: Normalized output: u0065
2025-02-12 22:00:51.851386: Python final output: u0065
2025-02-12 22:00:51.853258: Final execution status: success
2025-02-12 22:00:51.853627: Final processed output: u0065
2025-02-12 22:00:51.856346: Normalized output: u0065
2025-02-12 22:00:51.858520: Normalized output: u0065
2025-02-12 22:00:51.860768: Outputs match completely
2025-02-12 22:00:51.861878: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': 'e', 'detail': 'Student=u0065 vs Teacher=u0065'}
2025-02-12 22:00:51.862868: Saved results to comparison_results.json
2025-02-12 23:20:35.752298: Starting test execution
2025-02-12 23:20:35.753493: Processing test case 1
2025-02-12 23:20:35.755578: Executing code in javascript:
const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

rl.question('Enter a character: ', (char) => {
    const unicode = char.charCodeAt(0).toString(16).padStart(4, '0');
    console.log(`The Unicode is: u${unicode}`);
    rl.close();
});
2025-02-12 23:20:35.756093: Input values: a
2025-02-12 23:20:35.758462: Created input file with content: a

2025-02-12 23:20:35.868600: JavaScript execution output:
Enter a character: The Unicode is: u0061
2025-02-12 23:20:35.870007: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-12 23:20:35.877023: Final processed output: u0061
2025-02-12 23:20:35.879390: Normalized output: u0061
2025-02-12 23:20:35.879864: JavaScript final output: u0061
2025-02-12 23:20:35.880433: Final execution status: success
2025-02-12 23:20:35.880895: Final processed output: u0061
2025-02-12 23:20:35.883210: Normalized output: u0061
2025-02-12 23:20:35.885311: Normalized output: u0061
2025-02-12 23:20:35.887610: Outputs match completely
2025-02-12 23:20:35.888747: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': 'a', 'detail': 'Student=u0061 vs Teacher=u0061'}
2025-02-12 23:20:35.889345: Processing test case 2
2025-02-12 23:20:35.890574: Executing code in javascript:
const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

rl.question('Enter a character: ', (char) => {
    const unicode = char.charCodeAt(0).toString(16).padStart(4, '0');
    console.log(`The Unicode is: u${unicode}`);
    rl.close();
});
2025-02-12 23:20:35.890950: Input values: b
2025-02-12 23:20:35.892835: Created input file with content: b

2025-02-12 23:20:35.925799: JavaScript execution output:
Enter a character: The Unicode is: u0062
2025-02-12 23:20:35.927583: Processing raw output: Enter a character: The Unicode is: u0062
2025-02-12 23:20:35.933521: Final processed output: u0062
2025-02-12 23:20:35.935857: Normalized output: u0062
2025-02-12 23:20:35.936347: JavaScript final output: u0062
2025-02-12 23:20:35.936929: Final execution status: success
2025-02-12 23:20:35.937402: Final processed output: u0062
2025-02-12 23:20:35.939666: Normalized output: u0062
2025-02-12 23:20:35.942223: Normalized output: u0062
2025-02-12 23:20:35.951499: Outputs match completely
2025-02-12 23:20:35.952765: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': 'b', 'detail': 'Student=u0062 vs Teacher=u0062'}
2025-02-12 23:20:35.953412: Processing test case 3
2025-02-12 23:20:35.954679: Executing code in javascript:
const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

rl.question('Enter a character: ', (char) => {
    const unicode = char.charCodeAt(0).toString(16).padStart(4, '0');
    console.log(`The Unicode is: u${unicode}`);
    rl.close();
});
2025-02-12 23:20:35.955064: Input values: c
2025-02-12 23:20:35.956943: Created input file with content: c

2025-02-12 23:20:35.987982: JavaScript execution output:
Enter a character: The Unicode is: u0063
2025-02-12 23:20:35.989356: Processing raw output: Enter a character: The Unicode is: u0063
2025-02-12 23:20:35.995031: Final processed output: u0063
2025-02-12 23:20:35.997269: Normalized output: u0063
2025-02-12 23:20:35.997714: JavaScript final output: u0063
2025-02-12 23:20:35.998375: Final execution status: success
2025-02-12 23:20:35.998758: Final processed output: u0063
2025-02-12 23:20:36.001211: Normalized output: u0063
2025-02-12 23:20:36.003299: Normalized output: u0063
2025-02-12 23:20:36.005682: Outputs match completely
2025-02-12 23:20:36.006793: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': 'c', 'detail': 'Student=u0063 vs Teacher=u0063'}
2025-02-12 23:20:36.007407: Processing test case 4
2025-02-12 23:20:36.008694: Executing code in javascript:
const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

rl.question('Enter a character: ', (char) => {
    const unicode = char.charCodeAt(0).toString(16).padStart(4, '0');
    console.log(`The Unicode is: u${unicode}`);
    rl.close();
});
2025-02-12 23:20:36.009079: Input values: d
2025-02-12 23:20:36.011016: Created input file with content: d

2025-02-12 23:20:36.040994: JavaScript execution output:
Enter a character: The Unicode is: u0064
2025-02-12 23:20:36.042375: Processing raw output: Enter a character: The Unicode is: u0064
2025-02-12 23:20:36.048151: Final processed output: u0064
2025-02-12 23:20:36.050406: Normalized output: u0064
2025-02-12 23:20:36.050860: JavaScript final output: u0064
2025-02-12 23:20:36.051427: Final execution status: success
2025-02-12 23:20:36.052257: Final processed output: u0064
2025-02-12 23:20:36.054566: Normalized output: u0064
2025-02-12 23:20:36.056747: Normalized output: u0064
2025-02-12 23:20:36.059083: Outputs match completely
2025-02-12 23:20:36.060225: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': 'd', 'detail': 'Student=u0064 vs Teacher=u0064'}
2025-02-12 23:20:36.060833: Processing test case 5
2025-02-12 23:20:36.062148: Executing code in javascript:
const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

rl.question('Enter a character: ', (char) => {
    const unicode = char.charCodeAt(0).toString(16).padStart(4, '0');
    console.log(`The Unicode is: u${unicode}`);
    rl.close();
});
2025-02-12 23:20:36.062577: Input values: e
2025-02-12 23:20:36.064529: Created input file with content: e

2025-02-12 23:20:36.095232: JavaScript execution output:
Enter a character: The Unicode is: u0065
2025-02-12 23:20:36.096665: Processing raw output: Enter a character: The Unicode is: u0065
2025-02-12 23:20:36.102202: Final processed output: u0065
2025-02-12 23:20:36.104428: Normalized output: u0065
2025-02-12 23:20:36.104867: JavaScript final output: u0065
2025-02-12 23:20:36.105431: Final execution status: success
2025-02-12 23:20:36.105820: Final processed output: u0065
2025-02-12 23:20:36.108160: Normalized output: u0065
2025-02-12 23:20:36.110237: Normalized output: u0065
2025-02-12 23:20:36.112679: Outputs match completely
2025-02-12 23:20:36.113877: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': 'e', 'detail': 'Student=u0065 vs Teacher=u0065'}
2025-02-12 23:20:36.115253: Saved results to comparison_results.json
2025-02-12 23:20:45.933874: Starting test execution
2025-02-12 23:20:45.935048: Processing test case 1
2025-02-12 23:20:45.937374: Executing code in javascript:
const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

rl.question('Enter a character: ', (char) => {
    const unicode = char.charCodeAt(0).toString(16).padStart(4, '0');
    console.log(`The Unicode is: u${unicode}`);
    rl.close();
});
2025-02-12 23:20:45.937928: Input values: a
2025-02-12 23:20:45.940449: Created input file with content: a

2025-02-12 23:20:45.974811: JavaScript execution output:
Enter a character: The Unicode is: u0061
2025-02-12 23:20:45.976265: Processing raw output: Enter a character: The Unicode is: u0061
2025-02-12 23:20:45.983910: Final processed output: u0061
2025-02-12 23:20:45.986327: Normalized output: u0061
2025-02-12 23:20:45.986818: JavaScript final output: u0061
2025-02-12 23:20:45.987423: Final execution status: success
2025-02-12 23:20:45.987968: Final processed output: u0061
2025-02-12 23:20:45.990442: Normalized output: u0061
2025-02-12 23:20:45.992703: Normalized output: u0061
2025-02-12 23:20:45.995116: Outputs match completely
2025-02-12 23:20:45.996424: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': 'a', 'detail': 'Student=u0061 vs Teacher=u0061'}
2025-02-12 23:20:45.997105: Processing test case 2
2025-02-12 23:20:45.998445: Executing code in javascript:
const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

rl.question('Enter a character: ', (char) => {
    const unicode = char.charCodeAt(0).toString(16).padStart(4, '0');
    console.log(`The Unicode is: u${unicode}`);
    rl.close();
});
2025-02-12 23:20:45.998831: Input values: b
2025-02-12 23:20:46.000794: Created input file with content: b

2025-02-12 23:20:46.032352: JavaScript execution output:
Enter a character: The Unicode is: u0062
2025-02-12 23:20:46.033723: Processing raw output: Enter a character: The Unicode is: u0062
2025-02-12 23:20:46.039504: Final processed output: u0062
2025-02-12 23:20:46.041765: Normalized output: u0062
2025-02-12 23:20:46.042235: JavaScript final output: u0062
2025-02-12 23:20:46.042851: Final execution status: success
2025-02-12 23:20:46.043337: Final processed output: u0062
2025-02-12 23:20:46.045897: Normalized output: u0062
2025-02-12 23:20:46.048597: Normalized output: u0062
2025-02-12 23:20:46.057356: Outputs match completely
2025-02-12 23:20:46.058604: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': 'b', 'detail': 'Student=u0062 vs Teacher=u0062'}
2025-02-12 23:20:46.059243: Processing test case 3
2025-02-12 23:20:46.060553: Executing code in javascript:
const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

rl.question('Enter a character: ', (char) => {
    const unicode = char.charCodeAt(0).toString(16).padStart(4, '0');
    console.log(`The Unicode is: u${unicode}`);
    rl.close();
});
2025-02-12 23:20:46.060949: Input values: c
2025-02-12 23:20:46.062952: Created input file with content: c

2025-02-12 23:20:46.095114: JavaScript execution output:
Enter a character: The Unicode is: u0063
2025-02-12 23:20:46.096592: Processing raw output: Enter a character: The Unicode is: u0063
2025-02-12 23:20:46.102439: Final processed output: u0063
2025-02-12 23:20:46.104745: Normalized output: u0063
2025-02-12 23:20:46.105217: JavaScript final output: u0063
2025-02-12 23:20:46.105904: Final execution status: success
2025-02-12 23:20:46.106283: Final processed output: u0063
2025-02-12 23:20:46.108759: Normalized output: u0063
2025-02-12 23:20:46.110893: Normalized output: u0063
2025-02-12 23:20:46.113327: Outputs match completely
2025-02-12 23:20:46.114501: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': 'c', 'detail': 'Student=u0063 vs Teacher=u0063'}
2025-02-12 23:20:46.115131: Processing test case 4
2025-02-12 23:20:46.116433: Executing code in javascript:
const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

rl.question('Enter a character: ', (char) => {
    const unicode = char.charCodeAt(0).toString(16).padStart(4, '0');
    console.log(`The Unicode is: u${unicode}`);
    rl.close();
});
2025-02-12 23:20:46.116823: Input values: d
2025-02-12 23:20:46.119048: Created input file with content: d

2025-02-12 23:20:46.152280: JavaScript execution output:
Enter a character: The Unicode is: u0064
2025-02-12 23:20:46.153891: Processing raw output: Enter a character: The Unicode is: u0064
2025-02-12 23:20:46.159849: Final processed output: u0064
2025-02-12 23:20:46.162311: Normalized output: u0064
2025-02-12 23:20:46.162820: JavaScript final output: u0064
2025-02-12 23:20:46.163432: Final execution status: success
2025-02-12 23:20:46.164406: Final processed output: u0064
2025-02-12 23:20:46.167162: Normalized output: u0064
2025-02-12 23:20:46.169521: Normalized output: u0064
2025-02-12 23:20:46.172372: Outputs match completely
2025-02-12 23:20:46.173601: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': 'd', 'detail': 'Student=u0064 vs Teacher=u0064'}
2025-02-12 23:20:46.174711: Saved results to comparison_results.json
2025-02-13 01:05:15.588958: Starting test execution
2025-02-13 01:05:15.590045: Processing test case 1
2025-02-13 01:05:15.592152: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:05:15.592665: Input values: 1
2025-02-13 01:05:15.594946: Created input file with content: 1

2025-02-13 01:05:16.070601: Rust compilation result: 
2025-02-13 01:05:16.427824: Rust execution output:
Enter a value for x:
2
2025-02-13 01:05:16.429247: Processing raw output: Enter a value for x:
2
2025-02-13 01:05:16.443794: Final processed output: 2
2025-02-13 01:05:16.446373: Normalized output: 2.0
2025-02-13 01:05:16.446872: Rust final output: 2.0
2025-02-13 01:05:16.448135: Final execution status: success
2025-02-13 01:05:16.448541: Final processed output: 2.0
2025-02-13 01:05:16.451099: Normalized output: 2.0
2025-02-13 01:05:16.453372: Normalized output: 2.0
2025-02-13 01:05:16.455809: Outputs match completely
2025-02-13 01:05:16.457153: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': '1', 'detail': 'Student=2.0 vs Teacher=2'}
2025-02-13 01:05:16.458164: Saved results to comparison_results.json
2025-02-13 01:08:25.139500: Starting test execution
2025-02-13 01:08:25.140622: Processing test case 1
2025-02-13 01:08:25.142058: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:08:25.143159: Input values: 0
2025-02-13 01:08:25.145431: Created input file with content: 0

2025-02-13 01:08:25.694482: Rust compilation result: 
2025-02-13 01:08:25.862933: Rust execution output:
Enter a value for x:
1
2025-02-13 01:08:25.864107: Processing raw output: Enter a value for x:
1
2025-02-13 01:08:25.881404: Final processed output: 1
2025-02-13 01:08:25.884520: Normalized output: 1.0
2025-02-13 01:08:25.885103: Rust final output: 1.0
2025-02-13 01:08:25.886383: Final execution status: success
2025-02-13 01:08:25.886862: Final processed output: 1.0
2025-02-13 01:08:25.889833: Normalized output: 1.0
2025-02-13 01:08:25.892576: Normalized output: 1.0
2025-02-13 01:08:25.895567: Outputs match completely
2025-02-13 01:08:25.897204: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': '0', 'detail': 'Student=1.0 vs Teacher=1'}
2025-02-13 01:08:25.897922: Processing test case 2
2025-02-13 01:08:25.899326: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:08:25.899763: Input values: 1
2025-02-13 01:08:25.902145: Created input file with content: 1

2025-02-13 01:08:26.013398: Rust compilation result: 
2025-02-13 01:08:26.162662: Rust execution output:
Enter a value for x:
2
2025-02-13 01:08:26.164432: Processing raw output: Enter a value for x:
2
2025-02-13 01:08:26.180846: Final processed output: 2
2025-02-13 01:08:26.184525: Normalized output: 2.0
2025-02-13 01:08:26.185162: Rust final output: 2.0
2025-02-13 01:08:26.186688: Final execution status: success
2025-02-13 01:08:26.187194: Final processed output: 2.0
2025-02-13 01:08:26.197667: Normalized output: 2.0
2025-02-13 01:08:26.200334: Normalized output: 2.0
2025-02-13 01:08:26.202972: Outputs match completely
2025-02-13 01:08:26.204360: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': '1', 'detail': 'Student=2.0 vs Teacher=2'}
2025-02-13 01:08:26.205043: Processing test case 3
2025-02-13 01:08:26.206398: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:08:26.206807: Input values: 2
2025-02-13 01:08:26.208993: Created input file with content: 2

2025-02-13 01:08:26.315882: Rust compilation result: 
2025-02-13 01:08:26.462553: Rust execution output:
Enter a value for x:
4
2025-02-13 01:08:26.464220: Processing raw output: Enter a value for x:
4
2025-02-13 01:08:26.479826: Final processed output: 4
2025-02-13 01:08:26.482636: Normalized output: 4.0
2025-02-13 01:08:26.483334: Rust final output: 4.0
2025-02-13 01:08:26.484948: Final execution status: success
2025-02-13 01:08:26.485493: Final processed output: 4.0
2025-02-13 01:08:26.488430: Normalized output: 4.0
2025-02-13 01:08:26.490949: Normalized output: 4.0
2025-02-13 01:08:26.493716: Outputs match completely
2025-02-13 01:08:26.495061: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': '2', 'detail': 'Student=4.0 vs Teacher=4'}
2025-02-13 01:08:26.495760: Processing test case 4
2025-02-13 01:08:26.497236: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:08:26.497663: Input values: 3
2025-02-13 01:08:26.499776: Created input file with content: 3

2025-02-13 01:08:26.603841: Rust compilation result: 
2025-02-13 01:08:26.749118: Rust execution output:
Enter a value for x:
8
2025-02-13 01:08:26.751643: Processing raw output: Enter a value for x:
8
2025-02-13 01:08:26.766656: Final processed output: 8
2025-02-13 01:08:26.769534: Normalized output: 8.0
2025-02-13 01:08:26.770111: Rust final output: 8.0
2025-02-13 01:08:26.771564: Final execution status: success
2025-02-13 01:08:26.772120: Final processed output: 8.0
2025-02-13 01:08:26.774894: Normalized output: 8.0
2025-02-13 01:08:26.777341: Normalized output: 8.0
2025-02-13 01:08:26.780065: Outputs match completely
2025-02-13 01:08:26.781566: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': '3', 'detail': 'Student=8.0 vs Teacher=8'}
2025-02-13 01:08:26.782238: Processing test case 5
2025-02-13 01:08:26.783806: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:08:26.784306: Input values: 4
2025-02-13 01:08:26.786610: Created input file with content: 4

2025-02-13 01:08:26.890119: Rust compilation result: 
2025-02-13 01:08:27.036070: Rust execution output:
Enter a value for x:
16
2025-02-13 01:08:27.037703: Processing raw output: Enter a value for x:
16
2025-02-13 01:08:27.053677: Final processed output: 16
2025-02-13 01:08:27.057513: Normalized output: 16.0
2025-02-13 01:08:27.058249: Rust final output: 16.0
2025-02-13 01:08:27.059808: Final execution status: success
2025-02-13 01:08:27.060317: Final processed output: 16.0
2025-02-13 01:08:27.063686: Normalized output: 16.0
2025-02-13 01:08:27.066820: Normalized output: 16.0
2025-02-13 01:08:27.069702: Outputs match completely
2025-02-13 01:08:27.071989: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': '4', 'detail': 'Student=16.0 vs Teacher=16'}
2025-02-13 01:08:27.072821: Processing test case 6
2025-02-13 01:08:27.074603: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:08:27.075194: Input values: 5
2025-02-13 01:08:27.077739: Created input file with content: 5

2025-02-13 01:08:27.186068: Rust compilation result: 
2025-02-13 01:08:27.335383: Rust execution output:
Enter a value for x:
32
2025-02-13 01:08:27.336965: Processing raw output: Enter a value for x:
32
2025-02-13 01:08:27.349111: Final processed output: 32
2025-02-13 01:08:27.352057: Normalized output: 32.0
2025-02-13 01:08:27.352567: Rust final output: 32.0
2025-02-13 01:08:27.353874: Final execution status: success
2025-02-13 01:08:27.354478: Final processed output: 32.0
2025-02-13 01:08:27.357104: Normalized output: 32.0
2025-02-13 01:08:27.359595: Normalized output: 32.0
2025-02-13 01:08:27.362337: Outputs match completely
2025-02-13 01:08:27.363668: Added comparison result for Case6: {'status': 'PASS', 'teacherinput': '5', 'detail': 'Student=32.0 vs Teacher=32'}
2025-02-13 01:08:27.364255: Processing test case 7
2025-02-13 01:08:27.365441: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:08:27.365814: Input values: 6
2025-02-13 01:08:27.367774: Created input file with content: 6

2025-02-13 01:08:27.469680: Rust compilation result: 
2025-02-13 01:08:27.636340: Rust execution output:
Enter a value for x:
64
2025-02-13 01:08:27.637553: Processing raw output: Enter a value for x:
64
2025-02-13 01:08:27.649870: Final processed output: 64
2025-02-13 01:08:27.652417: Normalized output: 64.0
2025-02-13 01:08:27.652947: Rust final output: 64.0
2025-02-13 01:08:27.654174: Final execution status: success
2025-02-13 01:08:27.654573: Final processed output: 64.0
2025-02-13 01:08:27.657065: Normalized output: 64.0
2025-02-13 01:08:27.659512: Normalized output: 64.0
2025-02-13 01:08:27.661913: Outputs match completely
2025-02-13 01:08:27.663135: Added comparison result for Case7: {'status': 'PASS', 'teacherinput': '6', 'detail': 'Student=64.0 vs Teacher=64'}
2025-02-13 01:08:27.663838: Processing test case 8
2025-02-13 01:08:27.665082: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:08:27.665455: Input values: 7
2025-02-13 01:08:27.667435: Created input file with content: 7

2025-02-13 01:08:27.769365: Rust compilation result: 
2025-02-13 01:08:27.912446: Rust execution output:
Enter a value for x:
128
2025-02-13 01:08:27.914979: Processing raw output: Enter a value for x:
128
2025-02-13 01:08:27.933000: Final processed output: 128
2025-02-13 01:08:27.936026: Normalized output: 128.0
2025-02-13 01:08:27.936657: Rust final output: 128.0
2025-02-13 01:08:27.938235: Final execution status: success
2025-02-13 01:08:27.938727: Final processed output: 128.0
2025-02-13 01:08:27.941902: Normalized output: 128.0
2025-02-13 01:08:27.944567: Normalized output: 128.0
2025-02-13 01:08:27.947473: Outputs match completely
2025-02-13 01:08:27.948887: Added comparison result for Case8: {'status': 'PASS', 'teacherinput': '7', 'detail': 'Student=128.0 vs Teacher=128'}
2025-02-13 01:08:27.949576: Processing test case 9
2025-02-13 01:08:27.951478: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:08:27.951920: Input values: 8
2025-02-13 01:08:27.954134: Created input file with content: 8

2025-02-13 01:08:28.059945: Rust compilation result: 
2025-02-13 01:08:28.206237: Rust execution output:
Enter a value for x:
256
2025-02-13 01:08:28.208063: Processing raw output: Enter a value for x:
256
2025-02-13 01:08:28.222368: Final processed output: 256
2025-02-13 01:08:28.225335: Normalized output: 256.0
2025-02-13 01:08:28.225940: Rust final output: 256.0
2025-02-13 01:08:28.227284: Final execution status: success
2025-02-13 01:08:28.227730: Final processed output: 256.0
2025-02-13 01:08:28.230524: Normalized output: 256.0
2025-02-13 01:08:28.232925: Normalized output: 256.0
2025-02-13 01:08:28.235508: Outputs match completely
2025-02-13 01:08:28.236924: Added comparison result for Case9: {'status': 'PASS', 'teacherinput': '8', 'detail': 'Student=256.0 vs Teacher=256'}
2025-02-13 01:08:28.237581: Processing test case 10
2025-02-13 01:08:28.238863: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:08:28.239262: Input values: 9
2025-02-13 01:08:28.241489: Created input file with content: 9

2025-02-13 01:08:28.345103: Rust compilation result: 
2025-02-13 01:08:28.486863: Rust execution output:
Enter a value for x:
512
2025-02-13 01:08:28.488497: Processing raw output: Enter a value for x:
512
2025-02-13 01:08:28.504280: Final processed output: 512
2025-02-13 01:08:28.507686: Normalized output: 512.0
2025-02-13 01:08:28.508380: Rust final output: 512.0
2025-02-13 01:08:28.509859: Final execution status: success
2025-02-13 01:08:28.510337: Final processed output: 512.0
2025-02-13 01:08:28.513248: Normalized output: 512.0
2025-02-13 01:08:28.515739: Normalized output: 512.0
2025-02-13 01:08:28.518387: Outputs match completely
2025-02-13 01:08:28.519691: Added comparison result for Case10: {'status': 'PASS', 'teacherinput': '9', 'detail': 'Student=512.0 vs Teacher=512'}
2025-02-13 01:08:28.520803: Saved results to comparison_results.json
2025-02-13 01:17:01.688696: Starting test execution
2025-02-13 01:17:01.690001: Processing test case 1
2025-02-13 01:17:01.691450: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:01.692504: Input values: 0
2025-02-13 01:17:01.694949: Created input file with content: 0

2025-02-13 01:17:02.423010: Rust compilation result: 
2025-02-13 01:17:02.979474: Rust execution output:
Enter a value for x:
1
2025-02-13 01:17:02.982626: Processing raw output: Enter a value for x:
1
2025-02-13 01:17:03.004160: Final processed output: 1
2025-02-13 01:17:03.007625: Normalized output: 1.0
2025-02-13 01:17:03.008283: Rust final output: 1.0
2025-02-13 01:17:03.009607: Final execution status: success
2025-02-13 01:17:03.010044: Final processed output: 1.0
2025-02-13 01:17:03.012740: Normalized output: 1.0
2025-02-13 01:17:03.015116: Normalized output: 1.0
2025-02-13 01:17:03.017604: Outputs match completely
2025-02-13 01:17:03.020168: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': '0', 'detail': 'Student=1.0 vs Teacher=1'}
2025-02-13 01:17:03.021251: Processing test case 2
2025-02-13 01:17:03.022629: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:03.023056: Input values: 1
2025-02-13 01:17:03.025490: Created input file with content: 1

2025-02-13 01:17:03.136697: Rust compilation result: 
2025-02-13 01:17:03.331078: Rust execution output:
Enter a value for x:
2
2025-02-13 01:17:03.332529: Processing raw output: Enter a value for x:
2
2025-02-13 01:17:03.349858: Final processed output: 2
2025-02-13 01:17:03.353734: Normalized output: 2.0
2025-02-13 01:17:03.354423: Rust final output: 2.0
2025-02-13 01:17:03.355951: Final execution status: success
2025-02-13 01:17:03.356477: Final processed output: 2.0
2025-02-13 01:17:03.367251: Normalized output: 2.0
2025-02-13 01:17:03.370022: Normalized output: 2.0
2025-02-13 01:17:03.372825: Outputs match completely
2025-02-13 01:17:03.374261: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': '1', 'detail': 'Student=2.0 vs Teacher=2'}
2025-02-13 01:17:03.374962: Processing test case 3
2025-02-13 01:17:03.376375: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:03.376817: Input values: 2
2025-02-13 01:17:03.379078: Created input file with content: 2

2025-02-13 01:17:03.484510: Rust compilation result: 
2025-02-13 01:17:03.640932: Rust execution output:
Enter a value for x:
4
2025-02-13 01:17:03.642286: Processing raw output: Enter a value for x:
4
2025-02-13 01:17:03.655519: Final processed output: 4
2025-02-13 01:17:03.658053: Normalized output: 4.0
2025-02-13 01:17:03.658681: Rust final output: 4.0
2025-02-13 01:17:03.659948: Final execution status: success
2025-02-13 01:17:03.660359: Final processed output: 4.0
2025-02-13 01:17:03.662980: Normalized output: 4.0
2025-02-13 01:17:03.665190: Normalized output: 4.0
2025-02-13 01:17:03.667742: Outputs match completely
2025-02-13 01:17:03.668974: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': '2', 'detail': 'Student=4.0 vs Teacher=4'}
2025-02-13 01:17:03.669605: Processing test case 4
2025-02-13 01:17:03.671224: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:03.671680: Input values: 3
2025-02-13 01:17:03.673778: Created input file with content: 3

2025-02-13 01:17:03.778690: Rust compilation result: 
2025-02-13 01:17:03.925448: Rust execution output:
Enter a value for x:
8
2025-02-13 01:17:03.928358: Processing raw output: Enter a value for x:
8
2025-02-13 01:17:03.945614: Final processed output: 8
2025-02-13 01:17:03.948815: Normalized output: 8.0
2025-02-13 01:17:03.949433: Rust final output: 8.0
2025-02-13 01:17:03.951006: Final execution status: success
2025-02-13 01:17:03.951640: Final processed output: 8.0
2025-02-13 01:17:03.954703: Normalized output: 8.0
2025-02-13 01:17:03.957428: Normalized output: 8.0
2025-02-13 01:17:03.960306: Outputs match completely
2025-02-13 01:17:03.961884: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': '3', 'detail': 'Student=8.0 vs Teacher=8'}
2025-02-13 01:17:03.962609: Processing test case 5
2025-02-13 01:17:03.964065: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:03.964544: Input values: 4
2025-02-13 01:17:03.966937: Created input file with content: 4

2025-02-13 01:17:04.074128: Rust compilation result: 
2025-02-13 01:17:04.217572: Rust execution output:
Enter a value for x:
16
2025-02-13 01:17:04.219272: Processing raw output: Enter a value for x:
16
2025-02-13 01:17:04.234160: Final processed output: 16
2025-02-13 01:17:04.237214: Normalized output: 16.0
2025-02-13 01:17:04.237854: Rust final output: 16.0
2025-02-13 01:17:04.239357: Final execution status: success
2025-02-13 01:17:04.239824: Final processed output: 16.0
2025-02-13 01:17:04.242826: Normalized output: 16.0
2025-02-13 01:17:04.245886: Normalized output: 16.0
2025-02-13 01:17:04.248557: Outputs match completely
2025-02-13 01:17:04.249907: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': '4', 'detail': 'Student=16.0 vs Teacher=16'}
2025-02-13 01:17:04.250581: Processing test case 6
2025-02-13 01:17:04.252039: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:04.252444: Input values: 5
2025-02-13 01:17:04.254541: Created input file with content: 5

2025-02-13 01:17:04.366408: Rust compilation result: 
2025-02-13 01:17:04.520881: Rust execution output:
Enter a value for x:
32
2025-02-13 01:17:04.522483: Processing raw output: Enter a value for x:
32
2025-02-13 01:17:04.534998: Final processed output: 32
2025-02-13 01:17:04.537784: Normalized output: 32.0
2025-02-13 01:17:04.538317: Rust final output: 32.0
2025-02-13 01:17:04.539678: Final execution status: success
2025-02-13 01:17:04.540108: Final processed output: 32.0
2025-02-13 01:17:04.542561: Normalized output: 32.0
2025-02-13 01:17:04.544851: Normalized output: 32.0
2025-02-13 01:17:04.547329: Outputs match completely
2025-02-13 01:17:04.548614: Added comparison result for Case6: {'status': 'PASS', 'teacherinput': '5', 'detail': 'Student=32.0 vs Teacher=32'}
2025-02-13 01:17:04.549254: Processing test case 7
2025-02-13 01:17:04.550502: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:04.550892: Input values: 6
2025-02-13 01:17:04.553079: Created input file with content: 6

2025-02-13 01:17:04.656768: Rust compilation result: 
2025-02-13 01:17:04.802413: Rust execution output:
Enter a value for x:
64
2025-02-13 01:17:04.804346: Processing raw output: Enter a value for x:
64
2025-02-13 01:17:04.820556: Final processed output: 64
2025-02-13 01:17:04.823733: Normalized output: 64.0
2025-02-13 01:17:04.824368: Rust final output: 64.0
2025-02-13 01:17:04.825846: Final execution status: success
2025-02-13 01:17:04.826315: Final processed output: 64.0
2025-02-13 01:17:04.829250: Normalized output: 64.0
2025-02-13 01:17:04.831859: Normalized output: 64.0
2025-02-13 01:17:04.834496: Outputs match completely
2025-02-13 01:17:04.835867: Added comparison result for Case7: {'status': 'PASS', 'teacherinput': '6', 'detail': 'Student=64.0 vs Teacher=64'}
2025-02-13 01:17:04.836710: Processing test case 8
2025-02-13 01:17:04.838156: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:04.838579: Input values: 7
2025-02-13 01:17:04.840828: Created input file with content: 7

2025-02-13 01:17:04.945043: Rust compilation result: 
2025-02-13 01:17:05.094481: Rust execution output:
Enter a value for x:
128
2025-02-13 01:17:05.095700: Processing raw output: Enter a value for x:
128
2025-02-13 01:17:05.107521: Final processed output: 128
2025-02-13 01:17:05.109819: Normalized output: 128.0
2025-02-13 01:17:05.110317: Rust final output: 128.0
2025-02-13 01:17:05.111598: Final execution status: success
2025-02-13 01:17:05.111982: Final processed output: 128.0
2025-02-13 01:17:05.114422: Normalized output: 128.0
2025-02-13 01:17:05.116546: Normalized output: 128.0
2025-02-13 01:17:05.118966: Outputs match completely
2025-02-13 01:17:05.120195: Added comparison result for Case8: {'status': 'PASS', 'teacherinput': '7', 'detail': 'Student=128.0 vs Teacher=128'}
2025-02-13 01:17:05.121109: Processing test case 9
2025-02-13 01:17:05.122993: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:05.123398: Input values: 8
2025-02-13 01:17:05.125390: Created input file with content: 8

2025-02-13 01:17:05.230610: Rust compilation result: 
2025-02-13 01:17:05.375322: Rust execution output:
Enter a value for x:
256
2025-02-13 01:17:05.377056: Processing raw output: Enter a value for x:
256
2025-02-13 01:17:05.391493: Final processed output: 256
2025-02-13 01:17:05.394355: Normalized output: 256.0
2025-02-13 01:17:05.394904: Rust final output: 256.0
2025-02-13 01:17:05.396294: Final execution status: success
2025-02-13 01:17:05.396746: Final processed output: 256.0
2025-02-13 01:17:05.399611: Normalized output: 256.0
2025-02-13 01:17:05.402060: Normalized output: 256.0
2025-02-13 01:17:05.404695: Outputs match completely
2025-02-13 01:17:05.406103: Added comparison result for Case9: {'status': 'PASS', 'teacherinput': '8', 'detail': 'Student=256.0 vs Teacher=256'}
2025-02-13 01:17:05.406754: Processing test case 10
2025-02-13 01:17:05.408070: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:05.408470: Input values: 100
2025-02-13 01:17:05.410631: Created input file with content: 100

2025-02-13 01:17:05.512417: Rust compilation result: 
2025-02-13 01:17:05.658837: Rust execution output:
Enter a value for x:
thread 'main' panicked at /rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/num/mod.rs:326:5:
attempt to multiply with overflow
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
2025-02-13 01:17:05.660458: Processing raw output: Enter a value for x:
thread 'main' panicked at /rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/num/mod.rs:326:5:
attempt to multiply with overflow
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
2025-02-13 01:17:05.671076: Exception occurred: Evaluating expression "'thread 'main' panicked at /rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/num/mod.rs:326:5:' == ''" failed: SyntaxError: invalid syntax (<string>, line 1)
2025-02-13 01:17:05.671775: Final execution status: runtime_error
2025-02-13 01:17:05.672348: Final processed output: Evaluating expression "'thread 'main' panicked at /rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/num/mod.rs:326:5:' == ''" failed: SyntaxError: invalid syntax (<string>, line 1)
2025-02-13 01:17:05.674207: Added comparison result for Case10: {'status': 'runtime_error', 'teacherinput': '100', 'detail': 'Student=Evaluating expression "\'thread \'main\' panicked at /rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/num/mod.rs:326:5:\' == \'\'" failed: SyntaxError: invalid syntax (<string>, line 1) vs Teacher=512'}
2025-02-13 01:17:05.675868: Saved results to comparison_results.json
2025-02-13 01:17:15.255181: Starting test execution
2025-02-13 01:17:15.256273: Processing test case 1
2025-02-13 01:17:15.257678: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:15.258769: Input values: 0
2025-02-13 01:17:15.261228: Created input file with content: 0

2025-02-13 01:17:15.373219: Rust compilation result: 
2025-02-13 01:17:15.538040: Rust execution output:
Enter a value for x:
1
2025-02-13 01:17:15.539516: Processing raw output: Enter a value for x:
1
2025-02-13 01:17:15.558635: Final processed output: 1
2025-02-13 01:17:15.561587: Normalized output: 1.0
2025-02-13 01:17:15.562135: Rust final output: 1.0
2025-02-13 01:17:15.563393: Final execution status: success
2025-02-13 01:17:15.563868: Final processed output: 1.0
2025-02-13 01:17:15.566948: Normalized output: 1.0
2025-02-13 01:17:15.569493: Normalized output: 1.0
2025-02-13 01:17:15.572202: Outputs match completely
2025-02-13 01:17:15.574297: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': '0', 'detail': 'Student=1.0 vs Teacher=1'}
2025-02-13 01:17:15.575112: Processing test case 2
2025-02-13 01:17:15.576654: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:15.577122: Input values: 1
2025-02-13 01:17:15.579642: Created input file with content: 1

2025-02-13 01:17:15.681625: Rust compilation result: 
2025-02-13 01:17:15.833544: Rust execution output:
Enter a value for x:
2
2025-02-13 01:17:15.834600: Processing raw output: Enter a value for x:
2
2025-02-13 01:17:15.845659: Final processed output: 2
2025-02-13 01:17:15.848397: Normalized output: 2.0
2025-02-13 01:17:15.848889: Rust final output: 2.0
2025-02-13 01:17:15.850093: Final execution status: success
2025-02-13 01:17:15.850485: Final processed output: 2.0
2025-02-13 01:17:15.859796: Normalized output: 2.0
2025-02-13 01:17:15.861917: Normalized output: 2.0
2025-02-13 01:17:15.864100: Outputs match completely
2025-02-13 01:17:15.865289: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': '1', 'detail': 'Student=2.0 vs Teacher=2'}
2025-02-13 01:17:15.865872: Processing test case 3
2025-02-13 01:17:15.867023: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:15.867390: Input values: 2
2025-02-13 01:17:15.869844: Created input file with content: 2

2025-02-13 01:17:15.984560: Rust compilation result: 
2025-02-13 01:17:16.128671: Rust execution output:
Enter a value for x:
4
2025-02-13 01:17:16.129956: Processing raw output: Enter a value for x:
4
2025-02-13 01:17:16.141919: Final processed output: 4
2025-02-13 01:17:16.144282: Normalized output: 4.0
2025-02-13 01:17:16.144882: Rust final output: 4.0
2025-02-13 01:17:16.146075: Final execution status: success
2025-02-13 01:17:16.146500: Final processed output: 4.0
2025-02-13 01:17:16.149041: Normalized output: 4.0
2025-02-13 01:17:16.151340: Normalized output: 4.0
2025-02-13 01:17:16.154374: Outputs match completely
2025-02-13 01:17:16.155665: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': '2', 'detail': 'Student=4.0 vs Teacher=4'}
2025-02-13 01:17:16.156310: Processing test case 4
2025-02-13 01:17:16.157632: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:16.158024: Input values: 3
2025-02-13 01:17:16.160072: Created input file with content: 3

2025-02-13 01:17:16.284803: Rust compilation result: 
2025-02-13 01:17:16.436249: Rust execution output:
Enter a value for x:
8
2025-02-13 01:17:16.438762: Processing raw output: Enter a value for x:
8
2025-02-13 01:17:16.453154: Final processed output: 8
2025-02-13 01:17:16.456114: Normalized output: 8.0
2025-02-13 01:17:16.456668: Rust final output: 8.0
2025-02-13 01:17:16.458068: Final execution status: success
2025-02-13 01:17:16.458657: Final processed output: 8.0
2025-02-13 01:17:16.461408: Normalized output: 8.0
2025-02-13 01:17:16.463888: Normalized output: 8.0
2025-02-13 01:17:16.466508: Outputs match completely
2025-02-13 01:17:16.467950: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': '3', 'detail': 'Student=8.0 vs Teacher=8'}
2025-02-13 01:17:16.468592: Processing test case 5
2025-02-13 01:17:16.470051: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:16.470486: Input values: 4
2025-02-13 01:17:16.472685: Created input file with content: 4

2025-02-13 01:17:16.575995: Rust compilation result: 
2025-02-13 01:17:16.721931: Rust execution output:
Enter a value for x:
16
2025-02-13 01:17:16.723951: Processing raw output: Enter a value for x:
16
2025-02-13 01:17:16.741303: Final processed output: 16
2025-02-13 01:17:16.744418: Normalized output: 16.0
2025-02-13 01:17:16.745062: Rust final output: 16.0
2025-02-13 01:17:16.746639: Final execution status: success
2025-02-13 01:17:16.747151: Final processed output: 16.0
2025-02-13 01:17:16.750247: Normalized output: 16.0
2025-02-13 01:17:16.753494: Normalized output: 16.0
2025-02-13 01:17:16.756370: Outputs match completely
2025-02-13 01:17:16.757791: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': '4', 'detail': 'Student=16.0 vs Teacher=16'}
2025-02-13 01:17:16.758514: Processing test case 6
2025-02-13 01:17:16.760087: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:16.760547: Input values: 5
2025-02-13 01:17:16.762760: Created input file with content: 5

2025-02-13 01:17:16.868729: Rust compilation result: 
2025-02-13 01:17:17.016360: Rust execution output:
Enter a value for x:
32
2025-02-13 01:17:17.018203: Processing raw output: Enter a value for x:
32
2025-02-13 01:17:17.033398: Final processed output: 32
2025-02-13 01:17:17.036750: Normalized output: 32.0
2025-02-13 01:17:17.037363: Rust final output: 32.0
2025-02-13 01:17:17.039923: Final execution status: success
2025-02-13 01:17:17.040802: Final processed output: 32.0
2025-02-13 01:17:17.044025: Normalized output: 32.0
2025-02-13 01:17:17.046360: Normalized output: 32.0
2025-02-13 01:17:17.048865: Outputs match completely
2025-02-13 01:17:17.050320: Added comparison result for Case6: {'status': 'PASS', 'teacherinput': '5', 'detail': 'Student=32.0 vs Teacher=32'}
2025-02-13 01:17:17.050986: Processing test case 7
2025-02-13 01:17:17.052227: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:17.052619: Input values: 6
2025-02-13 01:17:17.054947: Created input file with content: 6

2025-02-13 01:17:17.161194: Rust compilation result: 
2025-02-13 01:17:17.336159: Rust execution output:
Enter a value for x:
64
2025-02-13 01:17:17.337579: Processing raw output: Enter a value for x:
64
2025-02-13 01:17:17.350206: Final processed output: 64
2025-02-13 01:17:17.352799: Normalized output: 64.0
2025-02-13 01:17:17.353375: Rust final output: 64.0
2025-02-13 01:17:17.354729: Final execution status: success
2025-02-13 01:17:17.355146: Final processed output: 64.0
2025-02-13 01:17:17.357857: Normalized output: 64.0
2025-02-13 01:17:17.360201: Normalized output: 64.0
2025-02-13 01:17:17.362713: Outputs match completely
2025-02-13 01:17:17.364013: Added comparison result for Case7: {'status': 'PASS', 'teacherinput': '6', 'detail': 'Student=64.0 vs Teacher=64'}
2025-02-13 01:17:17.364779: Processing test case 8
2025-02-13 01:17:17.366143: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:17.366708: Input values: 7
2025-02-13 01:17:17.368989: Created input file with content: 7

2025-02-13 01:17:17.472242: Rust compilation result: 
2025-02-13 01:17:17.616817: Rust execution output:
Enter a value for x:
128
2025-02-13 01:17:17.618510: Processing raw output: Enter a value for x:
128
2025-02-13 01:17:17.633884: Final processed output: 128
2025-02-13 01:17:17.636711: Normalized output: 128.0
2025-02-13 01:17:17.637337: Rust final output: 128.0
2025-02-13 01:17:17.638910: Final execution status: success
2025-02-13 01:17:17.639366: Final processed output: 128.0
2025-02-13 01:17:17.642235: Normalized output: 128.0
2025-02-13 01:17:17.644705: Normalized output: 128.0
2025-02-13 01:17:17.647507: Outputs match completely
2025-02-13 01:17:17.648856: Added comparison result for Case8: {'status': 'PASS', 'teacherinput': '7', 'detail': 'Student=128.0 vs Teacher=128'}
2025-02-13 01:17:17.649561: Processing test case 9
2025-02-13 01:17:17.651466: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:17.651905: Input values: 8
2025-02-13 01:17:17.654123: Created input file with content: 8

2025-02-13 01:17:17.758962: Rust compilation result: 
2025-02-13 01:17:17.910233: Rust execution output:
Enter a value for x:
256
2025-02-13 01:17:17.911983: Processing raw output: Enter a value for x:
256
2025-02-13 01:17:17.929143: Final processed output: 256
2025-02-13 01:17:17.932261: Normalized output: 256.0
2025-02-13 01:17:17.932827: Rust final output: 256.0
2025-02-13 01:17:17.934147: Final execution status: success
2025-02-13 01:17:17.934612: Final processed output: 256.0
2025-02-13 01:17:17.938008: Normalized output: 256.0
2025-02-13 01:17:17.940792: Normalized output: 256.0
2025-02-13 01:17:17.943643: Outputs match completely
2025-02-13 01:17:17.945167: Added comparison result for Case9: {'status': 'PASS', 'teacherinput': '8', 'detail': 'Student=256.0 vs Teacher=256'}
2025-02-13 01:17:17.945859: Processing test case 10
2025-02-13 01:17:17.947336: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:17:17.947789: Input values: 10
2025-02-13 01:17:17.950083: Created input file with content: 10

2025-02-13 01:17:18.056674: Rust compilation result: 
2025-02-13 01:17:18.204915: Rust execution output:
Enter a value for x:
1024
2025-02-13 01:17:18.206973: Processing raw output: Enter a value for x:
1024
2025-02-13 01:17:18.222939: Final processed output: 1024
2025-02-13 01:17:18.226429: Normalized output: 1024.0
2025-02-13 01:17:18.227061: Rust final output: 1024.0
2025-02-13 01:17:18.228529: Final execution status: success
2025-02-13 01:17:18.228997: Final processed output: 1024.0
2025-02-13 01:17:18.231902: Normalized output: 1024.0
2025-02-13 01:17:18.234515: Normalized output: 512.0
2025-02-13 01:17:18.237259: Mismatch at line 0 - Student: "1024.0", Expected: "512.0"
2025-02-13 01:17:18.238885: Added comparison result for Case10: {'status': 'FAIL', 'teacherinput': '10', 'detail': 'Student=1024.0 vs Teacher=512'}
2025-02-13 01:17:18.240206: Saved results to comparison_results.json
2025-02-13 01:19:47.956324: Starting test execution
2025-02-13 01:19:47.957740: Processing test case 1
2025-02-13 01:19:47.959277: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:19:47.960360: Input values: 0
2025-02-13 01:19:47.962851: Created input file with content: 0

2025-02-13 01:19:48.572107: Rust compilation result: 
2025-02-13 01:19:48.740491: Rust execution output:
Enter a value for x:
1
2025-02-13 01:19:48.741799: Processing raw output: Enter a value for x:
1
2025-02-13 01:19:48.756423: Final processed output: 1
2025-02-13 01:19:48.759039: Normalized output: 1.0
2025-02-13 01:19:48.759664: Rust final output: 1.0
2025-02-13 01:19:48.761023: Final execution status: success
2025-02-13 01:19:48.761468: Final processed output: 1.0
2025-02-13 01:19:48.764239: Normalized output: 1.0
2025-02-13 01:19:48.766532: Normalized output: 1.0
2025-02-13 01:19:48.768944: Outputs match completely
2025-02-13 01:19:48.770264: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': '0', 'detail': 'Student=1.0 vs Teacher=1'}
2025-02-13 01:19:48.770872: Processing test case 2
2025-02-13 01:19:48.772121: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:19:48.772510: Input values: 1
2025-02-13 01:19:48.774667: Created input file with content: 1

2025-02-13 01:19:48.884631: Rust compilation result: 
2025-02-13 01:19:49.034319: Rust execution output:
Enter a value for x:
2
2025-02-13 01:19:49.036792: Processing raw output: Enter a value for x:
2
2025-02-13 01:19:49.053839: Final processed output: 2
2025-02-13 01:19:49.057462: Normalized output: 2.0
2025-02-13 01:19:49.058223: Rust final output: 2.0
2025-02-13 01:19:49.059826: Final execution status: success
2025-02-13 01:19:49.060310: Final processed output: 2.0
2025-02-13 01:19:49.070749: Normalized output: 2.0
2025-02-13 01:19:49.073386: Normalized output: 2.0
2025-02-13 01:19:49.076053: Outputs match completely
2025-02-13 01:19:49.077490: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': '1', 'detail': 'Student=2.0 vs Teacher=2'}
2025-02-13 01:19:49.078178: Processing test case 3
2025-02-13 01:19:49.079524: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:19:49.079937: Input values: 2
2025-02-13 01:19:49.082104: Created input file with content: 2

2025-02-13 01:19:49.190035: Rust compilation result: 
2025-02-13 01:19:49.336604: Rust execution output:
Enter a value for x:
4
2025-02-13 01:19:49.338160: Processing raw output: Enter a value for x:
4
2025-02-13 01:19:49.353082: Final processed output: 4
2025-02-13 01:19:49.355851: Normalized output: 4.0
2025-02-13 01:19:49.356638: Rust final output: 4.0
2025-02-13 01:19:49.358145: Final execution status: success
2025-02-13 01:19:49.358630: Final processed output: 4.0
2025-02-13 01:19:49.361581: Normalized output: 4.0
2025-02-13 01:19:49.364083: Normalized output: 4.0
2025-02-13 01:19:49.366827: Outputs match completely
2025-02-13 01:19:49.368168: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': '2', 'detail': 'Student=4.0 vs Teacher=4'}
2025-02-13 01:19:49.368857: Processing test case 4
2025-02-13 01:19:49.370298: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:19:49.370702: Input values: 3
2025-02-13 01:19:49.372818: Created input file with content: 3

2025-02-13 01:19:49.475456: Rust compilation result: 
2025-02-13 01:19:49.618852: Rust execution output:
Enter a value for x:
8
2025-02-13 01:19:49.621817: Processing raw output: Enter a value for x:
8
2025-02-13 01:19:49.638103: Final processed output: 8
2025-02-13 01:19:49.641219: Normalized output: 8.0
2025-02-13 01:19:49.641832: Rust final output: 8.0
2025-02-13 01:19:49.643307: Final execution status: success
2025-02-13 01:19:49.643907: Final processed output: 8.0
2025-02-13 01:19:49.646711: Normalized output: 8.0
2025-02-13 01:19:49.649294: Normalized output: 8.0
2025-02-13 01:19:49.652000: Outputs match completely
2025-02-13 01:19:49.653494: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': '3', 'detail': 'Student=8.0 vs Teacher=8'}
2025-02-13 01:19:49.654174: Processing test case 5
2025-02-13 01:19:49.655582: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:19:49.656029: Input values: 4
2025-02-13 01:19:49.658391: Created input file with content: 4

2025-02-13 01:19:49.766636: Rust compilation result: 
2025-02-13 01:19:49.909943: Rust execution output:
Enter a value for x:
16
2025-02-13 01:19:49.911685: Processing raw output: Enter a value for x:
16
2025-02-13 01:19:49.928316: Final processed output: 16
2025-02-13 01:19:49.931204: Normalized output: 16.0
2025-02-13 01:19:49.931799: Rust final output: 16.0
2025-02-13 01:19:49.933251: Final execution status: success
2025-02-13 01:19:49.933727: Final processed output: 16.0
2025-02-13 01:19:49.936738: Normalized output: 16.0
2025-02-13 01:19:49.939867: Normalized output: 16.0
2025-02-13 01:19:49.942623: Outputs match completely
2025-02-13 01:19:49.943978: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': '4', 'detail': 'Student=16.0 vs Teacher=16'}
2025-02-13 01:19:49.944644: Processing test case 6
2025-02-13 01:19:49.946121: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:19:49.946578: Input values: 5
2025-02-13 01:19:49.948776: Created input file with content: 5

2025-02-13 01:19:50.055596: Rust compilation result: 
2025-02-13 01:19:50.201531: Rust execution output:
Enter a value for x:
32
2025-02-13 01:19:50.203604: Processing raw output: Enter a value for x:
32
2025-02-13 01:19:50.219953: Final processed output: 32
2025-02-13 01:19:50.223227: Normalized output: 32.0
2025-02-13 01:19:50.224119: Rust final output: 32.0
2025-02-13 01:19:50.225814: Final execution status: success
2025-02-13 01:19:50.226360: Final processed output: 32.0
2025-02-13 01:19:50.229262: Normalized output: 32.0
2025-02-13 01:19:50.232114: Normalized output: 32.0
2025-02-13 01:19:50.235018: Outputs match completely
2025-02-13 01:19:50.236457: Added comparison result for Case6: {'status': 'PASS', 'teacherinput': '5', 'detail': 'Student=32.0 vs Teacher=32'}
2025-02-13 01:19:50.237165: Processing test case 7
2025-02-13 01:19:50.238658: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:19:50.239181: Input values: 6
2025-02-13 01:19:50.241948: Created input file with content: 6

2025-02-13 01:19:50.354274: Rust compilation result: 
2025-02-13 01:19:50.522944: Rust execution output:
Enter a value for x:
64
2025-02-13 01:19:50.524115: Processing raw output: Enter a value for x:
64
2025-02-13 01:19:50.536225: Final processed output: 64
2025-02-13 01:19:50.538560: Normalized output: 64.0
2025-02-13 01:19:50.539034: Rust final output: 64.0
2025-02-13 01:19:50.540247: Final execution status: success
2025-02-13 01:19:50.540658: Final processed output: 64.0
2025-02-13 01:19:50.543321: Normalized output: 64.0
2025-02-13 01:19:50.545492: Normalized output: 64.0
2025-02-13 01:19:50.547801: Outputs match completely
2025-02-13 01:19:50.549068: Added comparison result for Case7: {'status': 'PASS', 'teacherinput': '6', 'detail': 'Student=64.0 vs Teacher=64'}
2025-02-13 01:19:50.549818: Processing test case 8
2025-02-13 01:19:50.551087: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:19:50.551496: Input values: 7
2025-02-13 01:19:50.553903: Created input file with content: 7

2025-02-13 01:19:50.659440: Rust compilation result: 
2025-02-13 01:19:50.806106: Rust execution output:
Enter a value for x:
128
2025-02-13 01:19:50.807739: Processing raw output: Enter a value for x:
128
2025-02-13 01:19:50.822398: Final processed output: 128
2025-02-13 01:19:50.825415: Normalized output: 128.0
2025-02-13 01:19:50.826479: Rust final output: 128.0
2025-02-13 01:19:50.828125: Final execution status: success
2025-02-13 01:19:50.828596: Final processed output: 128.0
2025-02-13 01:19:50.831463: Normalized output: 128.0
2025-02-13 01:19:50.833909: Normalized output: 128.0
2025-02-13 01:19:50.836601: Outputs match completely
2025-02-13 01:19:50.837885: Added comparison result for Case8: {'status': 'PASS', 'teacherinput': '7', 'detail': 'Student=128.0 vs Teacher=128'}
2025-02-13 01:19:50.838551: Processing test case 9
2025-02-13 01:19:50.840624: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:19:50.841078: Input values: 8
2025-02-13 01:19:50.843536: Created input file with content: 8

2025-02-13 01:19:50.953434: Rust compilation result: 
2025-02-13 01:19:51.098266: Rust execution output:
Enter a value for x:
256
2025-02-13 01:19:51.100055: Processing raw output: Enter a value for x:
256
2025-02-13 01:19:51.114936: Final processed output: 256
2025-02-13 01:19:51.118246: Normalized output: 256.0
2025-02-13 01:19:51.118893: Rust final output: 256.0
2025-02-13 01:19:51.121421: Final execution status: success
2025-02-13 01:19:51.121918: Final processed output: 256.0
2025-02-13 01:19:51.124849: Normalized output: 256.0
2025-02-13 01:19:51.127410: Normalized output: 256.0
2025-02-13 01:19:51.130195: Outputs match completely
2025-02-13 01:19:51.131669: Added comparison result for Case9: {'status': 'PASS', 'teacherinput': '8', 'detail': 'Student=256.0 vs Teacher=256'}
2025-02-13 01:19:51.132338: Processing test case 10
2025-02-13 01:19:51.133714: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:19:51.134141: Input values: 99
2025-02-13 01:19:51.136397: Created input file with content: 99

2025-02-13 01:19:51.240207: Rust compilation result: 
2025-02-13 01:19:51.385944: Rust execution output:
Enter a value for x:
thread 'main' panicked at /rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/num/mod.rs:326:5:
attempt to multiply with overflow
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
2025-02-13 01:19:51.387913: Processing raw output: Enter a value for x:
thread 'main' panicked at /rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/num/mod.rs:326:5:
attempt to multiply with overflow
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
2025-02-13 01:19:51.400383: Exception occurred: Evaluating expression "'thread 'main' panicked at /rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/num/mod.rs:326:5:' == ''" failed: SyntaxError: invalid syntax (<string>, line 1)
2025-02-13 01:19:51.401063: Final execution status: runtime_error
2025-02-13 01:19:51.401687: Final processed output: Evaluating expression "'thread 'main' panicked at /rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/num/mod.rs:326:5:' == ''" failed: SyntaxError: invalid syntax (<string>, line 1)
2025-02-13 01:19:51.410459: Added comparison result for Case10: {'status': 'runtime_error', 'teacherinput': '99', 'detail': 'Student=Evaluating expression "\'thread \'main\' panicked at /rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/num/mod.rs:326:5:\' == \'\'" failed: SyntaxError: invalid syntax (<string>, line 1) vs Teacher=512'}
2025-02-13 01:19:51.432001: Saved results to comparison_results.json
2025-02-13 01:19:57.414320: Starting test execution
2025-02-13 01:19:57.415400: Processing test case 1
2025-02-13 01:19:57.416631: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:19:57.417476: Input values: 0
2025-02-13 01:19:57.420021: Created input file with content: 0

2025-02-13 01:19:57.527915: Rust compilation result: 
2025-02-13 01:19:57.692911: Rust execution output:
Enter a value for x:
1
2025-02-13 01:19:57.694262: Processing raw output: Enter a value for x:
1
2025-02-13 01:19:57.714752: Final processed output: 1
2025-02-13 01:19:57.717818: Normalized output: 1.0
2025-02-13 01:19:57.718396: Rust final output: 1.0
2025-02-13 01:19:57.719850: Final execution status: success
2025-02-13 01:19:57.720350: Final processed output: 1.0
2025-02-13 01:19:57.723421: Normalized output: 1.0
2025-02-13 01:19:57.726226: Normalized output: 1.0
2025-02-13 01:19:57.729114: Outputs match completely
2025-02-13 01:19:57.730627: Added comparison result for Case1: {'status': 'PASS', 'teacherinput': '0', 'detail': 'Student=1.0 vs Teacher=1'}
2025-02-13 01:19:57.731326: Processing test case 2
2025-02-13 01:19:57.732752: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:19:57.733212: Input values: 1
2025-02-13 01:19:57.735583: Created input file with content: 1

2025-02-13 01:19:57.840269: Rust compilation result: 
2025-02-13 01:19:57.990523: Rust execution output:
Enter a value for x:
2
2025-02-13 01:19:57.991840: Processing raw output: Enter a value for x:
2
2025-02-13 01:19:58.003414: Final processed output: 2
2025-02-13 01:19:58.006137: Normalized output: 2.0
2025-02-13 01:19:58.006742: Rust final output: 2.0
2025-02-13 01:19:58.008041: Final execution status: success
2025-02-13 01:19:58.008520: Final processed output: 2.0
2025-02-13 01:19:58.017883: Normalized output: 2.0
2025-02-13 01:19:58.020168: Normalized output: 2.0
2025-02-13 01:19:58.022519: Outputs match completely
2025-02-13 01:19:58.023892: Added comparison result for Case2: {'status': 'PASS', 'teacherinput': '1', 'detail': 'Student=2.0 vs Teacher=2'}
2025-02-13 01:19:58.024538: Processing test case 3
2025-02-13 01:19:58.026004: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:19:58.026460: Input values: 2
2025-02-13 01:19:58.028551: Created input file with content: 2

2025-02-13 01:19:58.134817: Rust compilation result: 
2025-02-13 01:19:58.281630: Rust execution output:
Enter a value for x:
4
2025-02-13 01:19:58.283409: Processing raw output: Enter a value for x:
4
2025-02-13 01:19:58.297728: Final processed output: 4
2025-02-13 01:19:58.300439: Normalized output: 4.0
2025-02-13 01:19:58.301075: Rust final output: 4.0
2025-02-13 01:19:58.302279: Final execution status: success
2025-02-13 01:19:58.302665: Final processed output: 4.0
2025-02-13 01:19:58.305410: Normalized output: 4.0
2025-02-13 01:19:58.308090: Normalized output: 4.0
2025-02-13 01:19:58.310932: Outputs match completely
2025-02-13 01:19:58.312292: Added comparison result for Case3: {'status': 'PASS', 'teacherinput': '2', 'detail': 'Student=4.0 vs Teacher=4'}
2025-02-13 01:19:58.312994: Processing test case 4
2025-02-13 01:19:58.314440: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:19:58.314848: Input values: 3
2025-02-13 01:19:58.317020: Created input file with content: 3

2025-02-13 01:19:58.426246: Rust compilation result: 
2025-02-13 01:19:58.565337: Rust execution output:
Enter a value for x:
8
2025-02-13 01:19:58.567318: Processing raw output: Enter a value for x:
8
2025-02-13 01:19:58.579831: Final processed output: 8
2025-02-13 01:19:58.582272: Normalized output: 8.0
2025-02-13 01:19:58.582753: Rust final output: 8.0
2025-02-13 01:19:58.583957: Final execution status: success
2025-02-13 01:19:58.584443: Final processed output: 8.0
2025-02-13 01:19:58.586829: Normalized output: 8.0
2025-02-13 01:19:58.589003: Normalized output: 8.0
2025-02-13 01:19:58.591497: Outputs match completely
2025-02-13 01:19:58.592980: Added comparison result for Case4: {'status': 'PASS', 'teacherinput': '3', 'detail': 'Student=8.0 vs Teacher=8'}
2025-02-13 01:19:58.593622: Processing test case 5
2025-02-13 01:19:58.594882: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:19:58.595287: Input values: 4
2025-02-13 01:19:58.597546: Created input file with content: 4

2025-02-13 01:19:58.701267: Rust compilation result: 
2025-02-13 01:19:58.846638: Rust execution output:
Enter a value for x:
16
2025-02-13 01:19:58.848474: Processing raw output: Enter a value for x:
16
2025-02-13 01:19:58.862835: Final processed output: 16
2025-02-13 01:19:58.865583: Normalized output: 16.0
2025-02-13 01:19:58.866150: Rust final output: 16.0
2025-02-13 01:19:58.867528: Final execution status: success
2025-02-13 01:19:58.867985: Final processed output: 16.0
2025-02-13 01:19:58.870768: Normalized output: 16.0
2025-02-13 01:19:58.873721: Normalized output: 16.0
2025-02-13 01:19:58.876355: Outputs match completely
2025-02-13 01:19:58.877647: Added comparison result for Case5: {'status': 'PASS', 'teacherinput': '4', 'detail': 'Student=16.0 vs Teacher=16'}
2025-02-13 01:19:58.878303: Processing test case 6
2025-02-13 01:19:58.879748: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:19:58.880165: Input values: 5
2025-02-13 01:19:58.882203: Created input file with content: 5

2025-02-13 01:19:58.996720: Rust compilation result: 
2025-02-13 01:19:59.144194: Rust execution output:
Enter a value for x:
32
2025-02-13 01:19:59.146173: Processing raw output: Enter a value for x:
32
2025-02-13 01:19:59.162362: Final processed output: 32
2025-02-13 01:19:59.165383: Normalized output: 32.0
2025-02-13 01:19:59.165975: Rust final output: 32.0
2025-02-13 01:19:59.167528: Final execution status: success
2025-02-13 01:19:59.168048: Final processed output: 32.0
2025-02-13 01:19:59.170903: Normalized output: 32.0
2025-02-13 01:19:59.173527: Normalized output: 32.0
2025-02-13 01:19:59.176767: Outputs match completely
2025-02-13 01:19:59.178280: Added comparison result for Case6: {'status': 'PASS', 'teacherinput': '5', 'detail': 'Student=32.0 vs Teacher=32'}
2025-02-13 01:19:59.179003: Processing test case 7
2025-02-13 01:19:59.180401: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:19:59.180862: Input values: 6
2025-02-13 01:19:59.183182: Created input file with content: 6

2025-02-13 01:19:59.292572: Rust compilation result: 
2025-02-13 01:19:59.439459: Rust execution output:
Enter a value for x:
64
2025-02-13 01:19:59.441388: Processing raw output: Enter a value for x:
64
2025-02-13 01:19:59.458049: Final processed output: 64
2025-02-13 01:19:59.461197: Normalized output: 64.0
2025-02-13 01:19:59.461784: Rust final output: 64.0
2025-02-13 01:19:59.463244: Final execution status: success
2025-02-13 01:19:59.463727: Final processed output: 64.0
2025-02-13 01:19:59.466794: Normalized output: 64.0
2025-02-13 01:19:59.469412: Normalized output: 64.0
2025-02-13 01:19:59.472174: Outputs match completely
2025-02-13 01:19:59.473595: Added comparison result for Case7: {'status': 'PASS', 'teacherinput': '6', 'detail': 'Student=64.0 vs Teacher=64'}
2025-02-13 01:19:59.474398: Processing test case 8
2025-02-13 01:19:59.475830: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:19:59.476279: Input values: 7
2025-02-13 01:19:59.478604: Created input file with content: 7

2025-02-13 01:19:59.583496: Rust compilation result: 
2025-02-13 01:19:59.728626: Rust execution output:
Enter a value for x:
128
2025-02-13 01:19:59.730481: Processing raw output: Enter a value for x:
128
2025-02-13 01:19:59.747174: Final processed output: 128
2025-02-13 01:19:59.750155: Normalized output: 128.0
2025-02-13 01:19:59.750809: Rust final output: 128.0
2025-02-13 01:19:59.752439: Final execution status: success
2025-02-13 01:19:59.752918: Final processed output: 128.0
2025-02-13 01:19:59.755950: Normalized output: 128.0
2025-02-13 01:19:59.758593: Normalized output: 128.0
2025-02-13 01:19:59.761486: Outputs match completely
2025-02-13 01:19:59.762914: Added comparison result for Case8: {'status': 'PASS', 'teacherinput': '7', 'detail': 'Student=128.0 vs Teacher=128'}
2025-02-13 01:19:59.763669: Processing test case 9
2025-02-13 01:19:59.765679: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:19:59.766114: Input values: 8
2025-02-13 01:19:59.768320: Created input file with content: 8

2025-02-13 01:19:59.872224: Rust compilation result: 
2025-02-13 01:20:00.053219: Rust execution output:
Enter a value for x:
256
2025-02-13 01:20:00.054859: Processing raw output: Enter a value for x:
256
2025-02-13 01:20:00.073896: Final processed output: 256
2025-02-13 01:20:00.076525: Normalized output: 256.0
2025-02-13 01:20:00.077034: Rust final output: 256.0
2025-02-13 01:20:00.078271: Final execution status: success
2025-02-13 01:20:00.078678: Final processed output: 256.0
2025-02-13 01:20:00.081169: Normalized output: 256.0
2025-02-13 01:20:00.083370: Normalized output: 256.0
2025-02-13 01:20:00.085699: Outputs match completely
2025-02-13 01:20:00.086976: Added comparison result for Case9: {'status': 'PASS', 'teacherinput': '8', 'detail': 'Student=256.0 vs Teacher=256'}
2025-02-13 01:20:00.087572: Processing test case 10
2025-02-13 01:20:00.088757: Executing code in rust:
use std::io;

fn main() {
    println!("Enter a value for x:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let x: u32 = input.trim().parse().expect("Please enter a valid number");
    let result: i32 = 2i32.pow(x);
    println!("{}", result);
}
2025-02-13 01:20:00.089132: Input values: 10
2025-02-13 01:20:00.091170: Created input file with content: 10

2025-02-13 01:20:00.195941: Rust compilation result: 
2025-02-13 01:20:00.349546: Rust execution output:
Enter a value for x:
1024
2025-02-13 01:20:00.351556: Processing raw output: Enter a value for x:
1024
2025-02-13 01:20:00.369385: Final processed output: 1024
2025-02-13 01:20:00.373176: Normalized output: 1024.0
2025-02-13 01:20:00.373812: Rust final output: 1024.0
2025-02-13 01:20:00.375380: Final execution status: success
2025-02-13 01:20:00.375890: Final processed output: 1024.0
2025-02-13 01:20:00.379072: Normalized output: 1024.0
2025-02-13 01:20:00.381785: Normalized output: 1024.0
2025-02-13 01:20:00.384680: Outputs match completely
2025-02-13 01:20:00.386076: Added comparison result for Case10: {'status': 'PASS', 'teacherinput': '10', 'detail': 'Student=1024.0 vs Teacher=1024'}
2025-02-13 01:20:00.387264: Saved results to comparison_results.json
