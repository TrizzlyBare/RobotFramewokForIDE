<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.1.1 (Python 3.11.4 on darwin)" generated="2025-01-27T04:00:37.275984" rpa="false" schemaversion="5">
<suite id="s1" name="Case1" source="/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/Case1.robot">
<test id="s1-t1" name="Compare Student And Teacher Default Codes" line="119">
<kw name="Setup Test Environment">
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-01-27T04:00:37.293451" level="INFO" html="true">Created directory '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/temp"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/temp&lt;/a&gt;'.</msg>
<arg>${TEMP_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-01-27T04:00:37.293212" elapsed="0.000282"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.293635" level="INFO">Created temporary directory: ./temp</msg>
<arg>Created temporary directory: ${TEMP_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-01-27T04:00:37.293564" elapsed="0.000094"/>
</kw>
<status status="PASS" start="2025-01-27T04:00:37.292863" elapsed="0.000827"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.293981" level="INFO">${students_data} = {'id': 2, 'title': 'Square Example', 'language': 'python', 'tag_list': ['other'], 'description': 'Write a Python function to calculate square of input', 'example': 'def factorial(n):\r\n    pass\r\n\r...</msg>
<var>${students_data}</var>
<arg>json.load(open('${STUDENTS_JSON}'))</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-01-27T04:00:37.293767" elapsed="0.000225"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.294261" level="INFO">${teacher_data} = {'id': 2, 'title': 'Square Example', 'language': 'python', 'tag_list': ['other'], 'description': 'Write a Python function to calculate square of input', 'example': 'def factorial(n):\r\n    pass\r\n\r...</msg>
<var>${teacher_data}</var>
<arg>json.load(open('${TEACHER_JSON}'))</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-01-27T04:00:37.294058" elapsed="0.000213"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.294616" level="INFO">${language} = python</msg>
<var>${language}</var>
<arg>${students_data['language'].lower()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-27T04:00:37.294333" elapsed="0.000294"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.294893" level="INFO">${student_code} = def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)

print(factorial(5))  # Output: 120
</msg>
<var>${student_code}</var>
<arg>${students_data['defaultCode']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-27T04:00:37.294704" elapsed="0.000200"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.295191" level="INFO">${teacher_code} = def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)

print(factorial(5))  # Output: 120
</msg>
<var>${teacher_code}</var>
<arg>${teacher_data['defaultCode']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-27T04:00:37.294987" elapsed="0.000217"/>
</kw>
<kw name="Create Source File">
<kw name="Set Variable If" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.295505" level="INFO">${ext} = .py</msg>
<var>${ext}</var>
<arg>'${language}' == 'python'</arg>
<arg>.py</arg>
<arg>'${language}' == 'cpp'</arg>
<arg>.cpp</arg>
<arg>'${language}' == 'rust'</arg>
<arg>.rs</arg>
<arg>'${language}' == 'javascript'</arg>
<arg>.js</arg>
<arg>'${language}' == 'java'</arg>
<arg>.java</arg>
<arg>.txt</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="PASS" start="2025-01-27T04:00:37.295430" elapsed="0.000085"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.295671" level="INFO">${filename} = code_2237</msg>
<var>${filename}</var>
<arg>f'code_{random.randint(1000, 9999)}'</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-01-27T04:00:37.295569" elapsed="0.000112"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.295798" level="INFO">${full_path} = ./temp/code_2237.py</msg>
<var>${full_path}</var>
<arg>${TEMP_DIR}/${filename}${ext}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-27T04:00:37.295723" elapsed="0.000084"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-01-27T04:00:37.296078" level="INFO" html="true">Created file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/temp/code_2237.py"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/temp/code_2237.py&lt;/a&gt;'.</msg>
<arg>${full_path}</arg>
<arg>${code}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-01-27T04:00:37.295845" elapsed="0.000256"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.296199" level="INFO">Created python source file: ./temp/code_2237.py</msg>
<arg>Created ${language} source file: ${full_path}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-01-27T04:00:37.296142" elapsed="0.000072"/>
</kw>
<return>
<value>${full_path}</value>
<status status="PASS" start="2025-01-27T04:00:37.296234" elapsed="0.000021"/>
</return>
<msg time="2025-01-27T04:00:37.296306" level="INFO">${student_file} = ./temp/code_2237.py</msg>
<var>${student_file}</var>
<arg>${student_code}</arg>
<arg>${language}</arg>
<status status="PASS" start="2025-01-27T04:00:37.295297" elapsed="0.001016"/>
</kw>
<kw name="Create Source File">
<kw name="Set Variable If" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.296576" level="INFO">${ext} = .py</msg>
<var>${ext}</var>
<arg>'${language}' == 'python'</arg>
<arg>.py</arg>
<arg>'${language}' == 'cpp'</arg>
<arg>.cpp</arg>
<arg>'${language}' == 'rust'</arg>
<arg>.rs</arg>
<arg>'${language}' == 'javascript'</arg>
<arg>.js</arg>
<arg>'${language}' == 'java'</arg>
<arg>.java</arg>
<arg>.txt</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="PASS" start="2025-01-27T04:00:37.296511" elapsed="0.000073"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.296722" level="INFO">${filename} = code_2550</msg>
<var>${filename}</var>
<arg>f'code_{random.randint(1000, 9999)}'</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-01-27T04:00:37.296632" elapsed="0.000098"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.296838" level="INFO">${full_path} = ./temp/code_2550.py</msg>
<var>${full_path}</var>
<arg>${TEMP_DIR}/${filename}${ext}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-27T04:00:37.296769" elapsed="0.000076"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-01-27T04:00:37.297079" level="INFO" html="true">Created file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/temp/code_2550.py"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/temp/code_2550.py&lt;/a&gt;'.</msg>
<arg>${full_path}</arg>
<arg>${code}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-01-27T04:00:37.296882" elapsed="0.000216"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.297190" level="INFO">Created python source file: ./temp/code_2550.py</msg>
<arg>Created ${language} source file: ${full_path}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-01-27T04:00:37.297137" elapsed="0.000091"/>
</kw>
<return>
<value>${full_path}</value>
<status status="PASS" start="2025-01-27T04:00:37.297245" elapsed="0.000013"/>
</return>
<msg time="2025-01-27T04:00:37.297304" level="INFO">${teacher_file} = ./temp/code_2550.py</msg>
<var>${teacher_file}</var>
<arg>${teacher_code}</arg>
<arg>${language}</arg>
<status status="PASS" start="2025-01-27T04:00:37.296390" elapsed="0.000921"/>
</kw>
<kw name="Execute Code">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Execute Python Code">
<kw name="Run Process" owner="Process">
<msg time="2025-01-27T04:00:37.297910" level="INFO">Starting process:
python ./temp/code_2237.py</msg>
<msg time="2025-01-27T04:00:37.300890" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-01-27T04:00:37.315920" level="INFO">Process completed.</msg>
<msg time="2025-01-27T04:00:37.316094" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${PYTHON_CMD}</arg>
<arg>${file_path}</arg>
<arg>shell=True</arg>
<arg>stderr=STDOUT</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-01-27T04:00:37.297808" elapsed="0.018304"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" start="2025-01-27T04:00:37.316220" elapsed="0.000061"/>
</return>
<arg>${file_path}</arg>
<status status="PASS" start="2025-01-27T04:00:37.297710" elapsed="0.018674"/>
</kw>
<msg time="2025-01-27T04:00:37.316423" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>'${language}' == 'python'</arg>
<arg>Execute Python Code</arg>
<arg>${file_path}</arg>
<arg>ELSE IF</arg>
<arg>'${language}' == 'javascript'</arg>
<arg>Execute JavaScript Code</arg>
<arg>${file_path}</arg>
<arg>ELSE IF</arg>
<arg>'${language}' == 'cpp'</arg>
<arg>Compile And Execute CPP Code</arg>
<arg>${file_path}</arg>
<arg>ELSE IF</arg>
<arg>'${language}' == 'rust'</arg>
<arg>Compile And Execute Rust Code</arg>
<arg>${file_path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported language: ${language}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-01-27T04:00:37.297603" elapsed="0.018829"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" start="2025-01-27T04:00:37.316470" elapsed="0.000013"/>
</return>
<msg time="2025-01-27T04:00:37.316543" level="INFO">${student_result} = &lt;result object with rc 0&gt;</msg>
<var>${student_result}</var>
<arg>${student_file}</arg>
<arg>${language}</arg>
<status status="PASS" start="2025-01-27T04:00:37.297378" elapsed="0.019174"/>
</kw>
<kw name="Execute Code">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Execute Python Code">
<kw name="Run Process" owner="Process">
<msg time="2025-01-27T04:00:37.318070" level="INFO">Starting process:
python ./temp/code_2550.py</msg>
<msg time="2025-01-27T04:00:37.320057" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-01-27T04:00:37.334967" level="INFO">Process completed.</msg>
<msg time="2025-01-27T04:00:37.335171" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${PYTHON_CMD}</arg>
<arg>${file_path}</arg>
<arg>shell=True</arg>
<arg>stderr=STDOUT</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-01-27T04:00:37.317262" elapsed="0.017925"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" start="2025-01-27T04:00:37.335295" elapsed="0.000076"/>
</return>
<arg>${file_path}</arg>
<status status="PASS" start="2025-01-27T04:00:37.317162" elapsed="0.018332"/>
</kw>
<msg time="2025-01-27T04:00:37.335534" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>'${language}' == 'python'</arg>
<arg>Execute Python Code</arg>
<arg>${file_path}</arg>
<arg>ELSE IF</arg>
<arg>'${language}' == 'javascript'</arg>
<arg>Execute JavaScript Code</arg>
<arg>${file_path}</arg>
<arg>ELSE IF</arg>
<arg>'${language}' == 'cpp'</arg>
<arg>Compile And Execute CPP Code</arg>
<arg>${file_path}</arg>
<arg>ELSE IF</arg>
<arg>'${language}' == 'rust'</arg>
<arg>Compile And Execute Rust Code</arg>
<arg>${file_path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported language: ${language}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-01-27T04:00:37.317006" elapsed="0.018540"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" start="2025-01-27T04:00:37.335586" elapsed="0.000014"/>
</return>
<msg time="2025-01-27T04:00:37.335672" level="INFO">${teacher_result} = &lt;result object with rc 0&gt;</msg>
<var>${teacher_result}</var>
<arg>${teacher_file}</arg>
<arg>${language}</arg>
<status status="PASS" start="2025-01-27T04:00:37.316782" elapsed="0.018901"/>
</kw>
<kw name="Prepare Comparison Results">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.336581" level="INFO">${student_output} = 120</msg>
<var>${student_output}</var>
<arg>${student_result.stdout.strip()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-27T04:00:37.336251" elapsed="0.000343"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.336867" level="INFO">${teacher_output} = 120</msg>
<var>${teacher_output}</var>
<arg>${teacher_result.stdout.strip()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-27T04:00:37.336651" elapsed="0.000225"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.337083" level="INFO">${test_status} = PASS</msg>
<var>${test_status}</var>
<arg>'PASS' if float(${student_output}) == float(${teacher_output}) else 'FAIL'</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-01-27T04:00:37.336930" elapsed="0.000163"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.338303" level="INFO">${result} = {'status': 'PASS', 'details': 'Square Example', 'language': 'python', 'student_output': '120', 'teacher_output': '120', 'student_code': 'def factorial(n):\r\n    if n == 0 or n == 1:\r\n        return...</msg>
<var>${result}</var>
<arg>status=${test_status}</arg>
<arg>details=${students}[title]</arg>
<arg>language=${students}[language]</arg>
<arg>student_output=${student_output}</arg>
<arg>teacher_output=${teacher_output}</arg>
<arg>student_code=${students}[defaultCode]</arg>
<arg>teacher_code=${teacher_data}[defaultCode]</arg>
<arg>student_exit_code=${student_result.rc}</arg>
<arg>teacher_exit_code=${teacher_result.rc}</arg>
<arg>student_stderr=${student_result.stderr}</arg>
<arg>teacher_stderr=${teacher_result.stderr}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-01-27T04:00:37.337149" elapsed="0.001169"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.338456" level="INFO">${results} = [{'status': 'PASS', 'details': 'Square Example', 'language': 'python', 'student_output': '120', 'teacher_output': '120', 'student_code': 'def factorial(n):\r\n    if n == 0 or n == 1:\r\n        retur...</msg>
<var>${results}</var>
<arg>${result}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-01-27T04:00:37.338383" elapsed="0.000082"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.339962" level="INFO">${json_string} = [
  {
    "status": "PASS",
    "details": "Square Example",
    "language": "python",
    "student_output": "120",
    "teacher_output": "120",
    "student_code": "def factorial(n):\r\n    if n == 0...</msg>
<var>${json_string}</var>
<arg>json.dumps($results, indent=2)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-01-27T04:00:37.338509" elapsed="0.001465"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-01-27T04:00:37.340422" level="INFO" html="true">Created file '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/comparison_results.json"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/comparison_results.json&lt;/a&gt;'.</msg>
<arg>${RESULTS_FILE}</arg>
<arg>${json_string}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-01-27T04:00:37.340076" elapsed="0.000370"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" start="2025-01-27T04:00:37.340468" elapsed="0.000019"/>
</return>
<msg time="2025-01-27T04:00:37.340560" level="INFO">${comparison_result} = {'status': 'PASS', 'details': 'Square Example', 'language': 'python', 'student_output': '120', 'teacher_output': '120', 'student_code': 'def factorial(n):\r\n    if n == 0 or n == 1:\r\n        return...</msg>
<var>${comparison_result}</var>
<arg>${students_data}</arg>
<arg>${student_result}</arg>
<arg>${teacher_result}</arg>
<arg>${teacher_data}</arg>
<status status="PASS" start="2025-01-27T04:00:37.335980" elapsed="0.004592"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.341035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${student_result.rc}</arg>
<arg>0</arg>
<arg>msg=Student code execution failed</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-01-27T04:00:37.340653" elapsed="0.000410"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.341414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${teacher_result.rc}</arg>
<arg>0</arg>
<arg>msg=Teacher code execution failed</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-01-27T04:00:37.341127" elapsed="0.000312"/>
</kw>
<kw name="Convert To Number" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.341714" level="INFO">${student_num} = 120.0</msg>
<var>${student_num}</var>
<arg>${student_result.stdout.strip()}</arg>
<doc>Converts the given item to a floating point number.</doc>
<status status="PASS" start="2025-01-27T04:00:37.341503" elapsed="0.000220"/>
</kw>
<kw name="Convert To Number" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.341970" level="INFO">${teacher_num} = 120.0</msg>
<var>${teacher_num}</var>
<arg>${teacher_result.stdout.strip()}</arg>
<doc>Converts the given item to a floating point number.</doc>
<status status="PASS" start="2025-01-27T04:00:37.341777" elapsed="0.000201"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${student_num}</arg>
<arg>${teacher_num}</arg>
<arg>msg=Outputs differ</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-27T04:00:37.342031" elapsed="0.000090"/>
</kw>
<kw name="Cleanup Test Environment">
<kw name="Remove Directory" owner="OperatingSystem">
<msg time="2025-01-27T04:00:37.342580" level="INFO" html="true">Removed directory '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/temp"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/temp&lt;/a&gt;'.</msg>
<arg>${TEMP_DIR}</arg>
<arg>recursive=True</arg>
<doc>Removes the directory pointed to by the given ``path``.</doc>
<status status="PASS" start="2025-01-27T04:00:37.342280" elapsed="0.000320"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.342750" level="FAIL">Evaluating expression 'File Exists' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</msg>
<arg>File Exists</arg>
<arg>${RESULTS_FILE}</arg>
<arg>Remove File</arg>
<arg>${RESULTS_FILE}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="FAIL" start="2025-01-27T04:00:37.342646" elapsed="0.000242">Evaluating expression 'File Exists' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</status>
</kw>
<status status="FAIL" start="2025-01-27T04:00:37.342196" elapsed="0.000759">Evaluating expression 'File Exists' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</status>
</kw>
<kw name="Cleanup Test Environment" type="TEARDOWN">
<kw name="Remove Directory" owner="OperatingSystem">
<msg time="2025-01-27T04:00:37.343349" level="INFO" html="true">Directory '&lt;a href="file:///Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/temp"&gt;/Users/tanakrit/Documents/GitHub/RobotFramewokForIDE/NewFormatOfRobot/temp&lt;/a&gt;' does not exist.</msg>
<arg>${TEMP_DIR}</arg>
<arg>recursive=True</arg>
<doc>Removes the directory pointed to by the given ``path``.</doc>
<status status="PASS" start="2025-01-27T04:00:37.343223" elapsed="0.000150"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<msg time="2025-01-27T04:00:37.343498" level="FAIL">Evaluating expression 'File Exists' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</msg>
<arg>File Exists</arg>
<arg>${RESULTS_FILE}</arg>
<arg>Remove File</arg>
<arg>${RESULTS_FILE}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="FAIL" start="2025-01-27T04:00:37.343420" elapsed="0.000133">Evaluating expression 'File Exists' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</status>
</kw>
<status status="FAIL" start="2025-01-27T04:00:37.343128" elapsed="0.000486">Evaluating expression 'File Exists' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</status>
</kw>
<status status="FAIL" start="2025-01-27T04:00:37.292470" elapsed="0.051181">Evaluating expression 'File Exists' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)

Also teardown failed:
Evaluating expression 'File Exists' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</status>
</test>
<status status="FAIL" start="2025-01-27T04:00:37.276620" elapsed="0.067237"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Case1">Case1</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
